# hltGetConfiguration /users/elfontan/2024Scouting/CMSSW_14_0_0_GRun_V107/HLT/V5 --globaltag auto:phase1_2024_realistic --mc --unprescale --max-events 100 --input /store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/005264ab-2a76-4f83-ac29-8e27a73cdc7c.root --eras Run3 --l1-emulator uGT --l1 L1Menu_Collisions2024_v1_1_0_xml --paths HLTriggerFirstPath,HLT_CascadeMu100_v11,HLT_CscCluster100_Ele5_v2,HLT_CscCluster100_Mu5_v2,HLT_CscCluster100_PNetTauhPFJet10_Loose_v2,HLT_CscCluster50_Photon20Unseeded_v2,HLT_CscCluster50_Photon30Unseeded_v2,HLT_CscCluster_Loose_v8,HLT_CscCluster_Medium_v8,HLT_CscCluster_Tight_v8,HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v4,HLT_DoubleCscCluster100_v5,HLT_DoubleCscCluster75_v5,HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8,HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9,HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8,HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8,HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8,HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9,HLT_DoubleL2Mu23NoVtx_2Cha_v9,HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9,HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9,HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9,HLT_DoubleL2Mu25NoVtx_2Cha_v9,HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9,HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9,HLT_DoubleL2Mu50_v9,HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8,HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8,HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9,HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8,HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8,HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8,HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v2,HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v2,HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v18,HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v18,HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v18,HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v18,HLT_DoubleMu43NoFiltersNoVtx_v12,HLT_DoubleMu48NoFiltersNoVtx_v12,HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v16,HLT_HighPtTkMu100_v10,HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v9,HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v2,HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v2,HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v2,HLT_IsoMu20_v23,HLT_IsoMu24_OneProng32_v5,HLT_IsoMu24_TwoProngs35_v9,HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v9,HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9,HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v8,HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v8,HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v4,HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v8,HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v8,HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v9,HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v8,HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v2,HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v2,HLT_IsoMu24_eta2p1_PFHT250_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v2,HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v2,HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v2,HLT_IsoMu24_eta2p1_v23,HLT_IsoMu24_v21,HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v4,HLT_IsoMu27_v24,HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5,HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v8,HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5,HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5,HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v8,HLT_IsoTrk200_L1SingleMuShower_v2,HLT_IsoTrk400_L1SingleMuShower_v2,HLT_L1CSCShower_DTCluster50_v8,HLT_L1CSCShower_DTCluster75_v8,HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v1,HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v1,HLT_L3Mu30NoVtx_DxyMin0p01cm_v1,HLT_L3Mu50NoVtx_DxyMin0p01cm_v1,HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8,HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v1,HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v23,HLT_Mu15_IsoVVVL_PFHT450_v23,HLT_Mu15_IsoVVVL_PFHT600_v27,HLT_Mu15_v11,HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v13,HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v1,HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v1,HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v1,HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v2,HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v13,HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v23,HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v22,HLT_Mu17_TrkIsoVVL_v21,HLT_Mu17_v21,HLT_Mu18_Mu9_SameSign_v12,HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v11,HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v11,HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v11,HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v11,HLT_Mu19_TrkIsoVVL_v12,HLT_Mu19_v12,HLT_Mu20_v20,HLT_Mu27_v21,HLT_Mu37_TkMu27_v13,HLT_Mu3_PFJet40_v24,HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v10,HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v10,HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v10,HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v10,HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v10,HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v10,HLT_Mu50_IsoVVVL_PFHT450_v23,HLT_Mu50_L1SingleMuShower_v7,HLT_Mu50_v21,HLT_Mu55_v11,HLT_Mu8_TrkIsoVVL_v20,HLT_Mu8_v20,HLT_TripleMu_10_5_5_DZ_v18,HLT_TripleMu_12_10_5_v18,HLT_TripleMu_5_3_3_Mass3p8_DCA_v11,HLT_TripleMu_5_3_3_Mass3p8_DZ_v16,HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v14,Dataset_Muon0,Dataset_Muon1,DST_PFScouting_JetHT_v2,DST_PFScouting_DoubleEG_v2,DST_PFScouting_DoubleMuon_v2,DST_PFScouting_SingleMuon_v2,DST_PFScouting_DatasetMuon_v2,DST_PFScouting_AXONominal_v2,DST_PFScouting_AXOTight_v2,Dataset_ScoutingPFRun3,ScoutingPFOutput --full --offline --no-output

# /users/elfontan/2024Scouting/CMSSW_14_0_0_GRun_V107/HLT/V5 (CMSSW_14_0_5)

import FWCore.ParameterSet.Config as cms

from HeterogeneousCore.CUDACore.SwitchProducerCUDA import SwitchProducerCUDA

from Configuration.Eras.Era_Run3_cff import Run3
process = cms.Process( "HLTX", Run3 )

process.load("Configuration.StandardSequences.Accelerators_cff")

process.HLTConfigVersion = cms.PSet(
  tableName = cms.string("/users/elfontan/2024Scouting/CMSSW_14_0_0_GRun_V107/HLT/V5")
)

process.HLTIter4PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter4PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPvClusterComparerForIT = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 1.0 )
)
process.HLTPSetMuonCkfTrajectoryBuilder = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  ComponentType = cms.string( "MuonCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( False ),
  deltaPhi = cms.double( -1.0 ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0HighPtTkMuPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPvClusterComparerForBTag = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 0.1 )
)
process.HLTIter2GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutTight = cms.PSet(  value = cms.double( 1945.0 ) )
process.HLTPSetMuonTrackingRegionBuilder8356 = cms.PSet( 
  Rescale_Dz = cms.double( 3.0 ),
  Pt_fixed = cms.bool( False ),
  Eta_fixed = cms.bool( False ),
  Eta_min = cms.double( 0.1 ),
  DeltaZ = cms.double( 15.9 ),
  maxRegions = cms.int32( 2 ),
  EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
  UseVertex = cms.bool( False ),
  Z_fixed = cms.bool( True ),
  PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
  PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
  Rescale_phi = cms.double( 3.0 ),
  DeltaEta = cms.double( 0.2 ),
  precise = cms.bool( True ),
  OnDemand = cms.int32( -1 ),
  EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
  MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
  vertexCollection = cms.InputTag( "pixelVertices" ),
  Pt_min = cms.double( 1.5 ),
  beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
  Phi_fixed = cms.bool( False ),
  DeltaR = cms.double( 0.2 ),
  input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
  DeltaPhi = cms.double( 0.2 ),
  Phi_min = cms.double( 0.1 ),
  Rescale_eta = cms.double( 3.0 )
)
process.HLTIter2PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetMuTrackJpsiTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetTrajectoryBuilderForGsfElectrons = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 90.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "hltESPBwdElectronPropagator" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryFilterForElectrons" ) ),
  propagatorAlong = cms.string( "hltESPFwdElectronPropagator" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTSiStripClusterChargeCutNone = cms.PSet(  value = cms.double( -1.0 ) )
process.HLTPSetMuonCkfTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter1PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSeedFromProtoTracks = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
process.HLTPSetMuTrackJpsiTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 10.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 8 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSeedFromConsecutiveHitsCreator = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterial" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
process.HLTSiStripClusterChargeCutForHI = cms.PSet(  value = cms.double( 2069.0 ) )
process.HLTPSetTrajectoryFilterForElectrons = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( -1 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0HighPtTkMuPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter1GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) )
)
process.HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTSiStripClusterChargeCutLoose = cms.PSet(  value = cms.double( 1620.0 ) )
process.HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "StripSubClusterShapeTrajectoryFilter" ),
  subclusterCutSN = cms.double( 12.0 ),
  trimMaxADC = cms.double( 30.0 ),
  seedCutMIPs = cms.double( 0.35 ),
  subclusterCutMIPs = cms.double( 0.45 ),
  subclusterWindow = cms.double( 0.7 ),
  maxNSat = cms.uint32( 3 ),
  trimMaxFracNeigh = cms.double( 0.25 ),
  maxTrimmedSizeDiffNeg = cms.double( 1.0 ),
  seedCutSN = cms.double( 7.0 ),
  layerMask = cms.PSet( 
    TOB = cms.bool( False ),
    TIB = cms.vuint32( 1, 2 ),
    TID = cms.vuint32( 1, 2 ),
    TEC = cms.bool( False )
  ),
  maxTrimmedSizeDiffPos = cms.double( 0.7 ),
  trimMaxFracTotal = cms.double( 0.15 )
)
process.HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetInitialStepTrajectoryFilterPreSplittingForFullTrackingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterBasePreSplittingForFullTrackingPPOnAA" )    ),
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA" )    )
  )
)
process.HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetHighPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelPairStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetPixelLessStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetTobTecStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilterForFullTrackingPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetJetCoreStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetPixelPairStepTrajectoryFilterInOutForFullTrackingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetMixedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedQuadStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetDetachedTripletStepTrajectoryBuilderForFullTrackingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilterForFullTrackingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  maxCCCLostHits = cms.int32( 0 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minPt = cms.double( 3.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetInitialStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 2.8 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetLowPtQuadStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 3.5 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 ),
  highEtaSwitch = cms.double( 5.0 ),
  minHitsAtHighEta = cms.int32( 5 )
)
process.HLTPSetHighPtTripletStepTrajectoryBuilderForDmesonPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterForDmesonPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True ),
  seedAs5DHit = cms.bool( False )
)
process.streams = cms.PSet( 
  ALCALowPtJet = cms.vstring( 'AlCaLowPtJet' ),
  ALCALumiPixelsCountsExpress = cms.vstring( 'AlCaLumiPixelsCountsExpress' ),
  ALCALumiPixelsCountsPrompt = cms.vstring( 'AlCaLumiPixelsCountsPrompt' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  ALCAPPSExpress = cms.vstring( 'AlCaPPSExpress' ),
  ALCAPPSPrompt = cms.vstring( 'AlCaPPSPrompt' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcal' ),
  DQM = cms.vstring( 'OnlineMonitor' ),
  DQMCalibration = cms.vstring( 'TestEnablesEcalHcalDQM' ),
  DQMEventDisplay = cms.vstring( 'EventDisplay' ),
  DQMGPUvsCPU = cms.vstring( 'DQMGPUvsCPU' ),
  DQMOnlineBeamspot = cms.vstring( 'DQMOnlineBeamspot' ),
  DQMPPSRandom = cms.vstring( 'DQMPPSRandom' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  ExpressAlignment = cms.vstring( 'ExpressAlignment' ),
  HLTMonitor = cms.vstring( 'HLTMonitor' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'ParkingDoubleMuonLowMass0',
    'ParkingDoubleMuonLowMass1' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'ParkingDoubleMuonLowMass2',
    'ParkingDoubleMuonLowMass3' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'ParkingDoubleMuonLowMass4',
    'ParkingDoubleMuonLowMass5' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'ParkingDoubleMuonLowMass6',
    'ParkingDoubleMuonLowMass7' ),
  ParkingHH = cms.vstring( 'ParkingHH' ),
  ParkingLLP = cms.vstring( 'ParkingLLP' ),
  ParkingSingleMuon0 = cms.vstring( 'ParkingSingleMuon0',
    'ParkingSingleMuon1' ),
  ParkingSingleMuon1 = cms.vstring( 'ParkingSingleMuon2',
    'ParkingSingleMuon3' ),
  ParkingSingleMuon2 = cms.vstring( 'ParkingSingleMuon4',
    'ParkingSingleMuon5' ),
  ParkingSingleMuon3 = cms.vstring( 'ParkingSingleMuon6',
    'ParkingSingleMuon7' ),
  ParkingVBF0 = cms.vstring( 'ParkingVBF0',
    'ParkingVBF1' ),
  ParkingVBF1 = cms.vstring( 'ParkingVBF2',
    'ParkingVBF3' ),
  ParkingVBF2 = cms.vstring( 'ParkingVBF4',
    'ParkingVBF5' ),
  ParkingVBF3 = cms.vstring( 'ParkingVBF6',
    'ParkingVBF7' ),
  PhysicsCommissioning = cms.vstring( 'Commissioning',
    'Cosmics',
    'HLTPhysics',
    'HcalNZS',
    'MonteCarlo',
    'NoBPTX',
    'ZeroBias' ),
  PhysicsDispJetBTagMuEGTau = cms.vstring( 'BTagMu',
    'DisplacedJet',
    'MuonEG',
    'Tau' ),
  PhysicsEGamma0 = cms.vstring( 'EGamma0' ),
  PhysicsEGamma1 = cms.vstring( 'EGamma1' ),
  PhysicsHLTPhysics0 = cms.vstring( 'EphemeralHLTPhysics0',
    'EphemeralHLTPhysics1' ),
  PhysicsHLTPhysics1 = cms.vstring( 'EphemeralHLTPhysics2',
    'EphemeralHLTPhysics3' ),
  PhysicsHLTPhysics2 = cms.vstring( 'EphemeralHLTPhysics4',
    'EphemeralHLTPhysics5' ),
  PhysicsHLTPhysics3 = cms.vstring( 'EphemeralHLTPhysics6',
    'EphemeralHLTPhysics7' ),
  PhysicsJetMET0 = cms.vstring( 'JetMET0' ),
  PhysicsJetMET1 = cms.vstring( 'JetMET1' ),
  PhysicsMuon0 = cms.vstring( 'Muon0' ),
  PhysicsMuon1 = cms.vstring( 'Muon1' ),
  PhysicsScoutingPFMonitor = cms.vstring( 'ScoutingPFMonitor' ),
  PhysicsZeroBias0 = cms.vstring( 'EphemeralZeroBias0',
    'EphemeralZeroBias1' ),
  PhysicsZeroBias1 = cms.vstring( 'EphemeralZeroBias2',
    'EphemeralZeroBias3' ),
  PhysicsZeroBias2 = cms.vstring( 'EphemeralZeroBias4',
    'EphemeralZeroBias5' ),
  PhysicsZeroBias3 = cms.vstring( 'EphemeralZeroBias6',
    'EphemeralZeroBias7' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  ScoutingPF = cms.vstring( 'ScoutingPFRun3' )
)
process.datasets = cms.PSet( 
  AlCaLowPtJet = cms.vstring( 'AlCa_AK8PFJet40_v23',
    'AlCa_PFJet40_v28' ),
  AlCaLumiPixelsCountsExpress = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v8' ),
  AlCaLumiPixelsCountsPrompt = cms.vstring( 'AlCa_LumiPixelsCounts_Random_v8',
    'AlCa_LumiPixelsCounts_ZeroBias_v10' ),
  AlCaP0 = cms.vstring( 'AlCa_EcalEtaEBonly_v22',
    'AlCa_EcalEtaEEonly_v22',
    'AlCa_EcalPi0EBonly_v22',
    'AlCa_EcalPi0EEonly_v22' ),
  AlCaPPSExpress = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v7',
    'HLT_PPSMaxTracksPerRP4_v7' ),
  AlCaPPSPrompt = cms.vstring( 'HLT_PPSMaxTracksPerArm1_v7',
    'HLT_PPSMaxTracksPerRP4_v7' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSym_v17' ),
  BTagMu = cms.vstring( 'HLT_BTagMu_AK4DiJet110_Mu5_v21',
    'HLT_BTagMu_AK4DiJet170_Mu5_v20',
    'HLT_BTagMu_AK4DiJet20_Mu5_v21',
    'HLT_BTagMu_AK4DiJet40_Mu5_v21',
    'HLT_BTagMu_AK4DiJet70_Mu5_v21',
    'HLT_BTagMu_AK4Jet300_Mu5_v20',
    'HLT_BTagMu_AK8DiJet170_Mu5_v17',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v10',
    'HLT_BTagMu_AK8Jet300_Mu5_v20' ),
  Commissioning = cms.vstring( 'HLT_IsoTrackHB_v12',
    'HLT_IsoTrackHE_v12',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v7',
    'HLT_PFJet40_GPUvsCPU_v5' ),
  Cosmics = cms.vstring( 'HLT_L1SingleMuCosmics_v6' ),
  DQMGPUvsCPU = cms.vstring( 'DQM_EcalReconstruction_v10',
    'DQM_HcalReconstruction_v8',
    'DQM_PixelReconstruction_v10' ),
  DQMOnlineBeamspot = cms.vstring( 'HLT_HT300_Beamspot_v19',
    'HLT_ZeroBias_Beamspot_v12' ),
  DQMPPSRandom = cms.vstring( 'HLT_PPSRandom_v1' ),
  DisplacedJet = cms.vstring( 'HLT_CaloMET60_DTCluster50_v9',
    'HLT_CaloMET60_DTClusterNoMB1S50_v9',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v2',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v2',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v6',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v6',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v5',
    'HLT_HT350_v5',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v21',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v9',
    'HLT_HT425_v17',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v8',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v5',
    'HLT_HT550_DisplacedDijet60_Inclusive_v21',
    'HLT_L1MET_DTCluster50_v9',
    'HLT_L1MET_DTClusterNoMB1S50_v9',
    'HLT_L1Mu6HT240_v7',
    'HLT_L1SingleLLPJet_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v5',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v9',
    'HLT_PFJet200_TimeGt2p5ns_v6',
    'HLT_PFJet200_TimeLtNeg2p5ns_v6' ),
  EGamma0 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v12',
    'HLT_DiPhoton10Time1ns_v8',
    'HLT_DiPhoton10Time1p2ns_v8',
    'HLT_DiPhoton10Time1p4ns_v8',
    'HLT_DiPhoton10Time1p6ns_v8',
    'HLT_DiPhoton10Time1p8ns_v8',
    'HLT_DiPhoton10Time2ns_v8',
    'HLT_DiPhoton10_CaloIdL_v8',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v22',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v9',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v9',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v21',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v21',
    'HLT_DoubleEle10_eta1p22_mMax6_v8',
    'HLT_DoubleEle25_CaloIdL_MW_v13',
    'HLT_DoubleEle27_CaloIdL_MW_v13',
    'HLT_DoubleEle33_CaloIdL_MW_v26',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v8',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v28',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v28',
    'HLT_DoubleEle8_eta1p22_mMax6_v8',
    'HLT_DoublePhoton33_CaloIdL_v15',
    'HLT_DoublePhoton70_v15',
    'HLT_DoublePhoton85_v23',
    'HLT_ECALHT800_v18',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v23',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v16',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v1',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v24',
    'HLT_Ele15_IsoVVVL_PFHT450_v24',
    'HLT_Ele15_IsoVVVL_PFHT600_v28',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v17',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v27',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v2',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v2',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v2',
    'HLT_Ele28_HighEta_SC20_Mass55_v21',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v21',
    'HLT_Ele30_WPTight_Gsf_v9',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v21',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v17',
    'HLT_Ele32_WPTight_Gsf_v23',
    'HLT_Ele35_WPTight_Gsf_v17',
    'HLT_Ele38_WPTight_Gsf_v17',
    'HLT_Ele40_WPTight_Gsf_v17',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v8',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v8',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v26',
    'HLT_Ele50_IsoVVVL_PFHT450_v24',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_Photon100EBHE10_v10',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v2',
    'HLT_Photon110EB_TightID_TightIso_v10',
    'HLT_Photon120_R9Id90_HE10_IsoM_v22',
    'HLT_Photon120_v21',
    'HLT_Photon150_v15',
    'HLT_Photon165_R9Id90_HE10_IsoM_v23',
    'HLT_Photon175_v23',
    'HLT_Photon200_v22',
    'HLT_Photon20_HoverELoose_v18',
    'HLT_Photon300_NoHE_v21',
    'HLT_Photon30EB_TightID_TightIso_v9',
    'HLT_Photon30_HoverELoose_v18',
    'HLT_Photon32_OneProng32_M50To105_v6',
    'HLT_Photon33_v13',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v4',
    'HLT_Photon35_TwoProngs35_v9',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v2',
    'HLT_Photon50EB_TightID_TightIso_v6',
    'HLT_Photon50EB_v2',
    'HLT_Photon50_R9Id90_HE10_IsoM_v22',
    'HLT_Photon50_TimeGt2p5ns_v5',
    'HLT_Photon50_TimeLtNeg2p5ns_v5',
    'HLT_Photon50_v21',
    'HLT_Photon55EB_TightID_TightIso_v2',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v6',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v5',
    'HLT_Photon75EB_TightID_TightIso_v6',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v13',
    'HLT_Photon75_R9Id90_HE10_IsoM_v22',
    'HLT_Photon75_v21',
    'HLT_Photon90EB_TightID_TightIso_v6',
    'HLT_Photon90_R9Id90_HE10_IsoM_v22',
    'HLT_Photon90_v21',
    'HLT_SingleEle8_SingleEGL1_v7',
    'HLT_SingleEle8_v7' ),
  EGamma1 = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v12',
    'HLT_DiPhoton10Time1ns_v8',
    'HLT_DiPhoton10Time1p2ns_v8',
    'HLT_DiPhoton10Time1p4ns_v8',
    'HLT_DiPhoton10Time1p6ns_v8',
    'HLT_DiPhoton10Time1p8ns_v8',
    'HLT_DiPhoton10Time2ns_v8',
    'HLT_DiPhoton10_CaloIdL_v8',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v22',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v9',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v9',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v21',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v21',
    'HLT_DoubleEle10_eta1p22_mMax6_v8',
    'HLT_DoubleEle25_CaloIdL_MW_v13',
    'HLT_DoubleEle27_CaloIdL_MW_v13',
    'HLT_DoubleEle33_CaloIdL_MW_v26',
    'HLT_DoubleEle6p5_eta1p22_mMax6_v8',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v28',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v28',
    'HLT_DoubleEle8_eta1p22_mMax6_v8',
    'HLT_DoublePhoton33_CaloIdL_v15',
    'HLT_DoublePhoton70_v15',
    'HLT_DoublePhoton85_v23',
    'HLT_ECALHT800_v18',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v23',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v16',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v1',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v24',
    'HLT_Ele15_IsoVVVL_PFHT450_v24',
    'HLT_Ele15_IsoVVVL_PFHT600_v28',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v17',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v27',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Loose_eta2p3_CrossL1_v2',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Medium_eta2p3_CrossL1_v2',
    'HLT_Ele24_eta2p1_WPTight_Gsf_PNetTauhPFJet30_Tight_eta2p3_CrossL1_v2',
    'HLT_Ele28_HighEta_SC20_Mass55_v21',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v21',
    'HLT_Ele30_WPTight_Gsf_v9',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v21',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v17',
    'HLT_Ele32_WPTight_Gsf_v23',
    'HLT_Ele35_WPTight_Gsf_v17',
    'HLT_Ele38_WPTight_Gsf_v17',
    'HLT_Ele40_WPTight_Gsf_v17',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v8',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v8',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v26',
    'HLT_Ele50_IsoVVVL_PFHT450_v24',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_Photon100EBHE10_v10',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v2',
    'HLT_Photon110EB_TightID_TightIso_v10',
    'HLT_Photon120_R9Id90_HE10_IsoM_v22',
    'HLT_Photon120_v21',
    'HLT_Photon150_v15',
    'HLT_Photon165_R9Id90_HE10_IsoM_v23',
    'HLT_Photon175_v23',
    'HLT_Photon200_v22',
    'HLT_Photon20_HoverELoose_v18',
    'HLT_Photon300_NoHE_v21',
    'HLT_Photon30EB_TightID_TightIso_v9',
    'HLT_Photon30_HoverELoose_v18',
    'HLT_Photon32_OneProng32_M50To105_v6',
    'HLT_Photon33_v13',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v4',
    'HLT_Photon35_TwoProngs35_v9',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v2',
    'HLT_Photon50EB_TightID_TightIso_v6',
    'HLT_Photon50EB_v2',
    'HLT_Photon50_R9Id90_HE10_IsoM_v22',
    'HLT_Photon50_TimeGt2p5ns_v5',
    'HLT_Photon50_TimeLtNeg2p5ns_v5',
    'HLT_Photon50_v21',
    'HLT_Photon55EB_TightID_TightIso_v2',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v6',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v5',
    'HLT_Photon75EB_TightID_TightIso_v6',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v13',
    'HLT_Photon75_R9Id90_HE10_IsoM_v22',
    'HLT_Photon75_v21',
    'HLT_Photon90EB_TightID_TightIso_v6',
    'HLT_Photon90_R9Id90_HE10_IsoM_v22',
    'HLT_Photon90_v21',
    'HLT_SingleEle8_SingleEGL1_v7',
    'HLT_SingleEle8_v7' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v4' ),
  EphemeralHLTPhysics0 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics1 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics2 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics3 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics4 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics5 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics6 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralHLTPhysics7 = cms.vstring( 'HLT_EphemeralPhysics_v7' ),
  EphemeralZeroBias0 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias1 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias2 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias3 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias4 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias5 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias6 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EphemeralZeroBias7 = cms.vstring( 'HLT_EphemeralZeroBias_v7' ),
  EventDisplay = cms.vstring( 'HLT_DoublePhoton85_v23',
    'HLT_PFJet500_v29',
    'HLT_ZeroBias_v11' ),
  ExpressAlignment = cms.vstring( 'HLT_HT300_Beamspot_v19',
    'HLT_ZeroBias_Beamspot_v12' ),
  ExpressPhysics = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_IsoMu20_v23',
    'HLT_IsoMu24_v21',
    'HLT_IsoMu27_v24',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v23',
    'HLT_Physics_v12',
    'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v6',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v10',
    'HLT_ZeroBias_IsolatedBunches_v10',
    'HLT_ZeroBias_v11' ),
  HLTMonitor = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Ele32_WPTight_Gsf_v23',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v8',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v21',
    'HLT_HT550_DisplacedDijet60_Inclusive_v21',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v8',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v9',
    'HLT_PFHT510_v25',
    'HLT_PFJet260_v28',
    'HLT_PFJet320_v28',
    'HLT_PFMET130_PFMHT130_IDTight_v28',
    'HLT_PFMET140_PFMHT140_IDTight_v28' ),
  HLTPhysics = cms.vstring( 'HLT_Physics_v12' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v19',
    'HLT_HcalPhiSym_v21' ),
  JetMET0 = cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v2',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v2',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v2',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v2',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v2',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v8',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v2',
    'HLT_AK8PFJet140_v23',
    'HLT_AK8PFJet200_v23',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v5',
    'HLT_AK8PFJet220_SoftDropMass40_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet230_SoftDropMass40_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet260_v24',
    'HLT_AK8PFJet275_Nch40_v2',
    'HLT_AK8PFJet275_Nch45_v2',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet320_v24',
    'HLT_AK8PFJet380_SoftDropMass30_v2',
    'HLT_AK8PFJet400_SoftDropMass30_v2',
    'HLT_AK8PFJet400_v24',
    'HLT_AK8PFJet40_v24',
    'HLT_AK8PFJet425_SoftDropMass30_v2',
    'HLT_AK8PFJet450_SoftDropMass30_v2',
    'HLT_AK8PFJet450_v24',
    'HLT_AK8PFJet500_v24',
    'HLT_AK8PFJet550_v19',
    'HLT_AK8PFJet60_v23',
    'HLT_AK8PFJet80_v24',
    'HLT_AK8PFJetFwd140_v22',
    'HLT_AK8PFJetFwd200_v22',
    'HLT_AK8PFJetFwd260_v23',
    'HLT_AK8PFJetFwd320_v23',
    'HLT_AK8PFJetFwd400_v23',
    'HLT_AK8PFJetFwd40_v23',
    'HLT_AK8PFJetFwd450_v23',
    'HLT_AK8PFJetFwd500_v23',
    'HLT_AK8PFJetFwd60_v22',
    'HLT_AK8PFJetFwd80_v22',
    'HLT_CaloJet500_NoJetID_v20',
    'HLT_CaloJet550_NoJetID_v15',
    'HLT_CaloMET350_NotCleaned_v12',
    'HLT_CaloMET90_NotCleaned_v12',
    'HLT_CaloMHT90_v12',
    'HLT_DiPFJetAve100_HFJEC_v25',
    'HLT_DiPFJetAve140_v21',
    'HLT_DiPFJetAve160_HFJEC_v24',
    'HLT_DiPFJetAve180_PPSMatch_Xi0p3_QuadJet_Max2ProtPerRP_v2',
    'HLT_DiPFJetAve200_v21',
    'HLT_DiPFJetAve220_HFJEC_v24',
    'HLT_DiPFJetAve260_HFJEC_v7',
    'HLT_DiPFJetAve260_v22',
    'HLT_DiPFJetAve300_HFJEC_v24',
    'HLT_DiPFJetAve320_v22',
    'HLT_DiPFJetAve400_v22',
    'HLT_DiPFJetAve40_v22',
    'HLT_DiPFJetAve500_v22',
    'HLT_DiPFJetAve60_HFJEC_v23',
    'HLT_DiPFJetAve60_v22',
    'HLT_DiPFJetAve80_HFJEC_v25',
    'HLT_DiPFJetAve80_v22',
    'HLT_DoublePFJets100_PNetBTag_0p11_v2',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_DoublePFJets200_PNetBTag_0p11_v2',
    'HLT_DoublePFJets350_PNetBTag_0p11_v2',
    'HLT_DoublePFJets40_PNetBTag_0p11_v2',
    'HLT_L1AXOVTight_v2',
    'HLT_L1ETMHadSeeds_v8',
    'HLT_MET105_IsoTrk50_v17',
    'HLT_MET120_IsoTrk50_v17',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_Mu12eta2p3_PFJet40_v9',
    'HLT_Mu12eta2p3_v9',
    'HLT_PFHT1050_v26',
    'HLT_PFHT180_v25',
    'HLT_PFHT250_v25',
    'HLT_PFHT350_v27',
    'HLT_PFHT370_v25',
    'HLT_PFHT430_v25',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v20',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v20',
    'HLT_PFHT510_v25',
    'HLT_PFHT590_v25',
    'HLT_PFHT680_v25',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v20',
    'HLT_PFHT780_v25',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v20',
    'HLT_PFHT890_v25',
    'HLT_PFJet110_v8',
    'HLT_PFJet140_v27',
    'HLT_PFJet200_v27',
    'HLT_PFJet260_v28',
    'HLT_PFJet320_v28',
    'HLT_PFJet400_v28',
    'HLT_PFJet40_v29',
    'HLT_PFJet450_v29',
    'HLT_PFJet500_v29',
    'HLT_PFJet550_v19',
    'HLT_PFJet60_v29',
    'HLT_PFJet80_v29',
    'HLT_PFJetFwd140_v26',
    'HLT_PFJetFwd200_v26',
    'HLT_PFJetFwd260_v27',
    'HLT_PFJetFwd320_v27',
    'HLT_PFJetFwd400_v27',
    'HLT_PFJetFwd40_v27',
    'HLT_PFJetFwd450_v27',
    'HLT_PFJetFwd500_v27',
    'HLT_PFJetFwd60_v27',
    'HLT_PFJetFwd80_v26',
    'HLT_PFMET105_IsoTrk50_v9',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v17',
    'HLT_PFMET120_PFMHT120_IDTight_v28',
    'HLT_PFMET130_PFMHT130_IDTight_v28',
    'HLT_PFMET140_PFMHT140_IDTight_v28',
    'HLT_PFMET200_BeamHaloCleaned_v17',
    'HLT_PFMET200_NotCleaned_v17',
    'HLT_PFMET250_NotCleaned_v17',
    'HLT_PFMET300_NotCleaned_v17',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v17',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v28',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v27',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v27',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v19',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v17' ),
  JetMET1 = cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v2',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v2',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v2',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v2',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v2',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v8',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v2',
    'HLT_AK8PFJet140_v23',
    'HLT_AK8PFJet200_v23',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v5',
    'HLT_AK8PFJet220_SoftDropMass40_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet230_SoftDropMass40_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet260_v24',
    'HLT_AK8PFJet275_Nch40_v2',
    'HLT_AK8PFJet275_Nch45_v2',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet320_v24',
    'HLT_AK8PFJet380_SoftDropMass30_v2',
    'HLT_AK8PFJet400_SoftDropMass30_v2',
    'HLT_AK8PFJet400_v24',
    'HLT_AK8PFJet40_v24',
    'HLT_AK8PFJet425_SoftDropMass30_v2',
    'HLT_AK8PFJet450_SoftDropMass30_v2',
    'HLT_AK8PFJet450_v24',
    'HLT_AK8PFJet500_v24',
    'HLT_AK8PFJet550_v19',
    'HLT_AK8PFJet60_v23',
    'HLT_AK8PFJet80_v24',
    'HLT_AK8PFJetFwd140_v22',
    'HLT_AK8PFJetFwd200_v22',
    'HLT_AK8PFJetFwd260_v23',
    'HLT_AK8PFJetFwd320_v23',
    'HLT_AK8PFJetFwd400_v23',
    'HLT_AK8PFJetFwd40_v23',
    'HLT_AK8PFJetFwd450_v23',
    'HLT_AK8PFJetFwd500_v23',
    'HLT_AK8PFJetFwd60_v22',
    'HLT_AK8PFJetFwd80_v22',
    'HLT_CaloJet500_NoJetID_v20',
    'HLT_CaloJet550_NoJetID_v15',
    'HLT_CaloMET350_NotCleaned_v12',
    'HLT_CaloMET90_NotCleaned_v12',
    'HLT_CaloMHT90_v12',
    'HLT_DiPFJetAve100_HFJEC_v25',
    'HLT_DiPFJetAve140_v21',
    'HLT_DiPFJetAve160_HFJEC_v24',
    'HLT_DiPFJetAve180_PPSMatch_Xi0p3_QuadJet_Max2ProtPerRP_v2',
    'HLT_DiPFJetAve200_v21',
    'HLT_DiPFJetAve220_HFJEC_v24',
    'HLT_DiPFJetAve260_HFJEC_v7',
    'HLT_DiPFJetAve260_v22',
    'HLT_DiPFJetAve300_HFJEC_v24',
    'HLT_DiPFJetAve320_v22',
    'HLT_DiPFJetAve400_v22',
    'HLT_DiPFJetAve40_v22',
    'HLT_DiPFJetAve500_v22',
    'HLT_DiPFJetAve60_HFJEC_v23',
    'HLT_DiPFJetAve60_v22',
    'HLT_DiPFJetAve80_HFJEC_v25',
    'HLT_DiPFJetAve80_v22',
    'HLT_DoublePFJets100_PNetBTag_0p11_v2',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_DoublePFJets200_PNetBTag_0p11_v2',
    'HLT_DoublePFJets350_PNetBTag_0p11_v2',
    'HLT_DoublePFJets40_PNetBTag_0p11_v2',
    'HLT_L1AXOVTight_v2',
    'HLT_L1ETMHadSeeds_v8',
    'HLT_MET105_IsoTrk50_v17',
    'HLT_MET120_IsoTrk50_v17',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_Mu12eta2p3_PFJet40_v9',
    'HLT_Mu12eta2p3_v9',
    'HLT_PFHT1050_v26',
    'HLT_PFHT180_v25',
    'HLT_PFHT250_v25',
    'HLT_PFHT350_v27',
    'HLT_PFHT370_v25',
    'HLT_PFHT430_v25',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v20',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v20',
    'HLT_PFHT510_v25',
    'HLT_PFHT590_v25',
    'HLT_PFHT680_v25',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v20',
    'HLT_PFHT780_v25',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v20',
    'HLT_PFHT890_v25',
    'HLT_PFJet110_v8',
    'HLT_PFJet140_v27',
    'HLT_PFJet200_v27',
    'HLT_PFJet260_v28',
    'HLT_PFJet320_v28',
    'HLT_PFJet400_v28',
    'HLT_PFJet40_v29',
    'HLT_PFJet450_v29',
    'HLT_PFJet500_v29',
    'HLT_PFJet550_v19',
    'HLT_PFJet60_v29',
    'HLT_PFJet80_v29',
    'HLT_PFJetFwd140_v26',
    'HLT_PFJetFwd200_v26',
    'HLT_PFJetFwd260_v27',
    'HLT_PFJetFwd320_v27',
    'HLT_PFJetFwd400_v27',
    'HLT_PFJetFwd40_v27',
    'HLT_PFJetFwd450_v27',
    'HLT_PFJetFwd500_v27',
    'HLT_PFJetFwd60_v27',
    'HLT_PFJetFwd80_v26',
    'HLT_PFMET105_IsoTrk50_v9',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v17',
    'HLT_PFMET120_PFMHT120_IDTight_v28',
    'HLT_PFMET130_PFMHT130_IDTight_v28',
    'HLT_PFMET140_PFMHT140_IDTight_v28',
    'HLT_PFMET200_BeamHaloCleaned_v17',
    'HLT_PFMET200_NotCleaned_v17',
    'HLT_PFMET250_NotCleaned_v17',
    'HLT_PFMET300_NotCleaned_v17',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v17',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v28',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v27',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v27',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v19',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v17' ),
  L1Accept = cms.vstring( 'DST_Physics_v12',
    'DST_ZeroBias_v7' ),
  MonteCarlo = cms.vstring( 'MC_AK4CaloJetsFromPV_v16',
    'MC_AK4CaloJets_v17',
    'MC_AK4PFJetPNet_v1',
    'MC_AK4PFJets_v25',
    'MC_AK8CaloHT_v16',
    'MC_AK8PFHT_v24',
    'MC_AK8PFJetPNet_v1',
    'MC_AK8PFJets_v25',
    'MC_CaloHT_v16',
    'MC_CaloMET_JetIdCleaned_v17',
    'MC_CaloMET_v16',
    'MC_CaloMHT_v16',
    'MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v21',
    'MC_DoubleEle5_CaloIdL_MW_v24',
    'MC_DoubleMuNoFiltersNoVtx_v15',
    'MC_DoubleMu_TrkIsoVVL_DZ_v19',
    'MC_Egamma_Open_Unseeded_v6',
    'MC_Egamma_Open_v6',
    'MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'MC_Ele5_WPTight_Gsf_v16',
    'MC_IsoMu_v23',
    'MC_PFHT_v24',
    'MC_PFMET_v25',
    'MC_PFMHT_v24',
    'MC_PFScouting_v2',
    'MC_ReducedIterativeTracking_v20' ),
  Muon0 = cms.vstring( 'HLT_CascadeMu100_v11',
    'HLT_CscCluster100_Ele5_v2',
    'HLT_CscCluster100_Mu5_v2',
    'HLT_CscCluster100_PNetTauhPFJet10_Loose_v2',
    'HLT_CscCluster50_Photon20Unseeded_v2',
    'HLT_CscCluster50_Photon30Unseeded_v2',
    'HLT_CscCluster_Loose_v8',
    'HLT_CscCluster_Medium_v8',
    'HLT_CscCluster_Tight_v8',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v4',
    'HLT_DoubleCscCluster100_v5',
    'HLT_DoubleCscCluster75_v5',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu50_v9',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v2',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v2',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v18',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v18',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v18',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v18',
    'HLT_DoubleMu43NoFiltersNoVtx_v12',
    'HLT_DoubleMu48NoFiltersNoVtx_v12',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v16',
    'HLT_HighPtTkMu100_v10',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v9',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v2',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v2',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v2',
    'HLT_IsoMu20_v23',
    'HLT_IsoMu24_OneProng32_v5',
    'HLT_IsoMu24_TwoProngs35_v9',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v9',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v9',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_v23',
    'HLT_IsoMu24_v21',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v4',
    'HLT_IsoMu27_v24',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v8',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v8',
    'HLT_IsoTrk200_L1SingleMuShower_v2',
    'HLT_IsoTrk400_L1SingleMuShower_v2',
    'HLT_L1CSCShower_DTCluster50_v8',
    'HLT_L1CSCShower_DTCluster75_v8',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v1',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v1',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v1',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v1',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v1',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v23',
    'HLT_Mu15_IsoVVVL_PFHT450_v23',
    'HLT_Mu15_IsoVVVL_PFHT600_v27',
    'HLT_Mu15_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v2',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v23',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v22',
    'HLT_Mu17_TrkIsoVVL_v21',
    'HLT_Mu17_v21',
    'HLT_Mu18_Mu9_SameSign_v12',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v11',
    'HLT_Mu19_TrkIsoVVL_v12',
    'HLT_Mu19_v12',
    'HLT_Mu20_v20',
    'HLT_Mu27_v21',
    'HLT_Mu37_TkMu27_v13',
    'HLT_Mu3_PFJet40_v24',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v10',
    'HLT_Mu50_IsoVVVL_PFHT450_v23',
    'HLT_Mu50_L1SingleMuShower_v7',
    'HLT_Mu50_v21',
    'HLT_Mu55_v11',
    'HLT_Mu8_TrkIsoVVL_v20',
    'HLT_Mu8_v20',
    'HLT_TripleMu_10_5_5_DZ_v18',
    'HLT_TripleMu_12_10_5_v18',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v11',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v16',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v14' ),
  Muon1 = cms.vstring( 'HLT_CascadeMu100_v11',
    'HLT_CscCluster100_Ele5_v2',
    'HLT_CscCluster100_Mu5_v2',
    'HLT_CscCluster100_PNetTauhPFJet10_Loose_v2',
    'HLT_CscCluster50_Photon20Unseeded_v2',
    'HLT_CscCluster50_Photon30Unseeded_v2',
    'HLT_CscCluster_Loose_v8',
    'HLT_CscCluster_Medium_v8',
    'HLT_CscCluster_Tight_v8',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v4',
    'HLT_DoubleCscCluster100_v5',
    'HLT_DoubleCscCluster75_v5',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu50_v9',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v2',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v2',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v18',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v18',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v18',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v18',
    'HLT_DoubleMu43NoFiltersNoVtx_v12',
    'HLT_DoubleMu48NoFiltersNoVtx_v12',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v16',
    'HLT_HighPtTkMu100_v10',
    'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v9',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v2',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v2',
    'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v2',
    'HLT_IsoMu20_v23',
    'HLT_IsoMu24_OneProng32_v5',
    'HLT_IsoMu24_TwoProngs35_v9',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v9',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v9',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_v23',
    'HLT_IsoMu24_v21',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v4',
    'HLT_IsoMu27_v24',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v8',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v8',
    'HLT_IsoTrk200_L1SingleMuShower_v2',
    'HLT_IsoTrk400_L1SingleMuShower_v2',
    'HLT_L1CSCShower_DTCluster50_v8',
    'HLT_L1CSCShower_DTCluster75_v8',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v1',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v1',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v1',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v1',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v1',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v23',
    'HLT_Mu15_IsoVVVL_PFHT450_v23',
    'HLT_Mu15_IsoVVVL_PFHT600_v27',
    'HLT_Mu15_v11',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v2',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v23',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v22',
    'HLT_Mu17_TrkIsoVVL_v21',
    'HLT_Mu17_v21',
    'HLT_Mu18_Mu9_SameSign_v12',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v11',
    'HLT_Mu19_TrkIsoVVL_v12',
    'HLT_Mu19_v12',
    'HLT_Mu20_v20',
    'HLT_Mu27_v21',
    'HLT_Mu37_TkMu27_v13',
    'HLT_Mu3_PFJet40_v24',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v10',
    'HLT_Mu50_IsoVVVL_PFHT450_v23',
    'HLT_Mu50_L1SingleMuShower_v7',
    'HLT_Mu50_v21',
    'HLT_Mu55_v11',
    'HLT_Mu8_TrkIsoVVL_v20',
    'HLT_Mu8_v20',
    'HLT_TripleMu_10_5_5_DZ_v18',
    'HLT_TripleMu_12_10_5_v18',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v11',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v16',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v14' ),
  MuonEG = cms.vstring( 'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v25',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v25',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v25',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v15',
    'HLT_Mu17_Photon30_IsoCaloId_v14',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v9',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v15',
    'HLT_Mu27_Ele37_CaloIdL_MW_v13',
    'HLT_Mu37_Ele27_CaloIdL_MW_v13',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v9',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v9',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v13',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v13',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v26',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v26',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v27',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v27',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet1BTag0p20_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v19' ),
  NoBPTX = cms.vstring( 'HLT_CDC_L2cosmic_10_er1p0_v8',
    'HLT_CDC_L2cosmic_5p5_er1p0_v8',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v12',
    'HLT_L2Mu10_NoVertex_NoBPTX_v13',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v12',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v11',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v12',
    'HLT_UncorrectedJetE30_NoBPTX_v12',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v12',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v12' ),
  OnlineMonitor = ( cms.vstring( 'HLT_AK8DiPFJet250_250_SoftDropMass40_v2',
    'HLT_AK8DiPFJet250_250_SoftDropMass50_v2',
    'HLT_AK8DiPFJet260_260_SoftDropMass30_v2',
    'HLT_AK8DiPFJet260_260_SoftDropMass40_v2',
    'HLT_AK8DiPFJet270_270_SoftDropMass30_v2',
    'HLT_AK8DiPFJet280_280_SoftDropMass30_v8',
    'HLT_AK8DiPFJet290_290_SoftDropMass30_v2',
    'HLT_AK8PFJet140_v23',
    'HLT_AK8PFJet200_v23',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p53_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p55_v5',
    'HLT_AK8PFJet220_SoftDropMass40_PNetBB0p06_DoubleAK4PFJet60_30_PNet2BTagMean0p60_v5',
    'HLT_AK8PFJet220_SoftDropMass40_v9',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet230_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet230_SoftDropMass40_v9',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet250_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet260_v24',
    'HLT_AK8PFJet275_Nch40_v2',
    'HLT_AK8PFJet275_Nch45_v2',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p06_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetBB0p10_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p03_v5',
    'HLT_AK8PFJet275_SoftDropMass40_PNetTauTau0p05_v5',
    'HLT_AK8PFJet320_v24',
    'HLT_AK8PFJet380_SoftDropMass30_v2',
    'HLT_AK8PFJet400_SoftDropMass30_v2',
    'HLT_AK8PFJet400_v24',
    'HLT_AK8PFJet40_v24',
    'HLT_AK8PFJet425_SoftDropMass30_v2',
    'HLT_AK8PFJet450_SoftDropMass30_v2',
    'HLT_AK8PFJet450_v24',
    'HLT_AK8PFJet500_v24',
    'HLT_AK8PFJet550_v19',
    'HLT_AK8PFJet60_v23',
    'HLT_AK8PFJet80_v24',
    'HLT_AK8PFJetFwd140_v22',
    'HLT_AK8PFJetFwd200_v22',
    'HLT_AK8PFJetFwd260_v23',
    'HLT_AK8PFJetFwd320_v23',
    'HLT_AK8PFJetFwd400_v23',
    'HLT_AK8PFJetFwd40_v23',
    'HLT_AK8PFJetFwd450_v23',
    'HLT_AK8PFJetFwd500_v23',
    'HLT_AK8PFJetFwd60_v22',
    'HLT_AK8PFJetFwd80_v22',
    'HLT_BTagMu_AK4DiJet110_Mu5_v21',
    'HLT_BTagMu_AK4DiJet170_Mu5_v20',
    'HLT_BTagMu_AK4DiJet20_Mu5_v21',
    'HLT_BTagMu_AK4DiJet40_Mu5_v21',
    'HLT_BTagMu_AK4DiJet70_Mu5_v21',
    'HLT_BTagMu_AK4Jet300_Mu5_v20',
    'HLT_BTagMu_AK8DiJet170_Mu5_v17',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v10',
    'HLT_BTagMu_AK8Jet300_Mu5_v20',
    'HLT_CDC_L2cosmic_10_er1p0_v8',
    'HLT_CDC_L2cosmic_5p5_er1p0_v8',
    'HLT_CaloJet500_NoJetID_v20',
    'HLT_CaloJet550_NoJetID_v15',
    'HLT_CaloMET350_NotCleaned_v12',
    'HLT_CaloMET60_DTCluster50_v9',
    'HLT_CaloMET60_DTClusterNoMB1S50_v9',
    'HLT_CaloMET90_NotCleaned_v12',
    'HLT_CaloMHT90_v12',
    'HLT_CascadeMu100_v11',
    'HLT_CscCluster50_Photon20Unseeded_v2',
    'HLT_CscCluster50_Photon30Unseeded_v2',
    'HLT_CscCluster_Loose_v8',
    'HLT_CscCluster_Medium_v8',
    'HLT_CscCluster_Tight_v8',
    'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v12',
    'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v25',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v25',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v25',
    'HLT_DiPFJetAve100_HFJEC_v25',
    'HLT_DiPFJetAve140_v21',
    'HLT_DiPFJetAve160_HFJEC_v24',
    'HLT_DiPFJetAve200_v21',
    'HLT_DiPFJetAve220_HFJEC_v24',
    'HLT_DiPFJetAve260_HFJEC_v7',
    'HLT_DiPFJetAve260_v22',
    'HLT_DiPFJetAve300_HFJEC_v24',
    'HLT_DiPFJetAve320_v22',
    'HLT_DiPFJetAve400_v22',
    'HLT_DiPFJetAve40_v22',
    'HLT_DiPFJetAve500_v22',
    'HLT_DiPFJetAve60_HFJEC_v23',
    'HLT_DiPFJetAve60_v22',
    'HLT_DiPFJetAve80_HFJEC_v25',
    'HLT_DiPFJetAve80_v22',
    'HLT_DiPhoton10Time1ns_v8',
    'HLT_DiPhoton10Time1p2ns_v8',
    'HLT_DiPhoton10Time1p4ns_v8',
    'HLT_DiPhoton10Time1p6ns_v8',
    'HLT_DiPhoton10Time1p8ns_v8',
    'HLT_DiPhoton10Time2ns_v8',
    'HLT_DiPhoton10_CaloIdL_v8',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v22',
    'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton20_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton22_14_eta1p5_R9IdL_AND_HE_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_14_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton24_16_eta1p5_R9IdL_AND_HET_AND_IsoTCaloIdT_v8',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_Mass55_v9',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_v9',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v21',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v21',
    'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v4',
    'HLT_DoubleCscCluster100_v5',
    'HLT_DoubleCscCluster75_v5',
    'HLT_DoubleEle25_CaloIdL_MW_v13',
    'HLT_DoubleEle27_CaloIdL_MW_v13',
    'HLT_DoubleEle33_CaloIdL_MW_v26',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v28',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v28',
    'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
    'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9',
    'HLT_DoubleL2Mu50_v9',
    'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
    'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9',
    'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v4',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v9',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v4',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v4',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v8',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v8',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v2',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v2',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v18',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v18',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v18',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v18',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu43NoFiltersNoVtx_v12',
    'HLT_DoubleMu48NoFiltersNoVtx_v12',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v16',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_DoublePFJets100_PNetBTag_0p11_v2',
    'HLT_DoublePFJets116MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_DoublePFJets128MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_DoublePFJets200_PNetBTag_0p11_v2',
    'HLT_DoublePFJets350_PNetBTag_0p11_v2',
    'HLT_DoublePFJets40_PNetBTag_0p11_v2',
    'HLT_DoublePhoton33_CaloIdL_v15',
    'HLT_DoublePhoton70_v15',
    'HLT_DoublePhoton85_v23',
    'HLT_ECALHT800_v18',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v23',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v16',
    'HLT_Ele14_eta2p5_IsoVVVL_Gsf_PFHT200_PNetBTag0p53_v1',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v24',
    'HLT_Ele15_IsoVVVL_PFHT450_v24',
    'HLT_Ele15_IsoVVVL_PFHT600_v28',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v17',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v24',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v26',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v27',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v27',
    'HLT_Ele28_HighEta_SC20_Mass55_v21',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v21',
    'HLT_Ele30_WPTight_Gsf_v9',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v21',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v17',
    'HLT_Ele32_WPTight_Gsf_v23',
    'HLT_Ele35_WPTight_Gsf_v17',
    'HLT_Ele38_WPTight_Gsf_v17',
    'HLT_Ele40_WPTight_Gsf_v17',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet220_SoftDropMass40_v8',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_AK8PFJet230_SoftDropMass40_v8',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v26',
    'HLT_Ele50_IsoVVVL_PFHT450_v24',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v24',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v26',
    'HLT_HT170_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_DoubleDelay1nsInclusive_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay1nsTrackless_v9',
    'HLT_HT200_L1SingleLLPJet_DelayedJet40_SingleDelay2nsInclusive_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT200_L1SingleLLPJet_DisplacedDijet60_DisplacedTrack_v9',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p7_v2',
    'HLT_HT200_L1SingleLLPJet_PFJet60_NeutralHadronFrac0p8_v2',
    'HLT_HT240_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v6',
    'HLT_HT270_L1SingleLLPJet_DisplacedDijet40_DisplacedTrack_v9',
    'HLT_HT280_L1SingleLLPJet_DisplacedDijet40_Inclusive1PtrkShortSig5_v6',
    'HLT_HT320_L1SingleLLPJet_DisplacedDijet60_Inclusive_v9',
    'HLT_HT350_DelayedJet40_SingleDelay3nsInclusive_v5')+cms.vstring( 'HLT_HT350_DelayedJet40_SingleDelay3p25nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay3p5nsInclusive_v5',
    'HLT_HT350_v5',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v21',
    'HLT_HT420_L1SingleLLPJet_DisplacedDijet60_Inclusive_v9',
    'HLT_HT425_v17',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsInclusive_v8',
    'HLT_HT430_DelayedJet40_DoubleDelay0p5nsTrackless_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay0p75nsTrackless_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsInclusive_v9',
    'HLT_HT430_DelayedJet40_DoubleDelay1nsTrackless_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1p25nsInclusive_v5',
    'HLT_HT430_DelayedJet40_DoubleDelay1p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay0p5nsTrackless_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1nsTrackless_v9',
    'HLT_HT430_DelayedJet40_SingleDelay1p25nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsInclusive_v7',
    'HLT_HT430_DelayedJet40_SingleDelay1p5nsTrackless_v5',
    'HLT_HT430_DelayedJet40_SingleDelay2nsInclusive_v9',
    'HLT_HT430_DelayedJet40_SingleDelay2p25nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay2p5nsInclusive_v5',
    'HLT_HT550_DisplacedDijet60_Inclusive_v21',
    'HLT_HcalNZS_v19',
    'HLT_HcalPhiSym_v21',
    'HLT_HighPtTkMu100_v10',
    'HLT_IsoMu20_v23',
    'HLT_IsoMu24_OneProng32_v5',
    'HLT_IsoMu24_TwoProngs35_v9',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v9',
    'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v4',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v9',
    'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v8',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v2',
    'HLT_IsoMu24_eta2p1_PFHT250_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v2',
    'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v2',
    'HLT_IsoMu24_eta2p1_v23',
    'HLT_IsoMu24_v21',
    'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v4',
    'HLT_IsoMu27_v24',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5',
    'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v8',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
    'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v8',
    'HLT_IsoTrackHB_v12',
    'HLT_IsoTrackHE_v12',
    'HLT_L1CSCShower_DTCluster50_v8',
    'HLT_L1CSCShower_DTCluster75_v8',
    'HLT_L1ETMHadSeeds_v8',
    'HLT_L1MET_DTCluster50_v9',
    'HLT_L1MET_DTClusterNoMB1S50_v9',
    'HLT_L1Mu6HT240_v7',
    'HLT_L1SingleLLPJet_v5',
    'HLT_L1SingleMuCosmics_v6',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay0p75nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p25nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p5nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_DoubleDelay1p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5nsTrackless_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3nsTrackless_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p5nsInclusive_v7',
    'HLT_L1Tau_DelayedJet40_SingleDelay3p75nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay4nsInclusive_v5',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v7',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v12',
    'HLT_L2Mu10_NoVertex_NoBPTX_v13',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v12',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v11',
    'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v1',
    'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v1',
    'HLT_L3Mu30NoVtx_DxyMin0p01cm_v1',
    'HLT_L3Mu50NoVtx_DxyMin0p01cm_v1',
    'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8',
    'HLT_MET105_IsoTrk50_v17',
    'HLT_MET120_IsoTrk50_v17',
    'HLT_Mu12_DoublePFJets100_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets200_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets350_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_Mu12_DoublePFJets40_PNetBTag_0p11_v2',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_PNet2BTag_0p11_v2',
    'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v1',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v15',
    'HLT_Mu12eta2p3_PFJet40_v9',
    'HLT_Mu12eta2p3_v9',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v23',
    'HLT_Mu15_IsoVVVL_PFHT450_v23',
    'HLT_Mu15_IsoVVVL_PFHT600_v27',
    'HLT_Mu15_v11',
    'HLT_Mu17_Photon30_IsoCaloId_v14',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v2',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v13',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v23',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v22',
    'HLT_Mu17_TrkIsoVVL_v21',
    'HLT_Mu17_v21',
    'HLT_Mu18_Mu9_SameSign_v12',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v11',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v11',
    'HLT_Mu19_TrkIsoVVL_v12',
    'HLT_Mu19_v12',
    'HLT_Mu20NoFiltersNoVtxDisplaced_Photon20_CaloCustomId_v9',
    'HLT_Mu20_v20',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v23',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v15',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu27_Ele37_CaloIdL_MW_v13',
    'HLT_Mu27_v21',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu37_Ele27_CaloIdL_MW_v13',
    'HLT_Mu37_TkMu27_v13',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v9',
    'HLT_Mu3_PFJet40_v24',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v10',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v10',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v9',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v13',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v13',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu50_IsoVVVL_PFHT450_v23',
    'HLT_Mu50_L1SingleMuShower_v7',
    'HLT_Mu50_v21',
    'HLT_Mu55_v11',
    'HLT_Mu6HT240_DisplacedDijet30_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet35_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet40_Inclusive1PtrkShortSig5_DisplacedLoose_v9',
    'HLT_Mu6HT240_DisplacedDijet45_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu6HT240_DisplacedDijet50_Inclusive0PtrkShortSig5_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v26',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v26',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v27',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v27',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_PNet2BTagMean0p50_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_DoubleAK4PFJet60_30_v6',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepJet_1p5_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PNet2BTagMean0p50_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v9',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet1BTag0p20_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_QuadPFJet25_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT250_v2',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_QuadPFJet30_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFHT280_v5',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v21',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v19',
    'HLT_Mu8_TrkIsoVVL_v20',
    'HLT_Mu8_v20',
    'HLT_PFHT1050_v26',
    'HLT_PFHT180_v25',
    'HLT_PFHT250_v25',
    'HLT_PFHT350_v27',
    'HLT_PFHT370_v25',
    'HLT_PFHT430_v25',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v20',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v20',
    'HLT_PFHT510_v25',
    'HLT_PFHT590_v25',
    'HLT_PFHT680_v25',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v20',
    'HLT_PFHT780_v25',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v20',
    'HLT_PFHT890_v25',
    'HLT_PFJet110_v8',
    'HLT_PFJet140_v27',
    'HLT_PFJet200_TimeGt2p5ns_v6',
    'HLT_PFJet200_TimeLtNeg2p5ns_v6',
    'HLT_PFJet200_v27',
    'HLT_PFJet260_v28',
    'HLT_PFJet320_v28',
    'HLT_PFJet400_v28',
    'HLT_PFJet40_v29',
    'HLT_PFJet450_v29',
    'HLT_PFJet500_v29',
    'HLT_PFJet550_v19',
    'HLT_PFJet60_v29',
    'HLT_PFJet80_v29',
    'HLT_PFJetFwd140_v26',
    'HLT_PFJetFwd200_v26',
    'HLT_PFJetFwd260_v27',
    'HLT_PFJetFwd320_v27',
    'HLT_PFJetFwd400_v27',
    'HLT_PFJetFwd40_v27',
    'HLT_PFJetFwd450_v27',
    'HLT_PFJetFwd500_v27',
    'HLT_PFJetFwd60_v27',
    'HLT_PFJetFwd80_v26',
    'HLT_PFMET105_IsoTrk50_v9',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v17',
    'HLT_PFMET120_PFMHT120_IDTight_v28',
    'HLT_PFMET130_PFMHT130_IDTight_v28',
    'HLT_PFMET140_PFMHT140_IDTight_v28',
    'HLT_PFMET200_BeamHaloCleaned_v17',
    'HLT_PFMET200_NotCleaned_v17',
    'HLT_PFMET250_NotCleaned_v17',
    'HLT_PFMET300_NotCleaned_v17',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v17',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v28',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v27',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_FilterHF_v8',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v27',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v19',
    'HLT_PFMETTypeOne200_BeamHaloCleaned_v17',
    'HLT_Photon100EBHE10_v10',
    'HLT_Photon110EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_AK8PFJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon110EB_TightID_TightIso_PFJet30_v2',
    'HLT_Photon110EB_TightID_TightIso_v10',
    'HLT_Photon120_R9Id90_HE10_IsoM_v22',
    'HLT_Photon120_v21',
    'HLT_Photon150_v15',
    'HLT_Photon165_R9Id90_HE10_IsoM_v23',
    'HLT_Photon175_v23',
    'HLT_Photon200_v22',
    'HLT_Photon20_HoverELoose_v18',
    'HLT_Photon300_NoHE_v21')+cms.vstring( 'HLT_Photon30EB_TightID_TightIso_v9',
    'HLT_Photon30_HoverELoose_v18',
    'HLT_Photon32_OneProng32_M50To105_v6',
    'HLT_Photon33_v13',
    'HLT_Photon34_R9Id90_CaloIdL_IsoL_DisplacedIdL_MediumChargedIsoDisplacedPFTauHPS34_v4',
    'HLT_Photon35_TwoProngs35_v9',
    'HLT_Photon50EB_TightID_TightIso_AK8CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_AK8PFJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_CaloJet30_v1',
    'HLT_Photon50EB_TightID_TightIso_PFJet30_v2',
    'HLT_Photon50EB_TightID_TightIso_v6',
    'HLT_Photon50_R9Id90_HE10_IsoM_v22',
    'HLT_Photon50_TimeGt2p5ns_v5',
    'HLT_Photon50_TimeLtNeg2p5ns_v5',
    'HLT_Photon50_v21',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT380_v6',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT400_v6',
    'HLT_Photon60_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v5',
    'HLT_Photon75EB_TightID_TightIso_v6',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v13',
    'HLT_Photon75_R9Id90_HE10_IsoM_v22',
    'HLT_Photon75_v21',
    'HLT_Photon90EB_TightID_TightIso_v6',
    'HLT_Photon90_R9Id90_HE10_IsoM_v22',
    'HLT_Photon90_v21',
    'HLT_Physics_v12',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_Random_v3',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11',
    'HLT_TripleMu_10_5_5_DZ_v18',
    'HLT_TripleMu_12_10_5_v18',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v11',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v16',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v14',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v12',
    'HLT_UncorrectedJetE30_NoBPTX_v12',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v12',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v12',
    'HLT_ZeroBias_Alignment_v6',
    'HLT_ZeroBias_FirstBXAfterTrain_v8',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v10',
    'HLT_ZeroBias_FirstCollisionInTrain_v9',
    'HLT_ZeroBias_IsolatedBunches_v10',
    'HLT_ZeroBias_LastCollisionInTrain_v8',
    'HLT_ZeroBias_v11') ),
  ParkingDoubleMuonLowMass0 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu2_Jpsi_LowPt_v2',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_LowMass_SS_v2',
    'HLT_DoubleMu4_3_LowMass_v9',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_LowMass_Displaced_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11' ),
  ParkingDoubleMuonLowMass1 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu2_Jpsi_LowPt_v2',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_LowMass_SS_v2',
    'HLT_DoubleMu4_3_LowMass_v9',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_LowMass_Displaced_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11' ),
  ParkingDoubleMuonLowMass2 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu2_Jpsi_LowPt_v2',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_LowMass_SS_v2',
    'HLT_DoubleMu4_3_LowMass_v9',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_LowMass_Displaced_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11' ),
  ParkingDoubleMuonLowMass3 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu2_Jpsi_LowPt_v2',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_LowMass_SS_v2',
    'HLT_DoubleMu4_3_LowMass_v9',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_LowMass_Displaced_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11' ),
  ParkingDoubleMuonLowMass4 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu2_Jpsi_LowPt_v2',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_LowMass_SS_v2',
    'HLT_DoubleMu4_3_LowMass_v9',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_LowMass_Displaced_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11' ),
  ParkingDoubleMuonLowMass5 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu2_Jpsi_LowPt_v2',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_LowMass_SS_v2',
    'HLT_DoubleMu4_3_LowMass_v9',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_LowMass_Displaced_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11' ),
  ParkingDoubleMuonLowMass6 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu2_Jpsi_LowPt_v2',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_LowMass_SS_v2',
    'HLT_DoubleMu4_3_LowMass_v9',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_LowMass_Displaced_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11' ),
  ParkingDoubleMuonLowMass7 = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v13',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v15',
    'HLT_Dimuon0_Jpsi_NoVertexing_v16',
    'HLT_Dimuon0_Jpsi_v16',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v16',
    'HLT_Dimuon0_LowMass_L1_4_v16',
    'HLT_Dimuon0_LowMass_L1_TM530_v14',
    'HLT_Dimuon0_LowMass_v16',
    'HLT_Dimuon0_Upsilon_L1_4p5_v17',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v15',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v17',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v14',
    'HLT_Dimuon0_Upsilon_NoVertexing_v15',
    'HLT_Dimuon10_Upsilon_y1p4_v9',
    'HLT_Dimuon12_Upsilon_y1p4_v10',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v15',
    'HLT_Dimuon14_PsiPrime_noCorrL1_v13',
    'HLT_Dimuon14_PsiPrime_v21',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v14',
    'HLT_Dimuon18_PsiPrime_v22',
    'HLT_Dimuon24_Phi_noCorrL1_v14',
    'HLT_Dimuon24_Upsilon_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_noCorrL1_v14',
    'HLT_Dimuon25_Jpsi_v22',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v14',
    'HLT_DoubleMu2_Jpsi_LowPt_v2',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v12',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v12',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v14',
    'HLT_DoubleMu3_Trk_Tau3mu_v20',
    'HLT_DoubleMu4_3_Bs_v23',
    'HLT_DoubleMu4_3_Displaced_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_3_Jpsi_v23',
    'HLT_DoubleMu4_3_LowMass_SS_v2',
    'HLT_DoubleMu4_3_LowMass_v9',
    'HLT_DoubleMu4_3_Photon4_BsToMMG_v8',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v15',
    'HLT_DoubleMu4_JpsiTrk_Bc_v8',
    'HLT_DoubleMu4_Jpsi_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v15',
    'HLT_DoubleMu4_LowMass_Displaced_v9',
    'HLT_DoubleMu4_MuMuTrk_Displaced_v23',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v12',
    'HLT_Mu25_TkMu0_Phi_v16',
    'HLT_Mu30_TkMu0_Psi_v9',
    'HLT_Mu30_TkMu0_Upsilon_v9',
    'HLT_Mu4_L1DoubleMu_v9',
    'HLT_Mu7p5_L2Mu2_Jpsi_v18',
    'HLT_Mu7p5_L2Mu2_Upsilon_v18',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v12',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v12',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v13',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v11' ),
  ParkingHH = cms.vstring( 'HLT_PFHT250_QuadPFJet25_PNet1BTag0p20_PNet1Tauh0p50_v2',
    'HLT_PFHT250_QuadPFJet25_PNet2BTagMean0p55_v2',
    'HLT_PFHT250_QuadPFJet25_v2',
    'HLT_PFHT250_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v2',
    'HLT_PFHT250_QuadPFJet30_PNet2BTagMean0p55_v2',
    'HLT_PFHT280_QuadPFJet30_PNet1BTag0p20_PNet1Tauh0p50_v2',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p55_v5',
    'HLT_PFHT280_QuadPFJet30_PNet2BTagMean0p60_v5',
    'HLT_PFHT280_QuadPFJet30_v5',
    'HLT_PFHT280_QuadPFJet35_PNet2BTagMean0p60_v5',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_2p0_v1',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_PNet3BTag_4p3_v1',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepJet_4p5_v9',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v17',
    'HLT_PFHT340_QuadPFJet70_50_40_40_PNet2BTagMean0p70_v6',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_4p3_v2',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_PNet2BTag_5p6_v2',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_v2',
    'HLT_PFHT400_SixPFJet32_PNet2BTagMean0p50_v5',
    'HLT_PFHT400_SixPFJet32_v17',
    'HLT_PFHT450_SixPFJet36_PNetBTag0p35_v5',
    'HLT_PFHT450_SixPFJet36_v16' ),
  ParkingLLP = cms.vstring( 'HLT_HT350_DelayedJet40_SingleDelay1p5To3p5nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay1p6To3p5nsInclusive_v5',
    'HLT_HT350_DelayedJet40_SingleDelay1p75To3p5nsInclusive_v5',
    'HLT_HT360_DisplacedDijet40_Inclusive1PtrkShortSig5_v5',
    'HLT_HT360_DisplacedDijet45_Inclusive1PtrkShortSig5_v5',
    'HLT_HT390_DisplacedDijet40_Inclusive1PtrkShortSig5_v5',
    'HLT_HT390_DisplacedDijet45_Inclusive1PtrkShortSig5_v5',
    'HLT_HT390eta2p0_DisplacedDijet40_Inclusive1PtrkShortSig5_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1To1p5nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p1To1p6nsInclusive_v5',
    'HLT_HT430_DelayedJet40_SingleDelay1p25To1p75nsInclusive_v5',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v21',
    'HLT_HT430_DisplacedDijet40_Inclusive1PtrkShortSig5_v9',
    'HLT_HT650_DisplacedDijet60_Inclusive_v21',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p5To4nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p6To4nsInclusive_v5',
    'HLT_L1Tau_DelayedJet40_SingleDelay2p75To4nsInclusive_v5' ),
  ParkingSingleMuon0 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v2',
    'HLT_Mu0_Barrel_L1HP11_v2',
    'HLT_Mu0_Barrel_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v2' ),
  ParkingSingleMuon1 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v2',
    'HLT_Mu0_Barrel_L1HP11_v2',
    'HLT_Mu0_Barrel_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v2' ),
  ParkingSingleMuon2 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v2',
    'HLT_Mu0_Barrel_L1HP11_v2',
    'HLT_Mu0_Barrel_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v2' ),
  ParkingSingleMuon3 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v2',
    'HLT_Mu0_Barrel_L1HP11_v2',
    'HLT_Mu0_Barrel_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v2' ),
  ParkingSingleMuon4 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v2',
    'HLT_Mu0_Barrel_L1HP11_v2',
    'HLT_Mu0_Barrel_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v2' ),
  ParkingSingleMuon5 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v2',
    'HLT_Mu0_Barrel_L1HP11_v2',
    'HLT_Mu0_Barrel_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v2' ),
  ParkingSingleMuon6 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v2',
    'HLT_Mu0_Barrel_L1HP11_v2',
    'HLT_Mu0_Barrel_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v2' ),
  ParkingSingleMuon7 = cms.vstring( 'HLT_Mu0_Barrel_L1HP10_v2',
    'HLT_Mu0_Barrel_L1HP11_v2',
    'HLT_Mu0_Barrel_v2',
    'HLT_Mu10_Barrel_L1HP11_IP6_v2',
    'HLT_Mu9_Barrel_L1HP10_IP6_v2' ),
  ParkingVBF0 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v6',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v4',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v2',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v9',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v2' ),
  ParkingVBF1 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v6',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v4',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v2',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v9',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v2' ),
  ParkingVBF2 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v6',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v4',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v2',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v9',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v2' ),
  ParkingVBF3 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v6',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v4',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v2',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v9',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v2' ),
  ParkingVBF4 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v6',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v4',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v2',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v9',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v2' ),
  ParkingVBF5 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v6',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v4',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v2',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v9',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v2' ),
  ParkingVBF6 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v6',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v4',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v2',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v9',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v2' ),
  ParkingVBF7 = cms.vstring( 'HLT_QuadPFJet100_88_70_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet100_88_70_30_v6',
    'HLT_QuadPFJet103_88_75_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet103_88_75_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet103_88_75_15_v13',
    'HLT_QuadPFJet105_88_75_30_PNet1CvsAll0p5_VBF3Tight_v6',
    'HLT_QuadPFJet105_88_75_30_v5',
    'HLT_QuadPFJet105_88_76_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet105_88_76_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet105_88_76_15_v13',
    'HLT_QuadPFJet111_90_80_15_PNet2BTag_0p4_0p12_VBF1_v2',
    'HLT_QuadPFJet111_90_80_15_PNetBTag_0p4_VBF2_v2',
    'HLT_QuadPFJet111_90_80_15_v13',
    'HLT_QuadPFJet111_90_80_30_PNet1CvsAll0p6_VBF3Tight_v6',
    'HLT_QuadPFJet111_90_80_30_v5',
    'HLT_VBF_DiPFJet125_45_Mjj1050_v4',
    'HLT_VBF_DiPFJet125_45_Mjj1200_v2',
    'HLT_VBF_DiPFJet45_Mjj650_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj650_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet45_Mjj750_MediumDeepTauPFTauHPS45_L2NN_eta2p1_v2',
    'HLT_VBF_DiPFJet45_Mjj750_PNetTauhPFJet45_L2NN_eta2p3_v2',
    'HLT_VBF_DiPFJet50_Mjj600_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Ele22_eta2p1_WPTight_Gsf_v2',
    'HLT_VBF_DiPFJet50_Mjj650_Photon22_v2',
    'HLT_VBF_DiPFJet50_Mjj750_Photon22_v2',
    'HLT_VBF_DiPFJet75_45_Mjj800_DiPFJet60_v2',
    'HLT_VBF_DiPFJet75_45_Mjj850_DiPFJet60_v2',
    'HLT_VBF_DiPFJet80_45_Mjj650_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet80_45_Mjj750_PFMETNoMu85_v2',
    'HLT_VBF_DiPFJet95_45_Mjj750_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DiPFJet95_45_Mjj850_Mu3_TrkIsoVVL_v2',
    'HLT_VBF_DoubleMediumDeepTauPFTauHPS20_eta2p1_v9',
    'HLT_VBF_DoublePNetTauhPFJet20_eta2p2_v2' ),
  RPCMonitor = cms.vstring( 'AlCa_RPCMuonNormalisation_v20' ),
  ScoutingPFMonitor = cms.vstring( 'DST_PFScouting_AXONominal_v2',
    'DST_PFScouting_AXOTight_v2',
    'DST_PFScouting_DoubleEG_v2',
    'DST_PFScouting_DoubleMuon_v2',
    'DST_PFScouting_JetHT_v2',
    'DST_PFScouting_SingleMuon_v2',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v23',
    'HLT_Ele35_WPTight_Gsf_v17',
    'HLT_IsoMu27_v24',
    'HLT_Mu50_v21',
    'HLT_PFHT1050_v26',
    'HLT_Photon200_v22' ),
  ScoutingPFRun3 = cms.vstring( 'DST_PFScouting_AXONominal_v2',
    'DST_PFScouting_AXOTight_v2',
    'DST_PFScouting_DatasetMuon_v2',
    'DST_PFScouting_DoubleEG_v2',
    'DST_PFScouting_DoubleMuon_v2',
    'DST_PFScouting_JetHT_v2',
    'DST_PFScouting_SingleMuon_v2' ),
  Tau = cms.vstring( 'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_noDxy_v4',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS32_Trk1_eta2p1_v9',
    'HLT_DoubleMediumChargedIsoDisplacedPFTauHPS36_Trk1_eta2p1_v4',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_v4',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_v8',
    'HLT_DoubleMediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_v8',
    'HLT_DoubleMediumDeepTauPFTauHPS35_L2NN_eta2p1_v8',
    'HLT_DoublePNetTauhPFJet26_L2NN_eta2p3_PFJet60_v2',
    'HLT_DoublePNetTauhPFJet26_L2NN_eta2p3_PFJet75_v2',
    'HLT_DoublePNetTauhPFJet30_Medium_L2NN_eta2p3_v2',
    'HLT_DoublePNetTauhPFJet30_Tight_L2NN_eta2p3_v2',
    'HLT_LooseDeepTauPFTauHPS180_L2NN_eta2p1_v9',
    'HLT_SinglePNetTauhPFJet130_Loose_L2NN_eta2p3_v2',
    'HLT_SinglePNetTauhPFJet130_Medium_L2NN_eta2p3_v2',
    'HLT_SinglePNetTauhPFJet130_Tight_L2NN_eta2p3_v2' ),
  TestEnablesEcalHcal = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  TestEnablesEcalHcalDQM = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v6' ),
  ZeroBias = cms.vstring( 'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v6',
    'HLT_ZeroBias_FirstBXAfterTrain_v8',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v10',
    'HLT_ZeroBias_FirstCollisionInTrain_v9',
    'HLT_ZeroBias_IsolatedBunches_v10',
    'HLT_ZeroBias_LastCollisionInTrain_v8',
    'HLT_ZeroBias_v11' )
)

process.CSCChannelMapperESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCChannelMapperRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.CSCINdexerESSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "CSCIndexerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.GlobalParametersRcdSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "L1TGlobalParametersRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.GlobalTag = cms.ESSource( "PoolDBESSource",
    DBParameters = cms.PSet( 
      connectionRetrialTimeOut = cms.untracked.int32( 60 ),
      idleConnectionCleanupPeriod = cms.untracked.int32( 10 ),
      enableReadOnlySessionOnUpdateConnection = cms.untracked.bool( False ),
      enablePoolAutomaticCleanUp = cms.untracked.bool( False ),
      messageLevel = cms.untracked.int32( 0 ),
      authenticationPath = cms.untracked.string( "." ),
      connectionRetrialPeriod = cms.untracked.int32( 10 ),
      connectionTimeOut = cms.untracked.int32( 0 ),
      enableConnectionSharing = cms.untracked.bool( True )
    ),
    connect = cms.string( "frontier://FrontierProd/CMS_CONDITIONS" ),
    globaltag = cms.string( "None" ),
    snapshotTime = cms.string( "" ),
    toGet = cms.VPSet( 
      cms.PSet(  refreshTime = cms.uint64( 2 ),
        record = cms.string( "BeamSpotOnlineLegacyObjectsRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 2 ),
        record = cms.string( "BeamSpotOnlineHLTObjectsRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 40 ),
        record = cms.string( "LHCInfoPerLSRcd" )
      ),
      cms.PSet(  refreshTime = cms.uint64( 40 ),
        record = cms.string( "LHCInfoPerFillRcd" )
      )
    ),
    DumpStat = cms.untracked.bool( False ),
    ReconnectEachRun = cms.untracked.bool( True ),
    RefreshAlways = cms.untracked.bool( False ),
    RefreshEachRun = cms.untracked.bool( True ),
    RefreshOpenIOVs = cms.untracked.bool( False ),
    pfnPostfix = cms.untracked.string( "" ),
    pfnPrefix = cms.untracked.string( "" )
)
process.HcalTimeSlewEP = cms.ESSource( "HcalTimeSlewEP",
    appendToDataLabel = cms.string( "HBHE" ),
    timeSlewParametersM2 = cms.VPSet( 
      cms.PSet(  tmax = cms.double( 16.0 ),
        tzero = cms.double( 23.960177 ),
        slope = cms.double( -3.178648 )
      ),
      cms.PSet(  tmax = cms.double( 10.0 ),
        tzero = cms.double( 11.977461 ),
        slope = cms.double( -1.5610227 )
      ),
      cms.PSet(  tmax = cms.double( 6.25 ),
        tzero = cms.double( 9.109694 ),
        slope = cms.double( -1.075824 )
      )
    ),
    timeSlewParametersM3 = cms.VPSet( 
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 32.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -3.2 ),
        tspar0 = cms.double( 15.5 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      ),
      cms.PSet(  tspar0_siPM = cms.double( 0.0 ),
        tspar2_siPM = cms.double( 0.0 ),
        tspar2 = cms.double( 0.0 ),
        cap = cms.double( 6.0 ),
        tspar1 = cms.double( -2.19142 ),
        tspar0 = cms.double( 12.2999 ),
        tspar1_siPM = cms.double( 0.0 )
      )
    )
)
process.HepPDTESSource = cms.ESSource( "HepPDTESSource",
    pdtFileName = cms.FileInPath( "SimGeneral/HepPDTESSource/data/pythiaparticle.tbl" )
)
process.ecalMultifitParametersSource = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalMultifitParametersRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.eegeom = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalMappingRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.es_hardcode = cms.ESSource( "HcalHardcodeCalibrations",
    fromDDD = cms.untracked.bool( False ),
    toGet = cms.untracked.vstring( 'GainWidths' )
)
process.hcalMahiPulseOffsetsGPUESProducer = cms.ESSource( "HcalMahiPulseOffsetsGPUESProducer",
    pulseOffsets = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
    appendToDataLabel = cms.string( "" )
)
process.hltESSBTagRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "JetTagComputerRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSJobConfigurationGPURecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "JobConfigurationGPURecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSPFRecHitHCALParamsRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "PFRecHitHCALParamsRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSPFRecHitHCALTopologyRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "PFRecHitHCALTopologyRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.hltESSTfGraphRecord = cms.ESSource( "EmptyESSource",
    recordName = cms.string( "TfGraphRecord" ),
    iovIsRunNotTime = cms.bool( True ),
    firstValid = cms.vuint32( 1 )
)
process.ppsPixelTopologyESSource = cms.ESSource( "PPSPixelTopologyESSource",
    RunType = cms.string( "Run3" ),
    PitchSimY = cms.double( 0.15 ),
    PitchSimX = cms.double( 0.1 ),
    thickness = cms.double( 0.23 ),
    noOfPixelSimX = cms.int32( 160 ),
    noOfPixelSimY = cms.int32( 104 ),
    noOfPixels = cms.int32( 16640 ),
    simXWidth = cms.double( 16.6 ),
    simYWidth = cms.double( 16.2 ),
    deadEdgeWidth = cms.double( 0.2 ),
    activeEdgeSigma = cms.double( 0.02 ),
    physActiveEdgeDist = cms.double( 0.15 ),
    appendToDataLabel = cms.string( "" )
)

process.AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  PropagationDirection = cms.string( "anyDirection" )
)
process.CSCChannelMapperESProducer = cms.ESProducer( "CSCChannelMapperESProducer",
  AlgoName = cms.string( "CSCChannelMapperPostls1" )
)
process.CSCGeometryESModule = cms.ESProducer( "CSCGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  useRealWireGeometry = cms.bool( True ),
  useOnlyWiresInME1a = cms.bool( False ),
  useGangedStripsInME1a = cms.bool( False ),
  useCentreTIOffsets = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  debugV = cms.untracked.bool( False )
)
process.CSCIndexerESProducer = cms.ESProducer( "CSCIndexerESProducer",
  AlgoName = cms.string( "CSCIndexerPostls1" )
)
process.CSCObjectMapESProducer = cms.ESProducer( "CSCObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
process.CaloGeometryBuilder = cms.ESProducer( "CaloGeometryBuilder",
  SelectedCalos = cms.vstring( 'HCAL',
    'ZDC',
    'EcalBarrel',
    'EcalEndcap',
    'EcalPreshower',
    'TOWER' )
)
process.CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder" )
process.CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" ),
  MapAuto = cms.untracked.bool( False ),
  SkipHE = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.CaloTowerGeometryFromDBEP = cms.ESProducer( "CaloTowerGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.CaloTowerTopologyEP = cms.ESProducer( "CaloTowerTopologyEP",
  appendToDataLabel = cms.string( "" )
)
process.CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  appendToDataLabel = cms.string( "" )
)
process.ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
process.DTGeometryESModule = cms.ESProducer( "DTGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  DDDetector = cms.ESInputTag( "","" ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" ),
  attribute = cms.string( "MuStructure" ),
  value = cms.string( "MuonBarrelDT" ),
  applyAlignment = cms.bool( True )
)
process.DTObjectMapESProducer = cms.ESProducer( "DTObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
process.EcalBarrelGeometryFromDBEP = cms.ESProducer( "EcalBarrelGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.EcalElectronicsMappingBuilder = cms.ESProducer( "EcalElectronicsMappingBuilder" )
process.EcalEndcapGeometryFromDBEP = cms.ESProducer( "EcalEndcapGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.EcalLaserCorrectionService = cms.ESProducer( "EcalLaserCorrectionService",
  maxExtrapolationTimeInSec = cms.uint32( 0 ),
  appendToDataLabel = cms.string( "" )
)
process.EcalPreshowerGeometryFromDBEP = cms.ESProducer( "EcalPreshowerGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
process.GEMGeometryESModule = cms.ESProducer( "GEMGeometryESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  applyAlignment = cms.bool( False ),
  alignmentsLabel = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.GlobalParameters = cms.ESProducer( "StableParametersTrivialProducer",
  TotalBxInEvent = cms.int32( 5 ),
  NumberPhysTriggers = cms.uint32( 512 ),
  NumberL1Muon = cms.uint32( 8 ),
  NumberL1EGamma = cms.uint32( 12 ),
  NumberL1Jet = cms.uint32( 12 ),
  NumberL1Tau = cms.uint32( 12 ),
  NumberChips = cms.uint32( 1 ),
  PinsOnChip = cms.uint32( 512 ),
  OrderOfChip = cms.vint32( 1 ),
  NumberL1IsoEG = cms.uint32( 4 ),
  NumberL1JetCounts = cms.uint32( 12 ),
  UnitLength = cms.int32( 8 ),
  NumberL1ForJet = cms.uint32( 4 ),
  IfCaloEtaNumberBits = cms.uint32( 4 ),
  IfMuEtaNumberBits = cms.uint32( 6 ),
  NumberL1TauJet = cms.uint32( 4 ),
  NumberL1Mu = cms.uint32( 4 ),
  NumberConditionChips = cms.uint32( 1 ),
  NumberPsbBoards = cms.int32( 7 ),
  NumberL1CenJet = cms.uint32( 4 ),
  PinsOnConditionChip = cms.uint32( 512 ),
  NumberL1NoIsoEG = cms.uint32( 4 ),
  NumberTechnicalTriggers = cms.uint32( 64 ),
  NumberPhysTriggersExtended = cms.uint32( 64 ),
  WordLength = cms.int32( 64 ),
  OrderConditionChip = cms.vint32( 1 ),
  appendToDataLabel = cms.string( "" )
)
process.HcalGeometryFromDBEP = cms.ESProducer( "HcalGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.HcalTopologyIdealEP = cms.ESProducer( "HcalTopologyIdealEP",
  Exclude = cms.untracked.string( "" ),
  MergePosition = cms.untracked.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.MaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.MaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  Mass = cms.double( 0.139 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositeMaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.OppositePropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
process.ParametrizedMagneticFieldProducer = cms.ESProducer( "AutoParametrizedMagneticFieldProducer",
  version = cms.string( "Parabolic" ),
  label = cms.untracked.string( "ParabolicMf" ),
  valueOverride = cms.int32( -1 )
)
process.PropagatorWithMaterialForLoopers = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 4.0 ),
  ComponentName = cms.string( "PropagatorWithMaterialForLoopers" ),
  Mass = cms.double( 0.1396 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.PropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStep" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( 0.1 )
)
process.RPCGeometryESModule = cms.ESProducer( "RPCGeometryESModule",
  fromDDD = cms.untracked.bool( False ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.SiPixelTemplateStoreESProducer = cms.ESProducer( "SiPixelTemplateStoreESProducer",
  appendToDataLabel = cms.string( "" )
)
process.SiStripClusterizerConditionsESProducer = cms.ESProducer( "SiStripClusterizerConditionsESProducer",
  QualityLabel = cms.string( "" ),
  Label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.SiStripGainESProducer = cms.ESProducer( "SiStripGainESProducer",
  appendToDataLabel = cms.string( "" ),
  printDebug = cms.untracked.bool( False ),
  AutomaticNormalization = cms.bool( False ),
  APVGain = cms.VPSet( 
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGainRcd" )
    ),
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGain2Rcd" )
    )
  )
)
process.SiStripQualityESProducer = cms.ESProducer( "SiStripQualityESProducer",
  appendToDataLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiStripDetVOffRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripDetCablingRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadChannelRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadFiberRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadModuleRcd" ),
      tag = cms.string( "" )
    )
  ),
  ReduceGranularity = cms.bool( False ),
  ThresholdForReducedGranularity = cms.double( 0.3 ),
  PrintDebugOutput = cms.bool( False ),
  UseEmptyRunInfo = cms.bool( False )
)
process.SiStripRecHitMatcherESProducer = cms.ESProducer( "SiStripRecHitMatcherESProducer",
  ComponentName = cms.string( "StandardMatcher" ),
  NSigmaInside = cms.double( 3.0 ),
  PreFilter = cms.bool( False )
)
process.SiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 )
)
process.SimpleSecondaryVertex3TrkComputer = cms.ESProducer( "SimpleSecondaryVertexESProducer",
  use3d = cms.bool( True ),
  unBoost = cms.bool( False ),
  useSignificance = cms.bool( True ),
  minTracks = cms.uint32( 3 ),
  minVertices = cms.uint32( 1 )
)
process.SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "SteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.TrackerDigiGeometryESModule = cms.ESProducer( "TrackerDigiGeometryESModule",
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  alignmentsLabel = cms.string( "" )
)
process.TrackerGeometricDetESModule = cms.ESProducer( "TrackerGeometricDetESModule",
  fromDDD = cms.bool( False ),
  fromDD4hep = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" )
)
process.VolumeBasedMagneticFieldESProducer = cms.ESProducer( "VolumeBasedMagneticFieldESProducerFromDB",
  label = cms.untracked.string( "" ),
  debugBuilder = cms.untracked.bool( False ),
  valueOverride = cms.int32( -1 )
)
process.ZdcGeometryFromDBEP = cms.ESProducer( "ZdcGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
process.caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "" )
)
process.ctppsGeometryESModule = cms.ESProducer( "CTPPSGeometryESModule",
  verbosity = cms.untracked.uint32( 1 ),
  buildMisalignedGeometry = cms.bool( False ),
  isRun2 = cms.bool( False ),
  dbTag = cms.string( "" ),
  compactViewTag = cms.string( "" ),
  fromPreprocessedDB = cms.untracked.bool( True ),
  fromDD4hep = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.ctppsInterpolatedOpticalFunctionsESSource = cms.ESProducer( "CTPPSInterpolatedOpticalFunctionsESSource",
  lhcInfoLabel = cms.string( "" ),
  lhcInfoPerFillLabel = cms.string( "" ),
  lhcInfoPerLSLabel = cms.string( "" ),
  opticsLabel = cms.string( "" ),
  useNewLHCInfo = cms.bool( True ),
  appendToDataLabel = cms.string( "" )
)
process.ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.ecalElectronicsMappingHostESProducer = cms.ESProducer( "EcalElectronicsMappingHostESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.ecalMultifitConditionsHostESProducer = cms.ESProducer( "EcalMultifitConditionsHostESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.ecalMultifitParametersHostESProducer = cms.ESProducer( "EcalMultifitParametersHostESProducer@alpaka",
  EBtimeFitParameters = cms.vdouble( -2.015452, 3.130702, -12.3473, 41.88921, -82.83944, 91.01147, -50.35761, 11.05621 ),
  EEtimeFitParameters = cms.vdouble( -2.390548, 3.553628, -17.62341, 67.67538, -133.213, 140.7432, -75.41106, 16.20277 ),
  EBamplitudeFitParameters = cms.vdouble( 1.138, 1.652 ),
  EEamplitudeFitParameters = cms.vdouble( 1.89, 1.4 ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  flagMask = cms.PSet( 
    kBad = cms.vstring( 'kFaultyHardware',
      'kDead',
      'kKilled' ),
    kGood = cms.vstring( 'kGood' ),
    kRecovered = cms.vstring( 'kLeadingEdgeRecovered',
      'kTowerRecovered' ),
    kProblematic = cms.vstring( 'kPoorReco',
      'kPoorCalib',
      'kNoisy',
      'kSaturated' ),
    kWeird = cms.vstring( 'kWeird',
      'kDiWeird' ),
    kTime = cms.vstring( 'kOutOfTime' )
  ),
  dbstatusMask = cms.PSet( 
    kBad = cms.vstring( 'kNonRespondingIsolated',
      'kDeadVFE',
      'kDeadFE',
      'kNoDataNoTP' ),
    kGood = cms.vstring( 'kOk' ),
    kRecovered = cms.vstring(  ),
    kProblematic = cms.vstring( 'kDAC',
      'kNoLaser',
      'kNoisy',
      'kNNoisy',
      'kNNNoisy',
      'kNNNNoisy',
      'kNNNNNoisy',
      'kFixedG6',
      'kFixedG1',
      'kFixedG0' ),
    kWeird = cms.vstring(  ),
    kTime = cms.vstring(  )
  ),
  timeThresh = cms.double( 2.0 )
)
process.hcalChannelPropertiesESProd = cms.ESProducer( "HcalChannelPropertiesEP" )
process.hcalChannelQualityGPUESProducer = cms.ESProducer( "HcalChannelQualityGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedEffectivePedestalWidthsGPUESProducer = cms.ESProducer( "HcalConvertedEffectivePedestalWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "withTopoEff" ),
  label1 = cms.string( "withTopoEff" ),
  label2 = cms.string( "" ),
  label3 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedEffectivePedestalsGPUESProducer = cms.ESProducer( "HcalConvertedEffectivePedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "withTopoEff" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedPedestalWidthsGPUESProducer = cms.ESProducer( "HcalConvertedPedestalWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  label3 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalConvertedPedestalsGPUESProducer = cms.ESProducer( "HcalConvertedPedestalsGPUESProducer",
  ComponentName = cms.string( "" ),
  label0 = cms.string( "" ),
  label1 = cms.string( "" ),
  label2 = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalDDDRecConstants = cms.ESProducer( "HcalDDDRecConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
process.hcalDDDSimConstants = cms.ESProducer( "HcalDDDSimConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
process.hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.hcalElectronicsMappingGPUESProducer = cms.ESProducer( "HcalElectronicsMappingGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalGainWidthsGPUESProducer = cms.ESProducer( "HcalGainWidthsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalGainsGPUESProducer = cms.ESProducer( "HcalGainsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalLUTCorrsGPUESProducer = cms.ESProducer( "HcalLUTCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalQIECodersGPUESProducer = cms.ESProducer( "HcalQIECodersGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalQIETypesGPUESProducer = cms.ESProducer( "HcalQIETypesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  phase = cms.uint32( 1 ),
  RecoveredRecHitBits = cms.vstring( '' ),
  SeverityLevels = cms.VPSet( 
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellExcludeFromHBHENoiseSummary' ),
      RecHitFlags = cms.vstring( 'HBHEIsolatedNoise',
        'HFAnomalousHit' ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
        'HBHESpikeNoise',
        'HBHETS4TS5Noise',
        'HBHEOOTPU',
        'HBHEFlatNoise',
        'HBHENegativeNoise' ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( '' ),
      RecHitFlags = cms.vstring( 'HFLongShort',
        'HFS8S1Ratio',
        'HFPET',
        'HFSignalAsymmetry' ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerMask' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 12 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellHot' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellOff',
  'HcalCellDead' ),
      RecHitFlags = cms.vstring( '' ),
      Level = cms.int32( 20 )
    )
  ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRecoParamsWithPulseShapesGPUESProducer = cms.ESProducer( "HcalRecoParamsWithPulseShapesGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalRespCorrsGPUESProducer = cms.ESProducer( "HcalRespCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalSiPMCharacteristicsGPUESProducer = cms.ESProducer( "HcalSiPMCharacteristicsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalSiPMParametersGPUESProducer = cms.ESProducer( "HcalSiPMParametersGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcalTimeCorrsGPUESProducer = cms.ESProducer( "HcalTimeCorrsGPUESProducer",
  ComponentName = cms.string( "" ),
  label = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hcal_db_producer = cms.ESProducer( "HcalDbProducer" )
process.hltBoostedDoubleSecondaryVertexAK8Computer = cms.ESProducer( "CandidateBoostedDoubleSecondaryVertexESProducer",
  useCondDB = cms.bool( False ),
  weightFile = cms.FileInPath( "RecoBTag/SecondaryVertex/data/BoostedDoubleSV_AK8_BDT_v4.weights.xml.gz" ),
  useGBRForest = cms.bool( True ),
  useAdaBoost = cms.bool( False )
)
process.hltCombinedSecondaryVertex = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( 2.0 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( -99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVRecoVertex',
    'CombinedSVPseudoVertex',
    'CombinedSVNoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
process.hltCombinedSecondaryVertexV2 = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  trackPseudoSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( 2.0 )
  ),
  trackSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( -99999.9 )
  ),
  trackFlip = cms.bool( False ),
  vertexFlip = cms.bool( False ),
  SoftLeptonFlip = cms.bool( False ),
  useTrackWeights = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackSort = cms.string( "sip2dSig" ),
  useCategories = cms.bool( True ),
  calibrationRecords = cms.vstring( 'CombinedSVIVFV2RecoVertex',
    'CombinedSVIVFV2PseudoVertex',
    'CombinedSVIVFV2NoVertex' ),
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" )
)
process.hltDisplacedDijethltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltDisplacedDijethltESPTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" )
)
process.hltESPBwdAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdAnalyticalPropagator" ),
  PropagationDirection = cms.string( "oppositeToMomentum" )
)
process.hltESPBwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.hltESPChi2ChargeLooseMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeLooseMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator2000 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 2000.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeMeasurementEstimator9ForHI = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutForHI" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2ChargeTightMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator100 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 40.0 ),
  nSigma = cms.double( 4.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator100" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator16 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator16" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator30 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator30" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPChi2MeasurementEstimator9 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator9" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPCloseComponentsMerger5D = cms.ESProducer( "CloseComponentsMergerESProducer5D",
  ComponentName = cms.string( "hltESPCloseComponentsMerger5D" ),
  MaxComponents = cms.int32( 12 ),
  DistanceMeasure = cms.string( "hltESPKullbackLeiblerDistance5D" )
)
process.hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDetachedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPDetachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducerLong = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.2 ),
  maxImpactParameterSig = cms.double( 999999.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltPromptTrackCountingESProducerShortSig5 = cms.ESProducer( "PromptTrackCountingESProducer",
  impactParameterType = cms.int32( 1 ),
  minimumImpactParameter = cms.double( -1.0 ),
  useSignedImpactParameterSig = cms.bool( False ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  deltaRmin = cms.double( 0.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  maxImpactParameter = cms.double( 0.05 ),
  maxImpactParameterSig = cms.double( 5.0 ),
  trackQualityClass = cms.string( "any" ),
  nthTrack = cms.int32( -1 )
)
process.hltESPDisplacedDijethltTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDisplacedDijethltTrackCounting2D1stLoose = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.03 ),
  useSignedImpactParameterSig = cms.bool( False ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDisplacedDijethltTrackCounting2D2ndLong = cms.ESProducer( "TrackCountingESProducer",
  a_dR = cms.double( -0.001053 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  b_pT = cms.double( 0.3684 ),
  min_pT = cms.double( 120.0 ),
  max_pT = cms.double( 500.0 ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_dRcut = cms.double( 0.1 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  minimumImpactParameter = cms.double( 0.2 ),
  useSignedImpactParameterSig = cms.bool( True ),
  impactParameterType = cms.int32( 1 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  deltaR = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 2 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False )
)
process.hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" )
)
process.hltESPEcalTrigTowerConstituentsMapBuilder = cms.ESProducer( "EcalTrigTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/EcalMapping/data/EndCap_TTMap.txt" )
)
process.hltESPElectronMaterialEffects = cms.ESProducer( "GsfMaterialEffectsESProducer",
  BetheHeitlerParametrization = cms.string( "BetheHeitler_cdfmom_nC6_O5.par" ),
  EnergyLossUpdator = cms.string( "GsfBetheHeitlerUpdator" ),
  ComponentName = cms.string( "hltESPElectronMaterialEffects" ),
  MultipleScatteringUpdator = cms.string( "MultipleScatteringUpdator" ),
  Mass = cms.double( 5.11E-4 ),
  BetheHeitlerCorrection = cms.int32( 2 )
)
process.hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  looperFitter = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPFwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPFwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( False ),
  ptMin = cms.double( -1.0 )
)
process.hltESPGlobalDetLayerGeometry = cms.ESProducer( "GlobalDetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPGlobalTrackingGeometryESProducer = cms.ESProducer( "GlobalTrackingGeometryESProducer" )
process.hltESPGsfElectronFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPGsfElectronFittingSmoother" ),
  Fitter = cms.string( "hltESPGsfTrajectoryFitter" ),
  Smoother = cms.string( "hltESPGsfTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPGsfTrajectoryFitter = cms.ESProducer( "GsfTrajectoryFitterESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectoryFitter" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  GeometricalPropagator = cms.string( "hltESPAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPGsfTrajectorySmoother = cms.ESProducer( "GsfTrajectorySmootherESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectorySmoother" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  ErrorRescaling = cms.double( 100.0 ),
  GeometricalPropagator = cms.string( "hltESPBwdAnalyticalPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
process.hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPInitialStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 30.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPInitialStepChi2MeasurementEstimator36 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 36.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2MeasurementEstimator36" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  EstimateCut = cms.double( -1.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 5 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  EstimateCut = cms.double( 20.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 3 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" )
)
process.hltESPKullbackLeiblerDistance5D = cms.ESProducer( "DistanceBetweenComponentsESProducer5D",
  ComponentName = cms.string( "hltESPKullbackLeiblerDistance5D" ),
  DistanceMeasure = cms.string( "KullbackLeibler" )
)
process.hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtQuadStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPLowPtStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPLowPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  HitMatcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  SiStripQualityLabel = cms.string( "" ),
  UseStripModuleQualityDB = cms.bool( True ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  MaskBadAPVFibers = cms.bool( True ),
  UseStripStripQualityDB = cms.bool( True ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TIB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TID = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TEC = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    )
  ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPMixedStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMixedTripletStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPMixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedTripletStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPMuonDetLayerGeometryESProducer = cms.ESProducer( "MuonDetLayerGeometryESProducer" )
process.hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
)
process.hltESPPFClusterParams = cms.ESProducer( "PFClusterParamsESProducer@alpaka",
  seedFinder = cms.PSet( 
    thresholdsByDetector = cms.VPSet( 
      cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
        seedingThreshold = cms.vdouble( 0.125, 0.25, 0.35, 0.35 ),
        detector = cms.string( "HCAL_BARREL1" )
      ),
      cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
        seedingThreshold = cms.vdouble( 0.1375, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275 ),
        detector = cms.string( "HCAL_ENDCAP" )
      )
    ),
    nNeighbours = cms.int32( 4 )
  ),
  initialClusteringStep = cms.PSet(  thresholdsByDetector = cms.VPSet( 
  cms.PSet(  gatheringThreshold = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
    detector = cms.string( "HCAL_BARREL1" )
  ),
  cms.PSet(  gatheringThreshold = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    detector = cms.string( "HCAL_ENDCAP" )
  )
) ),
  pfClusterBuilder = cms.PSet( 
    minFracTot = cms.double( 1.0E-20 ),
    stoppingTolerance = cms.double( 1.0E-8 ),
    positionCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 1.0E-9 ),
      minFractionInCalc = cms.double( 1.0E-9 )
    ),
    maxIterations = cms.uint32( 5 ),
    recHitEnergyNorms = cms.VPSet( 
      cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
        detector = cms.string( "HCAL_BARREL1" )
      ),
      cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
        detector = cms.string( "HCAL_ENDCAP" )
      )
    ),
    showerSigma = cms.double( 10.0 ),
    minFractionToKeep = cms.double( 1.0E-7 ),
    excludeOtherSeeds = cms.bool( True ),
    timeResolutionCalcBarrel = cms.PSet( 
      corrTermLowE = cms.double( 0.0 ),
      threshLowE = cms.double( 6.0 ),
      noiseTerm = cms.double( 21.86 ),
      constantTermLowE = cms.double( 4.24 ),
      noiseTermLowE = cms.double( 8.0 ),
      threshHighE = cms.double( 15.0 ),
      constantTerm = cms.double( 2.82 )
    ),
    timeResolutionCalcEndcap = cms.PSet( 
      corrTermLowE = cms.double( 0.0 ),
      threshLowE = cms.double( 6.0 ),
      noiseTerm = cms.double( 21.86 ),
      constantTermLowE = cms.double( 4.24 ),
      noiseTermLowE = cms.double( 8.0 ),
      threshHighE = cms.double( 15.0 ),
      constantTerm = cms.double( 2.82 )
    )
  ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPFRecHitHCALParams = cms.ESProducer( "PFRecHitHCALParamsESProducer@alpaka",
  energyThresholdsHB = cms.vdouble( 0.1, 0.2, 0.3, 0.3 ),
  energyThresholdsHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPFRecHitHCALTopology = cms.ESProducer( "PFRecHitHCALTopologyESProducer@alpaka",
  usePFThresholdsFromDB = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPixelCPEFastHIon = cms.ESProducer( "PixelCPEFastESProducerHIonPhase1",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "hltESPPixelCPEFastHIon" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPEFastParamsPhase1 = cms.ESProducer( "PixelCPEFastParamsESProducerAlpakaPhase1@alpaka",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  ComponentName = cms.string( "PixelCPEFastParams" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( False ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  xerr_barrel_l1 = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_l1 = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_barrel_ln = cms.vdouble( 0.00115, 0.0012, 8.8E-4 ),
  yerr_barrel_ln = cms.vdouble( 0.00375, 0.0023, 0.0025, 0.0025, 0.0023, 0.0023, 0.0021, 0.0021, 0.0024 ),
  xerr_endcap = cms.vdouble( 0.002, 0.002 ),
  yerr_endcap = cms.vdouble( 0.0021 ),
  xerr_barrel_l1_def = cms.double( 0.0103 ),
  yerr_barrel_l1_def = cms.double( 0.0021 ),
  xerr_barrel_ln_def = cms.double( 0.0103 ),
  yerr_barrel_ln_def = cms.double( 0.0021 ),
  xerr_endcap_def = cms.double( 0.002 ),
  yerr_endcap_def = cms.double( 7.5E-4 ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  eff_charge_cut_lowY = cms.double( 0.0 ),
  size_cutX = cms.double( 3.0 ),
  size_cutY = cms.double( 3.0 ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  inflate_errors = cms.bool( False ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  NoTemplateErrorsWhenNoTrkAngles = cms.bool( False ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  IrradiationBiasCorrection = cms.bool( True ),
  DoCosmics = cms.bool( False ),
  isPhase2 = cms.bool( False ),
  SmallPitch = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  MagneticFieldRecord = cms.ESInputTag( "","" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelCPETemplateReco = cms.ESProducer( "PixelCPETemplateRecoESProducer",
  LoadTemplatesFromDB = cms.bool( True ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  useLAWidthFromDB = cms.bool( True ),
  lAOffset = cms.double( 0.0 ),
  lAWidthBPix = cms.double( 0.0 ),
  lAWidthFPix = cms.double( 0.0 ),
  doLorentzFromAlignment = cms.bool( False ),
  useLAFromDB = cms.bool( True ),
  barrelTemplateID = cms.int32( 0 ),
  forwardTemplateID = cms.int32( 0 ),
  directoryWithTemplates = cms.int32( 0 ),
  speed = cms.int32( -2 ),
  UseClusterSplitter = cms.bool( False ),
  ComponentName = cms.string( "hltESPPixelCPETemplateReco" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPPixelLessStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelLessStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPPixelPairStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 9.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelPairStepChi2MeasurementEstimator25 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 25.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MinimalTolerance = cms.double( 10.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2MeasurementEstimator25" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPPixelPairTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelPairTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPRKTrajectoryFitter" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPRKTrajectorySmoother" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Mass = cms.double( 0.105 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useRungeKutta = cms.bool( True ),
  ptMin = cms.double( -1.0 )
)
process.hltESPSiPixelCablingSoA = cms.ESProducer( "SiPixelCablingSoAESProducer@alpaka",
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPSiPixelGainCalibrationForHLTSoA = cms.ESProducer( "SiPixelGainCalibrationForHLTSoAESProducer@alpaka",
  appendToDataLabel = cms.string( "" ),
  alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagator" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAny" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  Epsilon = cms.double( 5.0 )
)
process.hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  distance = cms.double( 0.5 )
)
process.hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
  NoErrorPropagation = cms.bool( False ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  returnTangentPlane = cms.bool( True )
)
process.hltESPStripCPEfromTrackAngle = cms.ESProducer( "StripCPEESProducer",
  ComponentName = cms.string( "hltESPStripCPEfromTrackAngle" ),
  ComponentType = cms.string( "StripCPEfromTrackAngle" ),
  parameters = cms.PSet( 
    mTIB_P1 = cms.double( 0.202 ),
    maxChgOneMIP = cms.double( 6000.0 ),
    mTEC_P0 = cms.double( -1.885 ),
    mTOB_P1 = cms.double( 0.253 ),
    mTEC_P1 = cms.double( 0.471 ),
    mLC_P2 = cms.double( 0.3 ),
    mLC_P1 = cms.double( 0.618 ),
    mTOB_P0 = cms.double( -1.026 ),
    mLC_P0 = cms.double( -0.326 ),
    useLegacyError = cms.bool( False ),
    mTIB_P0 = cms.double( -0.742 ),
    mTID_P1 = cms.double( 0.433 ),
    mTID_P0 = cms.double( -1.427 )
  )
)
process.hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderAngleAndTemplate" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  PixelCPE = cms.string( "hltESPPixelCPETemplateReco" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPTTRHBuilderWithoutAngle4PixelTriplets" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  StripCPE = cms.string( "Fake" ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  Matcher = cms.string( "StandardMatcher" ),
  Phase2StripCPE = cms.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  MaxChi2 = cms.double( 16.0 ),
  nSigma = cms.double( 3.0 ),
  MaxDisplacement = cms.double( 0.5 ),
  MaxSagitta = cms.double( 2.0 ),
  MinimalTolerance = cms.double( 0.5 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 ),
  ComponentName = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  PixelShapeFile = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" ),
  PixelShapeFileL1 = cms.string( "RecoTracker/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  ComponentName = cms.string( "hltESPTobTecStepClusterShapeHitFilter" ),
  isPhase2 = cms.bool( False ),
  doPixelShapeCut = cms.bool( True ),
  doStripShapeCut = cms.bool( True ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmoother" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitter" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmoother" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  Fitter = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Smoother = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  EstimateCut = cms.double( 30.0 ),
  MaxFractionOutliers = cms.double( 0.3 ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  MinNumberOfHits = cms.int32( 7 ),
  MinNumberOfHitsHighEta = cms.int32( 5 ),
  HighEtaSwitch = cms.double( 5.0 ),
  RejectTracks = cms.bool( True ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFlexibleKFFittingSmoother" ),
  standardFitter = cms.string( "hltESPTobTecStepFitterSmoother" ),
  looperFitter = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitter" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmoother" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTobTecStepTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.09 ),
  ValidHitBonus = cms.double( 5.0 ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.hltESPTrackAlgoPriorityOrder = cms.ESProducer( "TrackAlgoPriorityOrderESProducer",
  ComponentName = cms.string( "hltESPTrackAlgoPriorityOrder" ),
  algoOrder = cms.vstring(  ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrackSelectionTfCKF = cms.ESProducer( "TfGraphDefProducer",
  ComponentName = cms.string( "hltESPTrackSelectionTfCKF" ),
  FileName = cms.FileInPath( "RecoTracker/FinalTrackSelectors/data/TrackTfClassifier/CKF_Run3_12_5_0_pre5.pb" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrackerRecoGeometryESProducer = cms.ESProducer( "TrackerRecoGeometryESProducer",
  usePhase2Stacks = cms.bool( False ),
  trackerGeometryLabel = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.5 ),
  ValidHitBonus = cms.double( 100.0 ),
  MissingHitPenalty = cms.double( 0.0 ),
  allowSharedFirstHit = cms.bool( False )
)
process.hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" ),
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  appendToDataLabel = cms.string( "" )
)
process.hltOnlineBeamSpotESProducer = cms.ESProducer( "OnlineBeamSpotESProducer",
  timeThreshold = cms.int32( 48 ),
  sigmaZThreshold = cms.double( 2.0 ),
  sigmaXYThreshold = cms.double( 4.0 ),
  appendToDataLabel = cms.string( "" )
)
process.hltPixelTracksCleanerBySharedHits = cms.ESProducer( "PixelTrackCleanerBySharedHitsESProducer",
  ComponentName = cms.string( "hltPixelTracksCleanerBySharedHits" ),
  useQuadrupletAlgo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.hltTrackCleaner = cms.ESProducer( "TrackCleanerESProducer",
  ComponentName = cms.string( "hltTrackCleaner" ),
  appendToDataLabel = cms.string( "" )
)
process.hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.multipleScatteringParametrisationMakerESProducer = cms.ESProducer( "MultipleScatteringParametrisationMakerESProducer",
  appendToDataLabel = cms.string( "" )
)
process.muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( True ),
  includeGEM = cms.bool( True ),
  includeME0 = cms.bool( False )
)
process.muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.1 ),
  ValidHitBonus = cms.double( 1000.0 ),
  MissingHitPenalty = cms.double( 1.0 ),
  allowSharedFirstHit = cms.bool( True )
)
process.navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  PluginName = cms.string( "" ),
  SimpleMagneticField = cms.string( "ParabolicMf" )
)
process.preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  hcalRegion = cms.int32( 2 ),
  includeBadChambers = cms.bool( False ),
  includeGEM = cms.bool( False ),
  includeME0 = cms.bool( False )
)
process.siPixelGainCalibrationForHLTGPU = cms.ESProducer( "SiPixelGainCalibrationForHLTGPUESProducer",
  appendToDataLabel = cms.string( "" )
)
process.siPixelQualityESProducer = cms.ESProducer( "SiPixelQualityESProducer",
  siPixelQualityFromDbLabel = cms.string( "" ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiPixelQualityFromDbRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiPixelDetVOffRcd" ),
      tag = cms.string( "" )
    )
  ),
  appendToDataLabel = cms.string( "" )
)
process.siPixelROCsStatusAndMappingWrapperESProducer = cms.ESProducer( "SiPixelROCsStatusAndMappingWrapperESProducer",
  ComponentName = cms.string( "" ),
  CablingMapLabel = cms.string( "" ),
  UseQualityInfo = cms.bool( False ),
  appendToDataLabel = cms.string( "" )
)
process.siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer" )
process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer( "SiStripBackPlaneCorrectionDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  BackPlaneCorrectionPeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  ),
  BackPlaneCorrectionDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  )
)
process.siStripLorentzAngleDepESProducer = cms.ESProducer( "SiStripLorentzAngleDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  LorentzAnglePeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  ),
  LorentzAngleDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  )
)
process.sistripconn = cms.ESProducer( "SiStripConnectivity" )
process.trackerTopology = cms.ESProducer( "TrackerTopologyEP",
  appendToDataLabel = cms.string( "" )
)

process.FastTimerService = cms.Service( "FastTimerService",
    printEventSummary = cms.untracked.bool( False ),
    printRunSummary = cms.untracked.bool( True ),
    printJobSummary = cms.untracked.bool( True ),
    writeJSONSummary = cms.untracked.bool( False ),
    jsonFileName = cms.untracked.string( "resources.json" ),
    enableDQM = cms.untracked.bool( True ),
    enableDQMbyModule = cms.untracked.bool( False ),
    enableDQMbyPath = cms.untracked.bool( False ),
    enableDQMbyLumiSection = cms.untracked.bool( True ),
    enableDQMbyProcesses = cms.untracked.bool( True ),
    enableDQMTransitions = cms.untracked.bool( False ),
    dqmTimeRange = cms.untracked.double( 2000.0 ),
    dqmTimeResolution = cms.untracked.double( 5.0 ),
    dqmMemoryRange = cms.untracked.double( 1000000.0 ),
    dqmMemoryResolution = cms.untracked.double( 5000.0 ),
    dqmPathTimeRange = cms.untracked.double( 100.0 ),
    dqmPathTimeResolution = cms.untracked.double( 0.5 ),
    dqmPathMemoryRange = cms.untracked.double( 1000000.0 ),
    dqmPathMemoryResolution = cms.untracked.double( 5000.0 ),
    dqmModuleTimeRange = cms.untracked.double( 40.0 ),
    dqmModuleTimeResolution = cms.untracked.double( 0.2 ),
    dqmModuleMemoryRange = cms.untracked.double( 100000.0 ),
    dqmModuleMemoryResolution = cms.untracked.double( 500.0 ),
    dqmLumiSectionsRange = cms.untracked.uint32( 2500 ),
    dqmPath = cms.untracked.string( "HLT/TimerService" ),
)
process.MessageLogger = cms.Service( "MessageLogger",
    suppressWarning = cms.untracked.vstring( 'hltL3MuonsIOHit',
      'hltL3MuonsOIHit',
      'hltL3MuonsOIState',
      'hltLightPFTracks',
      'hltOnlineBeamSpot',
      'hltPixelTracks',
      'hltPixelTracksForHighMult',
      'hltSiPixelClusters',
      'hltSiPixelDigis' ),
    suppressFwkInfo = cms.untracked.vstring(  ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    debugModules = cms.untracked.vstring(  ),
    cerr = cms.untracked.PSet( 
      INFO = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      noTimeStamps = cms.untracked.bool( False ),
      FwkReport = cms.untracked.PSet( 
        reportEvery = cms.untracked.int32( 1 ),
        limit = cms.untracked.int32( 0 )
      ),
      default = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) ),
      Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
      FwkSummary = cms.untracked.PSet( 
        reportEvery = cms.untracked.int32( 1 ),
        limit = cms.untracked.int32( 10000000 )
      ),
      threshold = cms.untracked.string( "INFO" ),
      enableStatistics = cms.untracked.bool( False )
    ),
    suppressError = cms.untracked.vstring( 'hltL3TkTracksFromL2IOHit',
      'hltL3TkTracksFromL2OIHit',
      'hltL3TkTracksFromL2OIState',
      'hltOnlineBeamSpot' )
)
process.ThroughputService = cms.Service( "ThroughputService",
    eventRange = cms.untracked.uint32( 10000 ),
    eventResolution = cms.untracked.uint32( 1 ),
    printEventSummary = cms.untracked.bool( False ),
    enableDQM = cms.untracked.bool( True ),
    dqmPathByProcesses = cms.untracked.bool( True ),
    dqmPath = cms.untracked.string( "HLT/Throughput" ),
    timeRange = cms.untracked.double( 60000.0 ),
    timeResolution = cms.untracked.double( 5.828 )
)

process.hltGetRaw = cms.EDAnalyzer( "HLTGetRaw",
    RawDataCollection = cms.InputTag( "rawDataCollector" )
)
process.hltPSetMap = cms.EDProducer( "ParameterSetBlobProducer" )
process.hltBoolFalse = cms.EDFilter( "HLTBool",
    result = cms.bool( False )
)
process.hltTriggerType = cms.EDFilter( "HLTTriggerTypeFilter",
    SelectedTriggerType = cms.int32( 1 )
)
process.hltGtStage2Digis = cms.EDProducer( "L1TRawToDigi",
    FedIds = cms.vint32( 1404 ),
    Setup = cms.string( "stage2::GTSetup" ),
    FWId = cms.uint32( 0 ),
    DmxFWId = cms.uint32( 0 ),
    FWOverride = cms.bool( False ),
    TMTCheck = cms.bool( True ),
    CTP7 = cms.untracked.bool( False ),
    MTF7 = cms.untracked.bool( False ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    lenSlinkHeader = cms.untracked.int32( 8 ),
    lenSlinkTrailer = cms.untracked.int32( 8 ),
    lenAMCHeader = cms.untracked.int32( 8 ),
    lenAMCTrailer = cms.untracked.int32( 0 ),
    lenAMC13Header = cms.untracked.int32( 8 ),
    lenAMC13Trailer = cms.untracked.int32( 8 ),
    debug = cms.untracked.bool( False ),
    MinFeds = cms.uint32( 0 )
)
process.hltGtStage2ObjectMap = cms.EDProducer( "L1TGlobalProducer",
    MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' ),
    ExtInputTag = cms.InputTag( "hltGtStage2Digis" ),
    AlgoBlkInputTag = cms.InputTag( "hltGtStage2Digis" ),
    GetPrescaleColumnFromData = cms.bool( False ),
    AlgorithmTriggersUnprescaled = cms.bool( True ),
    RequireMenuToMatchAlgoBlkInput = cms.bool( True ),
    AlgorithmTriggersUnmasked = cms.bool( True ),
    useMuonShowers = cms.bool( True ),
    resetPSCountersEachLumiSec = cms.bool( True ),
    semiRandomInitialPSCounters = cms.bool( False ),
    ProduceL1GtDaqRecord = cms.bool( True ),
    ProduceL1GtObjectMapRecord = cms.bool( True ),
    EmulateBxInEvent = cms.int32( 1 ),
    L1DataBxInEvent = cms.int32( 5 ),
    AlternativeNrBxBoardDaq = cms.uint32( 0 ),
    BstLengthBytes = cms.int32( -1 ),
    PrescaleSet = cms.uint32( 1 ),
    Verbosity = cms.untracked.int32( 0 ),
    PrintL1Menu = cms.untracked.bool( False ),
    TriggerMenuLuminosity = cms.string( "startup" )
)
process.hltOnlineMetaDataDigis = cms.EDProducer( "OnlineMetaDataRawToDigi",
    onlineMetaDataInputLabel = cms.InputTag( "rawDataCollector" )
)
process.hltOnlineBeamSpot = cms.EDProducer( "BeamSpotOnlineProducer",
    changeToCMSCoordinates = cms.bool( False ),
    maxZ = cms.double( 40.0 ),
    setSigmaZ = cms.double( 0.0 ),
    beamMode = cms.untracked.uint32( 11 ),
    src = cms.InputTag( "" ),
    gtEvmLabel = cms.InputTag( "" ),
    maxRadius = cms.double( 2.0 ),
    useTransientRecord = cms.bool( True )
)
process.hltL1sDSTRun3DoubleMuonPFScoutingPixelTracking = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleMu_12_5 OR L1_DoubleMu_15_7 OR L1_DoubleMu4p5er2p0_SQ_OS_Mass_Min7 OR L1_DoubleMu4p5er2p0_SQ_OS_Mass_7to18 OR L1_DoubleMu8_SQ OR L1_DoubleMu0er1p4_SQ_OS_dEta_Max1p2 OR L1_DoubleMu4er2p0_SQ_OS_dR_Max1p6 OR L1_DoubleMu5_SQ_OS_dR_Max1p6 OR L1_DoubleMu3er2p0_SQ_OS_dR_Max1p6 OR L1_DoubleMu0er1p5_SQ_OS_dEta_Max1p2 OR L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p6 OR L1_DoubleMu0er1p4_OQ_OS_dEta_Max1p6 OR L1_DoubleMu0er2p0_SQ_OS_dEta_Max1p5 OR L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4 OR L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4 OR L1_DoubleMu4p5_SQ_OS_dR_Max1p2 OR L1_DoubleMu4_SQ_OS_dR_Max1p2 OR L1_DoubleMu0_Upt15_Upt7 OR L1_DoubleMu0_Upt6_IP_Min1_Upt4 OR L1_DoubleMu6_Upt6_SQ_er2p0 OR L1_DoubleMu7_Upt7_SQ_er2p0 OR L1_DoubleMu8_Upt8_SQ_er2p0 OR L1_DoubleMu0er2p0_SQ_dEta_Max1p6 OR L1_DoubleMu0er2p0_SQ_dEta_Max1p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDSTPFScoutingDoubleMuon = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sL1DoubleMuonScouting = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sDSTRun3DoubleMuonPFScoutingPixelTracking" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 2 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltMuonDTDigis = cms.EDProducer( "DTuROSRawToDigi",
    inputLabel = cms.InputTag( "rawDataCollector" ),
    debug = cms.untracked.bool( False )
)
process.hltDt1DRecHits = cms.EDProducer( "DTRecHitProducer",
    recAlgoConfig = cms.PSet( 
      maxTime = cms.double( 420.0 ),
      debug = cms.untracked.bool( False ),
      stepTwoFromDigi = cms.bool( False ),
      tTrigModeConfig = cms.PSet( 
        debug = cms.untracked.bool( False ),
        tofCorrType = cms.int32( 0 ),
        tTrigLabel = cms.string( "" ),
        wirePropCorrType = cms.int32( 0 ),
        doTOFCorrection = cms.bool( True ),
        vPropWire = cms.double( 24.4 ),
        doT0Correction = cms.bool( True ),
        doWirePropCorrection = cms.bool( True ),
        t0Label = cms.string( "" )
      ),
      useUncertDB = cms.bool( True ),
      doVdriftCorr = cms.bool( True ),
      minTime = cms.double( -3.0 ),
      tTrigMode = cms.string( "DTTTrigSyncFromDB" ),
      readLegacyTTrigDB = cms.bool( True ),
      readLegacyVDriftDB = cms.bool( True )
    ),
    recAlgo = cms.string( "DTLinearDriftFromDBAlgo" ),
    debug = cms.untracked.bool( False ),
    dtDigiLabel = cms.InputTag( "hltMuonDTDigis" )
)
process.hltDt4DSegments = cms.EDProducer( "DTRecSegment4DProducer",
    Reco4DAlgoName = cms.string( "DTCombinatorialPatternReco4D" ),
    Reco4DAlgoConfig = cms.PSet( 
      Reco2DAlgoConfig = cms.PSet( 
        AlphaMaxPhi = cms.double( 1.0 ),
        debug = cms.untracked.bool( False ),
        segmCleanerMode = cms.int32( 2 ),
        AlphaMaxTheta = cms.double( 0.9 ),
        hit_afterT0_resolution = cms.double( 0.03 ),
        performT0_vdriftSegCorrection = cms.bool( False ),
        recAlgo = cms.string( "DTLinearDriftFromDBAlgo" ),
        recAlgoConfig = cms.PSet( 
          maxTime = cms.double( 420.0 ),
          debug = cms.untracked.bool( False ),
          stepTwoFromDigi = cms.bool( False ),
          tTrigModeConfig = cms.PSet( 
            debug = cms.untracked.bool( False ),
            tofCorrType = cms.int32( 0 ),
            tTrigLabel = cms.string( "" ),
            wirePropCorrType = cms.int32( 0 ),
            doTOFCorrection = cms.bool( True ),
            vPropWire = cms.double( 24.4 ),
            doT0Correction = cms.bool( True ),
            doWirePropCorrection = cms.bool( True ),
            t0Label = cms.string( "" )
          ),
          useUncertDB = cms.bool( True ),
          doVdriftCorr = cms.bool( True ),
          minTime = cms.double( -3.0 ),
          tTrigMode = cms.string( "DTTTrigSyncFromDB" ),
          readLegacyTTrigDB = cms.bool( True ),
          readLegacyVDriftDB = cms.bool( True )
        ),
        MaxAllowedHits = cms.uint32( 50 ),
        nUnSharedHitsMin = cms.int32( 2 ),
        nSharedHitsMax = cms.int32( 2 ),
        performT0SegCorrection = cms.bool( False ),
        perform_delta_rejecting = cms.bool( False )
      ),
      Reco2DAlgoName = cms.string( "DTCombinatorialPatternReco" ),
      debug = cms.untracked.bool( False ),
      segmCleanerMode = cms.int32( 2 ),
      AllDTRecHits = cms.bool( True ),
      hit_afterT0_resolution = cms.double( 0.03 ),
      performT0_vdriftSegCorrection = cms.bool( False ),
      recAlgo = cms.string( "DTLinearDriftFromDBAlgo" ),
      recAlgoConfig = cms.PSet( 
        maxTime = cms.double( 420.0 ),
        debug = cms.untracked.bool( False ),
        stepTwoFromDigi = cms.bool( False ),
        tTrigModeConfig = cms.PSet( 
          debug = cms.untracked.bool( False ),
          tofCorrType = cms.int32( 0 ),
          tTrigLabel = cms.string( "" ),
          wirePropCorrType = cms.int32( 0 ),
          doTOFCorrection = cms.bool( True ),
          vPropWire = cms.double( 24.4 ),
          doT0Correction = cms.bool( True ),
          doWirePropCorrection = cms.bool( True ),
          t0Label = cms.string( "" )
        ),
        useUncertDB = cms.bool( True ),
        doVdriftCorr = cms.bool( True ),
        minTime = cms.double( -3.0 ),
        tTrigMode = cms.string( "DTTTrigSyncFromDB" ),
        readLegacyTTrigDB = cms.bool( True ),
        readLegacyVDriftDB = cms.bool( True )
      ),
      nUnSharedHitsMin = cms.int32( 2 ),
      nSharedHitsMax = cms.int32( 2 ),
      performT0SegCorrection = cms.bool( False ),
      perform_delta_rejecting = cms.bool( False )
    ),
    debug = cms.untracked.bool( False ),
    recHits1DLabel = cms.InputTag( "hltDt1DRecHits" ),
    recHits2DLabel = cms.InputTag( "dt2DSegments" )
)
process.hltMuonCSCDigis = cms.EDProducer( "CSCDCCUnpacker",
    InputObjects = cms.InputTag( "rawDataCollector" ),
    UseExaminer = cms.bool( True ),
    ExaminerMask = cms.uint32( 535558134 ),
    UseSelectiveUnpacking = cms.bool( True ),
    ErrorMask = cms.uint32( 0 ),
    UnpackStatusDigis = cms.bool( False ),
    UseFormatStatus = cms.bool( True ),
    useRPCs = cms.bool( False ),
    useGEMs = cms.bool( False ),
    useCSCShowers = cms.bool( False ),
    Debug = cms.untracked.bool( False ),
    PrintEventNumber = cms.untracked.bool( False ),
    runDQM = cms.untracked.bool( False ),
    VisualFEDInspect = cms.untracked.bool( False ),
    VisualFEDShort = cms.untracked.bool( False ),
    FormatedEventDump = cms.untracked.bool( False ),
    SuppressZeroLCT = cms.untracked.bool( True ),
    DisableMappingCheck = cms.untracked.bool( False ),
    B904Setup = cms.untracked.bool( False ),
    B904vmecrate = cms.untracked.int32( 1 ),
    B904dmb = cms.untracked.int32( 3 )
)
process.hltCsc2DRecHits = cms.EDProducer( "CSCRecHitDProducer",
    CSCStripPeakThreshold = cms.double( 10.0 ),
    CSCStripClusterChargeCut = cms.double( 25.0 ),
    CSCStripxtalksOffset = cms.double( 0.03 ),
    UseAverageTime = cms.bool( False ),
    UseParabolaFit = cms.bool( False ),
    UseFivePoleFit = cms.bool( True ),
    CSCWireClusterDeltaT = cms.int32( 1 ),
    CSCUseCalibrations = cms.bool( True ),
    CSCUseStaticPedestals = cms.bool( False ),
    CSCNoOfTimeBinsForDynamicPedestal = cms.int32( 2 ),
    wireDigiTag = cms.InputTag( 'hltMuonCSCDigis','MuonCSCWireDigi' ),
    stripDigiTag = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
    readBadChannels = cms.bool( False ),
    readBadChambers = cms.bool( True ),
    CSCUseTimingCorrections = cms.bool( True ),
    CSCUseGasGainCorrections = cms.bool( False ),
    CSCDebug = cms.untracked.bool( False ),
    CSCstripWireDeltaTime = cms.int32( 8 ),
    XTasymmetry_ME1a = cms.double( 0.0 ),
    XTasymmetry_ME1b = cms.double( 0.0 ),
    XTasymmetry_ME12 = cms.double( 0.0 ),
    XTasymmetry_ME13 = cms.double( 0.0 ),
    XTasymmetry_ME21 = cms.double( 0.0 ),
    XTasymmetry_ME22 = cms.double( 0.0 ),
    XTasymmetry_ME31 = cms.double( 0.0 ),
    XTasymmetry_ME32 = cms.double( 0.0 ),
    XTasymmetry_ME41 = cms.double( 0.0 ),
    ConstSyst_ME1a = cms.double( 0.022 ),
    ConstSyst_ME1b = cms.double( 0.007 ),
    ConstSyst_ME12 = cms.double( 0.0 ),
    ConstSyst_ME13 = cms.double( 0.0 ),
    ConstSyst_ME21 = cms.double( 0.0 ),
    ConstSyst_ME22 = cms.double( 0.0 ),
    ConstSyst_ME31 = cms.double( 0.0 ),
    ConstSyst_ME32 = cms.double( 0.0 ),
    ConstSyst_ME41 = cms.double( 0.0 ),
    NoiseLevel_ME1a = cms.double( 7.0 ),
    NoiseLevel_ME1b = cms.double( 8.0 ),
    NoiseLevel_ME12 = cms.double( 9.0 ),
    NoiseLevel_ME13 = cms.double( 8.0 ),
    NoiseLevel_ME21 = cms.double( 9.0 ),
    NoiseLevel_ME22 = cms.double( 9.0 ),
    NoiseLevel_ME31 = cms.double( 9.0 ),
    NoiseLevel_ME32 = cms.double( 9.0 ),
    NoiseLevel_ME41 = cms.double( 9.0 ),
    CSCUseReducedWireTimeWindow = cms.bool( False ),
    CSCWireTimeWindowLow = cms.int32( 0 ),
    CSCWireTimeWindowHigh = cms.int32( 15 )
)
process.hltCscSegments = cms.EDProducer( "CSCSegmentProducer",
    inputObjects = cms.InputTag( "hltCsc2DRecHits" ),
    algo_type = cms.int32( 1 ),
    algo_psets = cms.VPSet( 
      cms.PSet(  parameters_per_chamber_type = cms.vint32( 1, 2, 3, 4, 5, 6, 5, 6, 5, 6 ),
        algo_psets = cms.VPSet( 
          cms.PSet(  wideSeg = cms.double( 3.0 ),
            chi2Norm_2D_ = cms.double( 35.0 ),
            dRIntMax = cms.double( 2.0 ),
            doCollisions = cms.bool( True ),
            dPhiMax = cms.double( 0.006 ),
            dRMax = cms.double( 1.5 ),
            dPhiIntMax = cms.double( 0.005 ),
            minLayersApart = cms.int32( 1 ),
            chi2Max = cms.double( 100.0 ),
            chi2_str = cms.double( 50.0 ),
            enlarge = cms.bool( False )
          ),
          cms.PSet(  wideSeg = cms.double( 3.0 ),
            chi2Norm_2D_ = cms.double( 35.0 ),
            dRIntMax = cms.double( 2.0 ),
            doCollisions = cms.bool( True ),
            dPhiMax = cms.double( 0.005 ),
            dRMax = cms.double( 1.5 ),
            dPhiIntMax = cms.double( 0.004 ),
            minLayersApart = cms.int32( 1 ),
            chi2Max = cms.double( 100.0 ),
            chi2_str = cms.double( 50.0 ),
            enlarge = cms.bool( False )
          ),
          cms.PSet(  wideSeg = cms.double( 3.0 ),
            chi2Norm_2D_ = cms.double( 35.0 ),
            dRIntMax = cms.double( 2.0 ),
            doCollisions = cms.bool( True ),
            dPhiMax = cms.double( 0.004 ),
            dRMax = cms.double( 1.5 ),
            dPhiIntMax = cms.double( 0.003 ),
            minLayersApart = cms.int32( 1 ),
            chi2Max = cms.double( 100.0 ),
            chi2_str = cms.double( 50.0 ),
            enlarge = cms.bool( False )
          ),
          cms.PSet(  wideSeg = cms.double( 3.0 ),
            chi2Norm_2D_ = cms.double( 20.0 ),
            dRIntMax = cms.double( 2.0 ),
            doCollisions = cms.bool( True ),
            dPhiMax = cms.double( 0.003 ),
            dRMax = cms.double( 1.5 ),
            dPhiIntMax = cms.double( 0.002 ),
            minLayersApart = cms.int32( 1 ),
            chi2Max = cms.double( 60.0 ),
            chi2_str = cms.double( 30.0 ),
            enlarge = cms.bool( False )
          ),
          cms.PSet(  wideSeg = cms.double( 3.0 ),
            chi2Norm_2D_ = cms.double( 60.0 ),
            dRIntMax = cms.double( 2.0 ),
            doCollisions = cms.bool( True ),
            dPhiMax = cms.double( 0.007 ),
            dRMax = cms.double( 1.5 ),
            dPhiIntMax = cms.double( 0.005 ),
            minLayersApart = cms.int32( 1 ),
            chi2Max = cms.double( 180.0 ),
            chi2_str = cms.double( 80.0 ),
            enlarge = cms.bool( False )
          ),
          cms.PSet(  wideSeg = cms.double( 3.0 ),
            chi2Norm_2D_ = cms.double( 35.0 ),
            dRIntMax = cms.double( 2.0 ),
            doCollisions = cms.bool( True ),
            dPhiMax = cms.double( 0.006 ),
            dRMax = cms.double( 1.5 ),
            dPhiIntMax = cms.double( 0.004 ),
            minLayersApart = cms.int32( 1 ),
            chi2Max = cms.double( 100.0 ),
            chi2_str = cms.double( 50.0 ),
            enlarge = cms.bool( False )
          )
        ),
        algo_name = cms.string( "CSCSegAlgoRU" ),
        chamber_types = cms.vstring( 'ME1/a',
          'ME1/b',
          'ME1/2',
          'ME1/3',
          'ME2/1',
          'ME2/2',
          'ME3/1',
          'ME3/2',
          'ME4/1',
          'ME4/2' )
      )
    )
)
process.hltMuonRPCDigis = cms.EDProducer( "RPCUnpackingModule",
    InputLabel = cms.InputTag( "rawDataCollector" ),
    doSynchro = cms.bool( False )
)
process.hltRpcRecHits = cms.EDProducer( "RPCRecHitProducer",
    recAlgoConfig = cms.PSet(  ),
    recAlgo = cms.string( "RPCRecHitStandardAlgo" ),
    rpcDigiLabel = cms.InputTag( "hltMuonRPCDigis" ),
    maskSource = cms.string( "File" ),
    maskvecfile = cms.FileInPath( "RecoLocalMuon/RPCRecHit/data/RPCMaskVec.dat" ),
    deadSource = cms.string( "File" ),
    deadvecfile = cms.FileInPath( "RecoLocalMuon/RPCRecHit/data/RPCDeadVec.dat" )
)
process.hltMuonGEMDigis = cms.EDProducer( "GEMRawToDigiModule",
    InputLabel = cms.InputTag( "rawDataCollector" ),
    useDBEMap = cms.bool( True ),
    keepDAQStatus = cms.bool( False ),
    readMultiBX = cms.bool( False ),
    ge21Off = cms.bool( True ),
    fedIdStart = cms.uint32( 1467 ),
    fedIdEnd = cms.uint32( 1478 )
)
process.hltGemRecHits = cms.EDProducer( "GEMRecHitProducer",
    recAlgoConfig = cms.PSet(  ),
    recAlgo = cms.string( "GEMRecHitStandardAlgo" ),
    gemDigiLabel = cms.InputTag( "hltMuonGEMDigis" ),
    applyMasking = cms.bool( False ),
    ge21Off = cms.bool( False )
)
process.hltGemSegments = cms.EDProducer( "GEMSegmentProducer",
    gemRecHitLabel = cms.InputTag( "hltGemRecHits" ),
    enableGE0 = cms.bool( True ),
    enableGE12 = cms.bool( False ),
    ge0_name = cms.string( "GE0SegAlgoRU" ),
    algo_name = cms.string( "GEMSegmentAlgorithm" ),
    ge0_pset = cms.PSet( 
      maxChi2GoodSeg = cms.double( 50.0 ),
      maxChi2Prune = cms.double( 50.0 ),
      maxNumberOfHitsPerLayer = cms.uint32( 100 ),
      maxETASeeds = cms.double( 0.1 ),
      maxPhiAdditional = cms.double( 0.001096605744 ),
      minNumberOfHits = cms.uint32( 4 ),
      doCollisions = cms.bool( True ),
      maxPhiSeeds = cms.double( 0.001096605744 ),
      requireCentralBX = cms.bool( True ),
      maxChi2Additional = cms.double( 100.0 ),
      allowWideSegments = cms.bool( True ),
      maxNumberOfHits = cms.uint32( 300 ),
      maxTOFDiff = cms.double( 25.0 )
    ),
    algo_pset = cms.PSet( 
      dYclusBoxMax = cms.double( 5.0 ),
      dXclusBoxMax = cms.double( 1.0 ),
      maxRecHitsInCluster = cms.int32( 4 ),
      preClustering = cms.bool( True ),
      preClusteringUseChaining = cms.bool( True ),
      dEtaChainBoxMax = cms.double( 0.05 ),
      clusterOnlySameBXRecHits = cms.bool( True ),
      minHitsPerSegment = cms.uint32( 2 ),
      dPhiChainBoxMax = cms.double( 0.02 )
    )
)
process.hltL2OfflineMuonSeeds = cms.EDProducer( "MuonSeedGenerator",
    beamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    scaleDT = cms.bool( True ),
    CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
    DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
    ME0RecSegmentLabel = cms.InputTag( "me0Segments" ),
    EnableDTMeasurement = cms.bool( True ),
    EnableCSCMeasurement = cms.bool( True ),
    EnableME0Measurement = cms.bool( False ),
    crackEtas = cms.vdouble( 0.2, 1.6, 1.7 ),
    crackWindow = cms.double( 0.04 ),
    deltaPhiSearchWindow = cms.double( 0.25 ),
    deltaEtaSearchWindow = cms.double( 0.2 ),
    deltaEtaCrackSearchWindow = cms.double( 0.25 ),
    CSC_01 = cms.vdouble( 0.166, 0.0, 0.0, 0.031, 0.0, 0.0 ),
    CSC_12 = cms.vdouble( -0.161, 0.254, -0.047, 0.042, -0.007, 0.0 ),
    CSC_02 = cms.vdouble( 0.612, -0.207, 0.0, 0.067, -0.001, 0.0 ),
    CSC_13 = cms.vdouble( 0.901, -1.302, 0.533, 0.045, 0.005, 0.0 ),
    CSC_03 = cms.vdouble( 0.787, -0.338, 0.029, 0.101, -0.008, 0.0 ),
    CSC_14 = cms.vdouble( 0.606, -0.181, -0.002, 0.111, -0.003, 0.0 ),
    CSC_23 = cms.vdouble( -0.081, 0.113, -0.029, 0.015, 0.008, 0.0 ),
    CSC_24 = cms.vdouble( 0.004, 0.021, -0.002, 0.053, 0.0, 0.0 ),
    CSC_34 = cms.vdouble( 0.062, -0.067, 0.019, 0.021, 0.003, 0.0 ),
    DT_12 = cms.vdouble( 0.183, 0.054, -0.087, 0.028, 0.002, 0.0 ),
    DT_13 = cms.vdouble( 0.315, 0.068, -0.127, 0.051, -0.002, 0.0 ),
    DT_14 = cms.vdouble( 0.359, 0.052, -0.107, 0.072, -0.004, 0.0 ),
    DT_23 = cms.vdouble( 0.13, 0.023, -0.057, 0.028, 0.004, 0.0 ),
    DT_24 = cms.vdouble( 0.176, 0.014, -0.051, 0.051, 0.003, 0.0 ),
    DT_34 = cms.vdouble( 0.044, 0.004, -0.013, 0.029, 0.003, 0.0 ),
    OL_1213 = cms.vdouble( 0.96, -0.737, 0.0, 0.052, 0.0, 0.0 ),
    OL_1222 = cms.vdouble( 0.848, -0.591, 0.0, 0.062, 0.0, 0.0 ),
    OL_1232 = cms.vdouble( 0.184, 0.0, 0.0, 0.066, 0.0, 0.0 ),
    OL_2213 = cms.vdouble( 0.117, 0.0, 0.0, 0.044, 0.0, 0.0 ),
    OL_2222 = cms.vdouble( 0.107, 0.0, 0.0, 0.04, 0.0, 0.0 ),
    SME_11 = cms.vdouble( 3.295, -1.527, 0.112, 0.378, 0.02, 0.0 ),
    SME_12 = cms.vdouble( 0.102, 0.599, 0.0, 0.38, 0.0, 0.0 ),
    SME_13 = cms.vdouble( -1.286, 1.711, 0.0, 0.356, 0.0, 0.0 ),
    SME_21 = cms.vdouble( -0.529, 1.194, -0.358, 0.472, 0.086, 0.0 ),
    SME_22 = cms.vdouble( -1.207, 1.491, -0.251, 0.189, 0.243, 0.0 ),
    SME_31 = cms.vdouble( -1.594, 1.482, -0.317, 0.487, 0.097, 0.0 ),
    SME_32 = cms.vdouble( -0.901, 1.333, -0.47, 0.41, 0.073, 0.0 ),
    SME_41 = cms.vdouble( -0.003, 0.005, 0.005, 0.608, 0.076, 0.0 ),
    SME_42 = cms.vdouble( -0.003, 0.005, 0.005, 0.608, 0.076, 0.0 ),
    SMB_10 = cms.vdouble( 1.387, -0.038, 0.0, 0.19, 0.0, 0.0 ),
    SMB_11 = cms.vdouble( 1.247, 0.72, -0.802, 0.229, -0.075, 0.0 ),
    SMB_12 = cms.vdouble( 2.128, -0.956, 0.0, 0.199, 0.0, 0.0 ),
    SMB_20 = cms.vdouble( 1.011, -0.052, 0.0, 0.188, 0.0, 0.0 ),
    SMB_21 = cms.vdouble( 1.043, -0.124, 0.0, 0.183, 0.0, 0.0 ),
    SMB_22 = cms.vdouble( 1.474, -0.758, 0.0, 0.185, 0.0, 0.0 ),
    SMB_30 = cms.vdouble( 0.505, -0.022, 0.0, 0.215, 0.0, 0.0 ),
    SMB_31 = cms.vdouble( 0.549, -0.145, 0.0, 0.207, 0.0, 0.0 ),
    SMB_32 = cms.vdouble( 0.67, -0.327, 0.0, 0.22, 0.0, 0.0 ),
    CSC_01_1_scale = cms.vdouble( -1.915329, 0.0 ),
    CSC_12_1_scale = cms.vdouble( -6.434242, 0.0 ),
    CSC_12_2_scale = cms.vdouble( -1.63622, 0.0 ),
    CSC_12_3_scale = cms.vdouble( -1.63622, 0.0 ),
    CSC_13_2_scale = cms.vdouble( -6.077936, 0.0 ),
    CSC_13_3_scale = cms.vdouble( -1.701268, 0.0 ),
    CSC_14_3_scale = cms.vdouble( -1.969563, 0.0 ),
    CSC_23_1_scale = cms.vdouble( -19.084285, 0.0 ),
    CSC_23_2_scale = cms.vdouble( -6.079917, 0.0 ),
    CSC_24_1_scale = cms.vdouble( -6.055701, 0.0 ),
    CSC_34_1_scale = cms.vdouble( -11.520507, 0.0 ),
    OL_1213_0_scale = cms.vdouble( -4.488158, 0.0 ),
    OL_1222_0_scale = cms.vdouble( -5.810449, 0.0 ),
    OL_1232_0_scale = cms.vdouble( -5.964634, 0.0 ),
    OL_2213_0_scale = cms.vdouble( -7.239789, 0.0 ),
    OL_2222_0_scale = cms.vdouble( -7.667231, 0.0 ),
    DT_12_1_scale = cms.vdouble( -3.692398, 0.0 ),
    DT_12_2_scale = cms.vdouble( -3.518165, 0.0 ),
    DT_13_1_scale = cms.vdouble( -4.520923, 0.0 ),
    DT_13_2_scale = cms.vdouble( -4.257687, 0.0 ),
    DT_14_1_scale = cms.vdouble( -5.644816, 0.0 ),
    DT_14_2_scale = cms.vdouble( -4.808546, 0.0 ),
    DT_23_1_scale = cms.vdouble( -5.320346, 0.0 ),
    DT_23_2_scale = cms.vdouble( -5.117625, 0.0 ),
    DT_24_1_scale = cms.vdouble( -7.490909, 0.0 ),
    DT_24_2_scale = cms.vdouble( -6.63094, 0.0 ),
    DT_34_1_scale = cms.vdouble( -13.783765, 0.0 ),
    DT_34_2_scale = cms.vdouble( -11.901897, 0.0 ),
    SMB_10_0_scale = cms.vdouble( 2.448566, 0.0 ),
    SMB_11_0_scale = cms.vdouble( 2.56363, 0.0 ),
    SMB_12_0_scale = cms.vdouble( 2.283221, 0.0 ),
    SMB_20_0_scale = cms.vdouble( 1.486168, 0.0 ),
    SMB_21_0_scale = cms.vdouble( 1.58384, 0.0 ),
    SMB_22_0_scale = cms.vdouble( 1.346681, 0.0 ),
    SMB_30_0_scale = cms.vdouble( -3.629838, 0.0 ),
    SMB_31_0_scale = cms.vdouble( -3.323768, 0.0 ),
    SMB_32_0_scale = cms.vdouble( -3.054156, 0.0 ),
    SME_11_0_scale = cms.vdouble( 1.325085, 0.0 ),
    SME_12_0_scale = cms.vdouble( 2.279181, 0.0 ),
    SME_13_0_scale = cms.vdouble( 0.104905, 0.0 ),
    SME_21_0_scale = cms.vdouble( -0.040862, 0.0 ),
    SME_22_0_scale = cms.vdouble( -3.457901, 0.0 )
)
process.hltL2MuonSeeds = cms.EDProducer( "L2MuonSeedGeneratorFromL1T",
    GMTReadoutCollection = cms.InputTag( "" ),
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    Propagator = cms.string( "SteppingHelixPropagatorAny" ),
    L1MinPt = cms.double( 0.0 ),
    L1MaxEta = cms.double( 2.5 ),
    L1MinQuality = cms.uint32( 7 ),
    SetMinPtBarrelTo = cms.double( 3.5 ),
    SetMinPtEndcapTo = cms.double( 1.0 ),
    UseOfflineSeed = cms.untracked.bool( True ),
    UseUnassociatedL1 = cms.bool( False ),
    MatchDR = cms.vdouble( 0.3 ),
    EtaMatchingBins = cms.vdouble( 0.0, 2.5 ),
    CentralBxOnly = cms.bool( True ),
    MatchType = cms.uint32( 0 ),
    SortType = cms.uint32( 0 ),
    OfflineSeedLabel = cms.untracked.InputTag( "hltL2OfflineMuonSeeds" ),
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'SteppingHelixPropagatorAny' )
    )
)
process.hltL2Muons = cms.EDProducer( "L2MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny',
        'hltESPFastSteppingHelixPropagatorOpposite' )
    ),
    InputObjects = cms.InputTag( "hltL2MuonSeeds" ),
    SeedTransformerParameters = cms.PSet( 
      Fitter = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
      NMinRecHits = cms.uint32( 2 ),
      RescaleError = cms.double( 100.0 ),
      Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      UseSubRecHits = cms.bool( False ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
    ),
    L2TrajBuilderParameters = cms.PSet( 
      BWFilterParameters = cms.PSet( 
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        BWSeedType = cms.string( "fromGenerator" ),
        GEMRecSegmentLabel = cms.InputTag( "hltGemRecHits" ),
        RPCRecSegmentLabel = cms.InputTag( "hltRpcRecHits" ),
        EnableGEMMeasurement = cms.bool( True ),
        EnableRPCMeasurement = cms.bool( True ),
        MuonTrajectoryUpdatorParameters = cms.PSet( 
          ExcludeRPCFromFit = cms.bool( False ),
          Granularity = cms.int32( 0 ),
          MaxChi2 = cms.double( 25.0 ),
          RescaleError = cms.bool( False ),
          RescaleErrorFactor = cms.double( 100.0 ),
          UseInvalidHits = cms.bool( True )
        ),
        EnableCSCMeasurement = cms.bool( True ),
        MaxChi2 = cms.double( 100.0 ),
        FitDirection = cms.string( "outsideIn" ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        NumberOfSigma = cms.double( 3.0 ),
        EnableDTMeasurement = cms.bool( True )
      ),
      DoSeedRefit = cms.bool( False ),
      FilterParameters = cms.PSet( 
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        GEMRecSegmentLabel = cms.InputTag( "hltGemRecHits" ),
        RPCRecSegmentLabel = cms.InputTag( "hltRpcRecHits" ),
        EnableGEMMeasurement = cms.bool( True ),
        EnableRPCMeasurement = cms.bool( True ),
        MuonTrajectoryUpdatorParameters = cms.PSet( 
          ExcludeRPCFromFit = cms.bool( False ),
          Granularity = cms.int32( 0 ),
          MaxChi2 = cms.double( 25.0 ),
          RescaleError = cms.bool( False ),
          RescaleErrorFactor = cms.double( 100.0 ),
          UseInvalidHits = cms.bool( True )
        ),
        EnableCSCMeasurement = cms.bool( True ),
        MaxChi2 = cms.double( 1000.0 ),
        FitDirection = cms.string( "insideOut" ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        NumberOfSigma = cms.double( 3.0 ),
        EnableDTMeasurement = cms.bool( True )
      ),
      SeedPosition = cms.string( "in" ),
      DoBackwardFilter = cms.bool( True ),
      DoRefit = cms.bool( False ),
      NavigationType = cms.string( "Standard" ),
      SeedTransformerParameters = cms.PSet( 
        Fitter = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
        NMinRecHits = cms.uint32( 2 ),
        RescaleError = cms.double( 100.0 ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        UseSubRecHits = cms.bool( False ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      SeedPropagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" )
    ),
    DoSeedRefit = cms.bool( False ),
    TrackLoaderParameters = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( False ),
      VertexConstraint = cms.bool( True ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        BeamSpotPosition = cms.vdouble( 0.0, 0.0, 0.0 ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" )
      ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    MuonTrajectoryBuilder = cms.string( "Exhaustive" )
)
process.hltL2MuonCandidatesNoVtx = cms.EDProducer( "L2MuonCandidateProducer",
    InputObjects = cms.InputTag( "hltL2Muons" )
)
process.hltL2fL1sL1DoubleMuonScouting = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sL1DoubleMuonScouting" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltOnlineBeamSpotDevice = cms.EDProducer( "BeamSpotDeviceProducer@alpaka",
    src = cms.InputTag( "hltOnlineBeamSpot" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltSiPixelClustersSoA = cms.EDProducer( "SiPixelRawToClusterPhase1@alpaka",
    IncludeErrors = cms.bool( True ),
    UseQualityInfo = cms.bool( False ),
    clusterThreshold_layer1 = cms.int32( 4000 ),
    clusterThreshold_otherLayers = cms.int32( 4000 ),
    VCaltoElectronGain = cms.double( 1.0 ),
    VCaltoElectronGain_L1 = cms.double( 1.0 ),
    VCaltoElectronOffset = cms.double( 0.0 ),
    VCaltoElectronOffset_L1 = cms.double( 0.0 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    Regions = cms.PSet(  ),
    CablingMapLabel = cms.string( "" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltSiPixelClusters = cms.EDProducer( "SiPixelDigisClustersFromSoAAlpakaPhase1",
    src = cms.InputTag( "hltSiPixelClustersSoA" ),
    clusterThreshold_layer1 = cms.int32( 4000 ),
    clusterThreshold_otherLayers = cms.int32( 4000 ),
    produceDigis = cms.bool( False ),
    storeDigis = cms.bool( False )
)
process.hltSiPixelDigiErrors = cms.EDProducer( "SiPixelDigiErrorsFromSoAAlpaka",
    digiErrorSoASrc = cms.InputTag( "hltSiPixelClustersSoA" ),
    fmtErrorsSoASrc = cms.InputTag( "hltSiPixelClustersSoA" ),
    CablingMapLabel = cms.string( "" ),
    UsePhase1 = cms.bool( True ),
    ErrorList = cms.vint32( 29 ),
    UserErrorList = cms.vint32( 40 )
)
process.hltSiPixelRecHitsSoA = cms.EDProducer( "SiPixelRecHitAlpakaPhase1@alpaka",
    beamSpot = cms.InputTag( "hltOnlineBeamSpotDevice" ),
    src = cms.InputTag( "hltSiPixelClustersSoA" ),
    CPE = cms.string( "PixelCPEFastParams" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltSiPixelRecHits = cms.EDProducer( "SiPixelRecHitFromSoAAlpakaPhase1",
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsSoA" ),
    src = cms.InputTag( "hltSiPixelClusters" )
)
process.hltSiStripExcludedFEDListProducer = cms.EDProducer( "SiStripExcludedFEDListProducer",
    ProductLabel = cms.InputTag( "rawDataCollector" )
)
process.hltSiStripRawToClustersFacility = cms.EDProducer( "SiStripClusterizerFromRaw",
    ProductLabel = cms.InputTag( "rawDataCollector" ),
    ConditionsLabel = cms.string( "" ),
    onDemand = cms.bool( True ),
    DoAPVEmulatorCheck = cms.bool( False ),
    LegacyUnpacker = cms.bool( False ),
    HybridZeroSuppressed = cms.bool( False ),
    Clusterizer = cms.PSet( 
      ConditionsLabel = cms.string( "" ),
      ClusterThreshold = cms.double( 5.0 ),
      SeedThreshold = cms.double( 3.0 ),
      Algorithm = cms.string( "ThreeThresholdAlgorithm" ),
      ChannelThreshold = cms.double( 2.0 ),
      MaxAdjacentBad = cms.uint32( 0 ),
      setDetId = cms.bool( True ),
      MaxSequentialHoles = cms.uint32( 0 ),
      RemoveApvShots = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      MaxSequentialBad = cms.uint32( 1 )
    ),
    Algorithms = cms.PSet( 
      Use10bitsTruncation = cms.bool( False ),
      CommonModeNoiseSubtractionMode = cms.string( "Median" ),
      useCMMeanMap = cms.bool( False ),
      TruncateInSuppressor = cms.bool( True ),
      doAPVRestore = cms.bool( False ),
      SiStripFedZeroSuppressionMode = cms.uint32( 4 ),
      PedestalSubtractionFedMode = cms.bool( True )
    )
)
process.hltMeasurementTrackerEvent = cms.EDProducer( "MeasurementTrackerEventProducer",
    measurementTracker = cms.string( "hltESPMeasurementTracker" ),
    skipClusters = cms.InputTag( "" ),
    pixelClusterProducer = cms.string( "hltSiPixelClusters" ),
    stripClusterProducer = cms.string( "hltSiStripRawToClustersFacility" ),
    Phase2TrackerCluster1DProducer = cms.string( "" ),
    vectorHits = cms.InputTag( "" ),
    vectorHitsRej = cms.InputTag( "" ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    pixelCablingMapLabel = cms.string( "" ),
    inactiveStripDetectorLabels = cms.VInputTag( 'hltSiStripExcludedFEDListProducer' ),
    switchOffPixelsIfEmpty = cms.bool( True )
)
process.hltIterL3OISeedsFromL2MuonsNoVtx = cms.EDProducer( "TSGForOIFromL2",
    src = cms.InputTag( "hltL2Muons" ),
    layersToTry = cms.int32( 2 ),
    fixedErrorRescaleFactorForHitless = cms.double( 2.0 ),
    hitsToTry = cms.int32( 1 ),
    adjustErrorsDynamicallyForHits = cms.bool( False ),
    adjustErrorsDynamicallyForHitless = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    UseHitLessSeeds = cms.bool( True ),
    estimator = cms.string( "hltESPChi2MeasurementEstimator100" ),
    maxEtaForTOB = cms.double( 1.8 ),
    minEtaForTEC = cms.double( 0.7 ),
    debug = cms.untracked.bool( False ),
    fixedErrorRescaleFactorForHits = cms.double( 1.0 ),
    maxSeeds = cms.uint32( 20 ),
    maxHitlessSeeds = cms.uint32( 5 ),
    maxHitSeeds = cms.uint32( 1 ),
    numL2ValidHitsCutAllEta = cms.uint32( 20 ),
    numL2ValidHitsCutAllEndcap = cms.uint32( 30 ),
    pT1 = cms.double( 13.0 ),
    pT2 = cms.double( 30.0 ),
    pT3 = cms.double( 70.0 ),
    eta1 = cms.double( 0.2 ),
    eta2 = cms.double( 0.3 ),
    eta3 = cms.double( 1.0 ),
    eta4 = cms.double( 1.2 ),
    eta5 = cms.double( 1.6 ),
    eta6 = cms.double( 1.4 ),
    eta7 = cms.double( 2.1 ),
    SF1 = cms.double( 3.0 ),
    SF2 = cms.double( 4.0 ),
    SF3 = cms.double( 5.0 ),
    SF4 = cms.double( 7.0 ),
    SF5 = cms.double( 10.0 ),
    SF6 = cms.double( 2.0 ),
    SFHld = cms.double( 2.0 ),
    SFHd = cms.double( 4.0 ),
    tsosDiff1 = cms.double( 0.2 ),
    tsosDiff2 = cms.double( 0.02 ),
    displacedReco = cms.bool( False ),
    propagatorName = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIterL3OITrackCandidatesNoVtx = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( True ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIterL3OISeedsFromL2MuonsNoVtx" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 500000 ),
    maxSeedsBeforeCleaning = cms.uint32( 5000 )
)
process.hltIterL3OIMuCtfWithMaterialTracksNoVtx = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltIterL3OITrackCandidatesNoVtx" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "iter10" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    MeasurementTracker = cms.string( "hltESPMeasurementTracker" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIterL3OIMuonTrackCutClassifierNoVtx = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIterL3OIMuCtfWithMaterialTracksNoVtx" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "Notused" ),
    ignoreVertices = cms.bool( True ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 4, 3, 2 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 10.0, 1.0, 0.4 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 5, 5 )
    )
)
process.hltIterL3OIMuonTrackSelectionHighPurityNoVtx = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIterL3OIMuCtfWithMaterialTracksNoVtx" ),
    originalMVAVals = cms.InputTag( 'hltIterL3OIMuonTrackCutClassifierNoVtx','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIterL3OIMuonTrackCutClassifierNoVtx','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltL3MuonsIterL3OINoVtx = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( False ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( False ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.2 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( "hltL2Muons" ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "Notused" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltIterL3OIMuonTrackSelectionHighPurityNoVtx" )
    )
)
process.hltIterL3OIL3MuonsLinksCombinationNoVtx = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OINoVtx' )
)
process.hltIterL3OIL3MuonsNoVtx = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OINoVtx' )
)
process.hltIterL3OIL3MuonCandidatesNoVtx = cms.EDProducer( "L3MuonCandidateProducer",
    InputObjects = cms.InputTag( "hltIterL3OIL3MuonsNoVtx" ),
    InputLinksObjects = cms.InputTag( "hltIterL3OIL3MuonsLinksCombinationNoVtx" ),
    MuonPtOption = cms.string( "Tracker" )
)
process.hltL2SelectorForL3IONoVtx = cms.EDProducer( "HLTMuonL2SelectorForL3IO",
    l2Src = cms.InputTag( "hltL2Muons" ),
    l3OISrc = cms.InputTag( "hltIterL3OIL3MuonCandidatesNoVtx" ),
    InputLinks = cms.InputTag( "hltIterL3OIL3MuonsLinksCombinationNoVtx" ),
    applyL3Filters = cms.bool( False ),
    MinNhits = cms.int32( 1 ),
    MaxNormalizedChi2 = cms.double( 20.0 ),
    MinNmuonHits = cms.int32( 1 ),
    MaxPtDifference = cms.double( 0.3 )
)
process.hltPixelTracksSoA = cms.EDProducer( "CAHitNtupletAlpakaPhase1@alpaka",
    pixelRecHitSrc = cms.InputTag( "hltSiPixelRecHitsSoA" ),
    CPE = cms.string( "PixelCPEFastParams" ),
    ptmin = cms.double( 0.9 ),
    CAThetaCutBarrel = cms.double( 0.002 ),
    CAThetaCutForward = cms.double( 0.003 ),
    hardCurvCut = cms.double( 0.0328407225 ),
    dcaCutInnerTriplet = cms.double( 0.15 ),
    dcaCutOuterTriplet = cms.double( 0.25 ),
    earlyFishbone = cms.bool( True ),
    lateFishbone = cms.bool( False ),
    fillStatistics = cms.bool( False ),
    minHitsPerNtuplet = cms.uint32( 3 ),
    minHitsForSharingCut = cms.uint32( 10 ),
    fitNas4 = cms.bool( False ),
    doClusterCut = cms.bool( True ),
    doZ0Cut = cms.bool( True ),
    doPtCut = cms.bool( True ),
    useRiemannFit = cms.bool( False ),
    doSharedHitCut = cms.bool( True ),
    dupPassThrough = cms.bool( False ),
    useSimpleTripletCleaner = cms.bool( True ),
    maxNumberOfDoublets = cms.uint32( 524288 ),
    idealConditions = cms.bool( False ),
    includeJumpingForwardDoublets = cms.bool( True ),
    cellZ0Cut = cms.double( 12.0 ),
    cellPtCut = cms.double( 0.5 ),
    trackQualityCuts = cms.PSet( 
      chi2MaxPt = cms.double( 10.0 ),
      tripletMaxTip = cms.double( 0.3 ),
      chi2Scale = cms.double( 8.0 ),
      quadrupletMaxTip = cms.double( 0.5 ),
      quadrupletMinPt = cms.double( 0.3 ),
      quadrupletMaxZip = cms.double( 12.0 ),
      tripletMaxZip = cms.double( 12.0 ),
      tripletMinPt = cms.double( 0.5 ),
      chi2Coeff = cms.vdouble( 0.9, 1.8 )
    ),
    phiCuts = cms.vint32( 522, 730, 730, 522, 626, 626, 522, 522, 626, 626, 626, 522, 522, 522, 522, 522, 522, 522, 522 ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltPixelTracks = cms.EDProducer( "PixelTrackProducerFromSoAAlpakaPhase1",
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    trackSrc = cms.InputTag( "hltPixelTracksSoA" ),
    pixelRecHitLegacySrc = cms.InputTag( "hltSiPixelRecHits" ),
    minNumberOfHits = cms.int32( 0 ),
    minQuality = cms.string( "loose" )
)
process.hltPixelVerticesSoA = cms.EDProducer( "PixelVertexProducerAlpakaPhase1@alpaka",
    oneKernel = cms.bool( True ),
    useDensity = cms.bool( True ),
    useDBSCAN = cms.bool( False ),
    useIterative = cms.bool( False ),
    doSplitting = cms.bool( True ),
    minT = cms.int32( 2 ),
    eps = cms.double( 0.07 ),
    errmax = cms.double( 0.01 ),
    chi2max = cms.double( 9.0 ),
    PtMin = cms.double( 0.5 ),
    PtMax = cms.double( 75.0 ),
    pixelTrackSrc = cms.InputTag( "hltPixelTracksSoA" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltPixelVertices = cms.EDProducer( "PixelVertexProducerFromSoAAlpaka",
    TrackCollection = cms.InputTag( "hltPixelTracks" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    src = cms.InputTag( "hltPixelVerticesSoA" )
)
process.hltTrimmedPixelVertices = cms.EDProducer( "PixelVertexCollectionTrimmer",
    src = cms.InputTag( "hltPixelVertices" ),
    maxVtx = cms.uint32( 100 ),
    fractionSumPt2 = cms.double( 0.3 ),
    minSumPt2 = cms.double( 0.0 ),
    PVcomparer = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPvClusterComparerForIT" ) )
)
process.hltIterL3MuonPixelTracksTrackingRegionsNoVtx = cms.EDProducer( "MuonTrackingRegionByPtEDProducer",
    DeltaR = cms.double( 0.025 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    OnDemand = cms.int32( -1 ),
    vertexCollection = cms.InputTag( "notUsed" ),
    MeasurementTrackerName = cms.InputTag( "" ),
    UseVertex = cms.bool( False ),
    Rescale_Dz = cms.double( 4.0 ),
    Pt_fixed = cms.bool( True ),
    Z_fixed = cms.bool( True ),
    Pt_min = cms.double( 0.0 ),
    DeltaZ = cms.double( 24.2 ),
    ptRanges = cms.vdouble( 0.0, 15.0, 20.0, 1.0E64 ),
    deltaEtas = cms.vdouble( 0.2, 0.2, 0.2 ),
    deltaPhis = cms.vdouble( 0.75, 0.45, 0.225 ),
    maxRegions = cms.int32( 5 ),
    precise = cms.bool( True ),
    input = cms.InputTag( "hltL2SelectorForL3IONoVtx" )
)
process.hltPixelTracksInRegionL2NoVtx = cms.EDProducer( "TrackSelectorByRegion",
    tracks = cms.InputTag( "hltPixelTracks" ),
    regions = cms.InputTag( "hltIterL3MuonPixelTracksTrackingRegionsNoVtx" ),
    produceTrackCollection = cms.bool( True ),
    produceMask = cms.bool( False )
)
process.hltIter0IterL3MuonPixelSeedsFromPixelTracksNoVtx = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracksInRegionL2NoVtx" ),
    InputVertexCollection = cms.InputTag( "" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0IterL3MuonCkfTrackCandidatesNoVtx = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( True ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0IterL3MuonPixelSeedsFromPixelTracksNoVtx" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "none" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0IterL3MuonCtfWithMaterialTracksNoVtx = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0IterL3MuonCkfTrackCandidatesNoVtx" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0IterL3MuonTrackCutClassifierNoVtx = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0IterL3MuonCtfWithMaterialTracksNoVtx" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    )
)
process.hltIter0IterL3MuonTrackSelectionHighPurityNoVtx = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0IterL3MuonCtfWithMaterialTracksNoVtx" ),
    originalMVAVals = cms.InputTag( 'hltIter0IterL3MuonTrackCutClassifierNoVtx','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0IterL3MuonTrackCutClassifierNoVtx','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltL3MuonsIterL3IONoVtx = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( False ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( True ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( True ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.04 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( "hltL2SelectorForL3IONoVtx" ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "hltTrimmedPixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      matchToSeeds = cms.bool( True ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltIter0IterL3MuonTrackSelectionHighPurityNoVtx" )
    )
)
process.hltIterL3MuonsFromL2LinksCombinationNoVtx = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OINoVtx','hltL3MuonsIterL3IONoVtx' )
)
process.hltIterL3MuonsFromL2NoVtx = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OINoVtx','hltL3MuonsIterL3IONoVtx' )
)
process.hltIterL3MuonL1MuonNoL2SelectorNoVtx = cms.EDProducer( "HLTL1MuonNoL2Selector",
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L2CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    L1MinPt = cms.double( -1.0 ),
    L1MaxEta = cms.double( 5.0 ),
    L1MinQuality = cms.uint32( 7 ),
    CentralBxOnly = cms.bool( True )
)
process.hltIterL3FromL1MuonPixelTracksTrackingRegionsNoVtx = cms.EDProducer( "L1MuonSeededTrackingRegionsEDProducer",
    Propagator = cms.string( "SteppingHelixPropagatorAny" ),
    L1MinPt = cms.double( 0.0 ),
    L1MaxEta = cms.double( 2.5 ),
    L1MinQuality = cms.uint32( 7 ),
    SetMinPtBarrelTo = cms.double( 3.5 ),
    SetMinPtEndcapTo = cms.double( 1.0 ),
    CentralBxOnly = cms.bool( True ),
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "notUsed" ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 1 ),
      maxNRegions = cms.int32( 5 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.0 ),
      mode = cms.string( "BeamSpotSigma" ),
      input = cms.InputTag( "hltIterL3MuonL1MuonNoL2SelectorNoVtx" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.2 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True ),
      deltaEtas = cms.vdouble( 0.35, 0.35, 0.35, 0.35 ),
      deltaPhis = cms.vdouble( 1.0, 0.8, 0.6, 0.3 ),
      ptRanges = cms.vdouble( 0.0, 10.0, 15.0, 20.0, 1.0E64 )
    ),
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'SteppingHelixPropagatorAny' )
    )
)
process.hltPixelTracksInRegionL1NoVtx = cms.EDProducer( "TrackSelectorByRegion",
    tracks = cms.InputTag( "hltPixelTracks" ),
    regions = cms.InputTag( "hltIterL3FromL1MuonPixelTracksTrackingRegionsNoVtx" ),
    produceTrackCollection = cms.bool( True ),
    produceMask = cms.bool( False )
)
process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracksNoVtx = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracksInRegionL1NoVtx" ),
    InputVertexCollection = cms.InputTag( "" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0IterL3FromL1MuonCkfTrackCandidatesNoVtx = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( True ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracksNoVtx" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "none" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0IterL3FromL1MuonCtfWithMaterialTracksNoVtx = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0IterL3FromL1MuonCkfTrackCandidatesNoVtx" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0IterL3FromL1MuonTrackCutClassifierNoVtx = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0IterL3FromL1MuonCtfWithMaterialTracksNoVtx" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    )
)
process.hltIter0IterL3FromL1MuonTrackSelectionHighPurityNoVtx = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0IterL3FromL1MuonCtfWithMaterialTracksNoVtx" ),
    originalMVAVals = cms.InputTag( 'hltIter0IterL3FromL1MuonTrackCutClassifierNoVtx','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0IterL3FromL1MuonTrackCutClassifierNoVtx','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltIter3IterL3FromL1MuonClustersRefRemovalNoVtx = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltIter0IterL3FromL1MuonTrackSelectionHighPurityNoVtx" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
process.hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEventNoVtx = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    OnDemand = cms.bool( False ),
    clustersToSkip = cms.InputTag( "hltIter3IterL3FromL1MuonClustersRefRemovalNoVtx" )
)
process.hltIter3IterL3FromL1MuonPixelLayersAndRegionsNoVtx = cms.EDProducer( "PixelInactiveAreaTrackingRegionsSeedingLayersProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "notUsed" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      extraPhi = cms.double( 0.0 ),
      extraEta = cms.double( 0.0 ),
      maxNVertices = cms.int32( 1 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.0 ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.2 ),
      measurementTrackerName = cms.InputTag( "hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEventNoVtx" ),
      precise = cms.bool( True )
    ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    ignoreSingleFPixPanelModules = cms.bool( True ),
    debug = cms.untracked.bool( False ),
    createPlottingFiles = cms.untracked.bool( False ),
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter3IterL3FromL1MuonClustersRefRemovalNoVtx" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter3IterL3FromL1MuonClustersRefRemovalNoVtx" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltIter3IterL3FromL1MuonTrackingRegionsNoVtx = cms.EDProducer( "L1MuonSeededTrackingRegionsEDProducer",
    Propagator = cms.string( "SteppingHelixPropagatorAny" ),
    L1MinPt = cms.double( 0.0 ),
    L1MaxEta = cms.double( 2.5 ),
    L1MinQuality = cms.uint32( 7 ),
    SetMinPtBarrelTo = cms.double( 3.5 ),
    SetMinPtEndcapTo = cms.double( 1.0 ),
    CentralBxOnly = cms.bool( True ),
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "notUsed" ),
      deltaEtas = cms.vdouble( 0.175, 0.175, 0.175, 0.175 ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 1 ),
      maxNRegions = cms.int32( 3 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.0 ),
      mode = cms.string( "BeamSpotSigma" ),
      input = cms.InputTag( "hltIterL3MuonL1MuonNoL2SelectorNoVtx" ),
      ptRanges = cms.vdouble( 0.0, 10.0, 15.0, 20.0, 1.0E64 ),
      searchOpt = cms.bool( False ),
      deltaPhis = cms.vdouble( 0.5, 0.4, 0.3, 0.15 ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.2 ),
      measurementTrackerName = cms.InputTag( "hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEventNoVtx" ),
      precise = cms.bool( True )
    ),
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'SteppingHelixPropagatorAny' )
    )
)
process.hltIter3IterL3FromL1MuonPixelClusterCheckNoVtx = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 50000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False )
)
process.hltIter3IterL3FromL1MuonPixelHitDoubletsNoVtx = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltIter3IterL3FromL1MuonPixelLayersAndRegionsNoVtx" ),
    trackingRegions = cms.InputTag( "hltIter3IterL3FromL1MuonTrackingRegionsNoVtx" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "hltIter3IterL3FromL1MuonPixelClusterCheckNoVtx" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( False ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltIter3IterL3FromL1MuonPixelSeedsNoVtx = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltIter3IterL3FromL1MuonPixelHitDoubletsNoVtx" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltIter3IterL3FromL1MuonCkfTrackCandidatesNoVtx = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEventNoVtx" ),
    src = cms.InputTag( "hltIter3IterL3FromL1MuonPixelSeedsNoVtx" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter3IterL3FromL1MuonCtfWithMaterialTracksNoVtx = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter3IterL3FromL1MuonCkfTrackCandidatesNoVtx" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter3IterL3FromL1Muon" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEventNoVtx" )
)
process.hltIter3IterL3FromL1MuonTrackCutClassifierNoVtx = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter3IterL3FromL1MuonCtfWithMaterialTracksNoVtx" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    )
)
process.hltIter3IterL3FromL1MuonTrackSelectionHighPurityNoVtx = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter3IterL3FromL1MuonCtfWithMaterialTracksNoVtx" ),
    originalMVAVals = cms.InputTag( 'hltIter3IterL3FromL1MuonTrackCutClassifierNoVtx','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter3IterL3FromL1MuonTrackCutClassifierNoVtx','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltIter03IterL3FromL1MuonMergedNoVtx = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIter0IterL3FromL1MuonTrackSelectionHighPurityNoVtx','hltIter3IterL3FromL1MuonTrackSelectionHighPurityNoVtx' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0IterL3FromL1MuonTrackSelectionHighPurityNoVtx','hltIter3IterL3FromL1MuonTrackSelectionHighPurityNoVtx' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltIterL3MuonMergedNoVtx = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3OIMuonTrackSelectionHighPurityNoVtx','hltIter0IterL3MuonTrackSelectionHighPurityNoVtx' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3OIMuonTrackSelectionHighPurityNoVtx','hltIter0IterL3MuonTrackSelectionHighPurityNoVtx' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltIterL3MuonAndMuonFromL1MergedNoVtx = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3MuonMergedNoVtx','hltIter03IterL3FromL1MuonMergedNoVtx' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3MuonMergedNoVtx','hltIter03IterL3FromL1MuonMergedNoVtx' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltL3MuonsIterL3LinksNoVtx = cms.EDProducer( "MuonLinksProducerForHLT",
    InclusiveTrackerTrackCollection = cms.InputTag( "hltIterL3MuonAndMuonFromL1MergedNoVtx" ),
    LinkCollection = cms.InputTag( "hltIterL3MuonsFromL2LinksCombinationNoVtx" ),
    ptMin = cms.double( 2.5 ),
    pMin = cms.double( 2.5 ),
    shareHitFraction = cms.double( 0.19 )
)
process.hltIterL3MuonsNoVtx = cms.EDProducer( "MuonIdProducer",
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( False ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
      CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( False ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( False ),
      HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( "Notused" ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "Notused" )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
        CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( "Notused" ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "Notused" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter0IterL3FromL1MuonTrackSelectionHighPurityNoVtx" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "Notused" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
        CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( "Notused" ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "Notused" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    trackDepositName = cms.string( "tracker" ),
    ecalDepositName = cms.string( "ecal" ),
    hcalDepositName = cms.string( "hcal" ),
    hoDepositName = cms.string( "ho" ),
    jetDepositName = cms.string( "jets" ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    ShowerDigiFillerParameters = cms.PSet( 
      cscDigiCollectionLabel = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
      digiMaxDistanceX = cms.double( 25.0 ),
      dtDigiCollectionLabel = cms.InputTag( "hltMuonDTDigis" )
    ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    fillEnergy = cms.bool( False ),
    storeCrossedHcalRecHits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsEta = cms.double( 3.0 ),
    minPt = cms.double( 8.0 ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links' ),
    addExtraSoftMuons = cms.bool( False ),
    fillGlobalTrackRefits = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    inputCollectionLabels = cms.VInputTag( 'hltIterL3MuonAndMuonFromL1MergedNoVtx','hltL3MuonsIterL3LinksNoVtx' ),
    fillCaloCompatibility = cms.bool( False ),
    maxAbsPullY = cms.double( 9999.0 ),
    maxAbsDy = cms.double( 9999.0 ),
    minP = cms.double( 0.0 ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDx = cms.double( 3.0 ),
    fillIsolation = cms.bool( False ),
    writeIsoDeposits = cms.bool( False ),
    minNumberOfMatches = cms.int32( 1 ),
    fillMatching = cms.bool( True ),
    fillShowerDigis = cms.bool( False ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    fillGlobalTrackQuality = cms.bool( False ),
    globalTrackQualityInputTag = cms.InputTag( "" ),
    selectHighPurity = cms.bool( False ),
    pvInputTag = cms.InputTag( "" ),
    fillTrackerKink = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    runArbitrationCleaner = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    arbitrateTrackerMuons = cms.bool( True )
)
process.hltIterL3MuonCandidatesNoVtx = cms.EDProducer( "L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag( "hltIterL3MuonsNoVtx" ),
    DisplacedReconstruction = cms.bool( False )
)
process.hltDoubleMuonL3PreFilteredScoutingNoVtx = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMuonScouting" ),
    L1CandTag = cms.InputTag( "hltL1fL1sL1DoubleMuonScouting" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonsNoVtx" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 3.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 0 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3LinksNoVtx" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDoubleMuonL3FilteredScoutingNoVtx = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMuonScouting" ),
    L1CandTag = cms.InputTag( "hltL1fL1sL1DoubleMuonScouting" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonsNoVtx" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 3.0 ),
    MinPtMin = cms.vdouble( 3.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 0.0 ),
    MaxInvMass = cms.vdouble( 1.0E125 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -999.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 999999.0 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3LinksNoVtx" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltEcalDigisLegacy = cms.EDProducer( "EcalRawToDigi",
    tccUnpacking = cms.bool( True ),
    FedLabel = cms.InputTag( "listfeds" ),
    srpUnpacking = cms.bool( True ),
    syncCheck = cms.bool( True ),
    feIdCheck = cms.bool( True ),
    silentMode = cms.untracked.bool( True ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    orderedFedList = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    eventPut = cms.bool( True ),
    numbTriggerTSamples = cms.int32( 1 ),
    numbXtalTSamples = cms.int32( 10 ),
    orderedDCCIdList = cms.vint32( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 ),
    FEDs = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    DoRegional = cms.bool( False ),
    feUnpacking = cms.bool( True ),
    forceToKeepFRData = cms.bool( False ),
    headerUnpacking = cms.bool( True ),
    memUnpacking = cms.bool( True )
)
process.hltEcalDigisSoA = cms.EDProducer( "EcalRawToDigiPortable@alpaka",
    InputLabel = cms.InputTag( "rawDataCollector" ),
    FEDs = cms.vint32( 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654 ),
    maxChannelsEB = cms.uint32( 61200 ),
    maxChannelsEE = cms.uint32( 14648 ),
    digisLabelEB = cms.string( "ebDigis" ),
    digisLabelEE = cms.string( "eeDigis" ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltEcalDigis = cms.EDProducer( "EcalDigisFromPortableProducer",
    digisInLabelEB = cms.InputTag( 'hltEcalDigisSoA','ebDigis' ),
    digisInLabelEE = cms.InputTag( 'hltEcalDigisSoA','eeDigis' ),
    digisOutLabelEB = cms.string( "ebDigis" ),
    digisOutLabelEE = cms.string( "eeDigis" ),
    produceDummyIntegrityCollections = cms.bool( False )
)
process.hltEcalUncalibRecHitSoA = cms.EDProducer( "EcalUncalibRecHitProducerPortable@alpaka",
    digisLabelEB = cms.InputTag( 'hltEcalDigisSoA','ebDigis' ),
    digisLabelEE = cms.InputTag( 'hltEcalDigisSoA','eeDigis' ),
    recHitsLabelEB = cms.string( "EcalUncalibRecHitsEB" ),
    recHitsLabelEE = cms.string( "EcalUncalibRecHitsEE" ),
    EBtimeFitLimits_Lower = cms.double( 0.2 ),
    EBtimeFitLimits_Upper = cms.double( 1.4 ),
    EEtimeFitLimits_Lower = cms.double( 0.2 ),
    EEtimeFitLimits_Upper = cms.double( 1.4 ),
    EBtimeConstantTerm = cms.double( 0.6 ),
    EEtimeConstantTerm = cms.double( 1.0 ),
    EBtimeNconst = cms.double( 28.5 ),
    EEtimeNconst = cms.double( 31.8 ),
    outOfTimeThresholdGain12pEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain12mEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain61pEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain61mEB = cms.double( 1000.0 ),
    outOfTimeThresholdGain12pEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain12mEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain61pEE = cms.double( 1000.0 ),
    outOfTimeThresholdGain61mEE = cms.double( 1000.0 ),
    amplitudeThresholdEB = cms.double( 10.0 ),
    amplitudeThresholdEE = cms.double( 10.0 ),
    kernelMinimizeThreads = cms.untracked.vuint32( 32, 1, 1 ),
    shouldRunTimingComputation = cms.bool( True ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltEcalUncalibRecHit = cms.EDProducer( "EcalUncalibRecHitSoAToLegacy",
    uncalibRecHitsPortableEB = cms.InputTag( 'hltEcalUncalibRecHitSoA','EcalUncalibRecHitsEB' ),
    recHitsLabelCPUEB = cms.string( "EcalUncalibRecHitsEB" ),
    isPhase2 = cms.bool( False ),
    uncalibRecHitsPortableEE = cms.InputTag( 'hltEcalUncalibRecHitSoA','EcalUncalibRecHitsEE' ),
    recHitsLabelCPUEE = cms.string( "EcalUncalibRecHitsEE" )
)
process.hltEcalDetIdToBeRecovered = cms.EDProducer( "EcalDetIdToBeRecoveredProducer",
    ebIntegrityChIdErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityChIdErrors' ),
    ebDetIdToBeRecovered = cms.string( "ebDetId" ),
    integrityTTIdErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityTTIdErrors' ),
    eeIntegrityGainErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityGainErrors' ),
    ebFEToBeRecovered = cms.string( "ebFE" ),
    ebIntegrityGainErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityGainErrors' ),
    eeDetIdToBeRecovered = cms.string( "eeDetId" ),
    eeIntegrityGainSwitchErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityGainSwitchErrors' ),
    eeIntegrityChIdErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityChIdErrors' ),
    ebIntegrityGainSwitchErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityGainSwitchErrors' ),
    ebSrFlagCollection = cms.InputTag( "hltEcalDigisLegacy" ),
    eeFEToBeRecovered = cms.string( "eeFE" ),
    integrityBlockSizeErrors = cms.InputTag( 'hltEcalDigisLegacy','EcalIntegrityBlockSizeErrors' ),
    eeSrFlagCollection = cms.InputTag( "hltEcalDigisLegacy" )
)
process.hltEcalRecHit = cms.EDProducer( "EcalRecHitProducer",
    recoverEEVFE = cms.bool( False ),
    EErechitCollection = cms.string( "EcalRecHitsEE" ),
    recoverEBIsolatedChannels = cms.bool( False ),
    recoverEBVFE = cms.bool( False ),
    laserCorrection = cms.bool( True ),
    EBLaserMIN = cms.double( 0.5 ),
    killDeadChannels = cms.bool( True ),
    dbStatusToBeExcludedEB = cms.vint32( 14, 78, 142 ),
    EEuncalibRecHitCollection = cms.InputTag( 'hltEcalUncalibRecHit','EcalUncalibRecHitsEE' ),
    dbStatusToBeExcludedEE = cms.vint32( 14, 78, 142 ),
    EELaserMIN = cms.double( 0.5 ),
    ebFEToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','ebFE' ),
    cleaningConfig = cms.PSet( 
      cThreshold_endcap = cms.double( 15.0 ),
      tightenCrack_e1_double = cms.double( 2.0 ),
      cThreshold_barrel = cms.double( 4.0 ),
      e6e2thresh = cms.double( 0.04 ),
      e4e1Threshold_barrel = cms.double( 0.08 ),
      e4e1Threshold_endcap = cms.double( 0.3 ),
      tightenCrack_e4e1_single = cms.double( 3.0 ),
      cThreshold_double = cms.double( 10.0 ),
      e4e1_b_barrel = cms.double( -0.024 ),
      tightenCrack_e6e2_double = cms.double( 3.0 ),
      e4e1_a_barrel = cms.double( 0.04 ),
      tightenCrack_e1_single = cms.double( 2.0 ),
      e4e1_a_endcap = cms.double( 0.02 ),
      e4e1_b_endcap = cms.double( -0.0125 ),
      ignoreOutOfTimeThresh = cms.double( 1.0E9 )
    ),
    logWarningEtThreshold_EE_FE = cms.double( 50.0 ),
    eeDetIdToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','eeDetId' ),
    recoverEBFE = cms.bool( False ),
    eeFEToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','eeFE' ),
    ebDetIdToBeRecovered = cms.InputTag( 'hltEcalDetIdToBeRecovered','ebDetId' ),
    singleChannelRecoveryThreshold = cms.double( 8.0 ),
    sum8ChannelRecoveryThreshold = cms.double( 0.0 ),
    bdtWeightFileNoCracks = cms.FileInPath( "RecoLocalCalo/EcalDeadChannelRecoveryAlgos/data/BDTWeights/bdtgAllRH_8GT700MeV_noCracks_ZskimData2017_v1.xml" ),
    bdtWeightFileCracks = cms.FileInPath( "RecoLocalCalo/EcalDeadChannelRecoveryAlgos/data/BDTWeights/bdtgAllRH_8GT700MeV_onlyCracks_ZskimData2017_v1.xml" ),
    ChannelStatusToBeExcluded = cms.vstring(  ),
    EBrechitCollection = cms.string( "EcalRecHitsEB" ),
    triggerPrimitiveDigiCollection = cms.InputTag( 'hltEcalDigisLegacy','EcalTriggerPrimitives' ),
    recoverEEFE = cms.bool( False ),
    singleChannelRecoveryMethod = cms.string( "NeuralNetworks" ),
    EBLaserMAX = cms.double( 3.0 ),
    flagsMapDBReco = cms.PSet( 
      kDead = cms.vstring( 'kNoDataNoTP' ),
      kGood = cms.vstring( 'kOk',
        'kDAC',
        'kNoLaser',
        'kNoisy' ),
      kTowerRecovered = cms.vstring( 'kDeadFE' ),
      kNoisy = cms.vstring( 'kNNoisy',
        'kFixedG6',
        'kFixedG1' ),
      kNeighboursRecovered = cms.vstring( 'kFixedG0',
        'kNonRespondingIsolated',
        'kDeadVFE' )
    ),
    EBuncalibRecHitCollection = cms.InputTag( 'hltEcalUncalibRecHit','EcalUncalibRecHitsEB' ),
    algoRecover = cms.string( "EcalRecHitWorkerRecover" ),
    algo = cms.string( "EcalRecHitWorkerSimple" ),
    EELaserMAX = cms.double( 8.0 ),
    logWarningEtThreshold_EB_FE = cms.double( 50.0 ),
    recoverEEIsolatedChannels = cms.bool( False ),
    timeCalibTag = cms.ESInputTag( "","" ),
    timeOffsetTag = cms.ESInputTag( "","" ),
    skipTimeCalib = cms.bool( False )
)
process.hltHcalDigis = cms.EDProducer( "HcalRawToDigi",
    HcalFirstFED = cms.untracked.int32( 700 ),
    firstSample = cms.int32( 0 ),
    lastSample = cms.int32( 9 ),
    FilterDataQuality = cms.bool( True ),
    FEDs = cms.untracked.vint32(  ),
    UnpackZDC = cms.untracked.bool( True ),
    UnpackCalib = cms.untracked.bool( True ),
    UnpackUMNio = cms.untracked.bool( True ),
    UnpackTTP = cms.untracked.bool( False ),
    silent = cms.untracked.bool( True ),
    saveQIE10DataNSamples = cms.untracked.vint32(  ),
    saveQIE10DataTags = cms.untracked.vstring(  ),
    saveQIE11DataNSamples = cms.untracked.vint32(  ),
    saveQIE11DataTags = cms.untracked.vstring(  ),
    ComplainEmptyData = cms.untracked.bool( False ),
    UnpackerMode = cms.untracked.int32( 0 ),
    ExpectedOrbitMessageTime = cms.untracked.int32( -1 ),
    InputLabel = cms.InputTag( "rawDataCollector" ),
    ElectronicsMap = cms.string( "" )
)
process.hltHcalDigisGPU = cms.EDProducer( "HcalDigisProducerGPU",
    hbheDigisLabel = cms.InputTag( "hltHcalDigis" ),
    qie11DigiLabel = cms.InputTag( "hltHcalDigis" ),
    digisLabelF01HE = cms.string( "" ),
    digisLabelF5HB = cms.string( "" ),
    digisLabelF3HB = cms.string( "" ),
    maxChannelsF01HE = cms.uint32( 10000 ),
    maxChannelsF5HB = cms.uint32( 10000 ),
    maxChannelsF3HB = cms.uint32( 10000 )
)
process.hltHbherecoLegacy = cms.EDProducer( "HBHEPhase1Reconstructor",
    digiLabelQIE8 = cms.InputTag( "hltHcalDigis" ),
    processQIE8 = cms.bool( False ),
    digiLabelQIE11 = cms.InputTag( "hltHcalDigis" ),
    processQIE11 = cms.bool( True ),
    tsFromDB = cms.bool( False ),
    recoParamsFromDB = cms.bool( True ),
    saveEffectivePedestal = cms.bool( True ),
    dropZSmarkedPassed = cms.bool( True ),
    makeRecHits = cms.bool( True ),
    saveInfos = cms.bool( False ),
    saveDroppedInfos = cms.bool( False ),
    use8ts = cms.bool( True ),
    sipmQTSShift = cms.int32( 0 ),
    sipmQNTStoSum = cms.int32( 3 ),
    algorithm = cms.PSet( 
      ts4Thresh = cms.double( 0.0 ),
      meanTime = cms.double( 0.0 ),
      nnlsThresh = cms.double( 1.0E-11 ),
      nMaxItersMin = cms.int32( 50 ),
      timeSigmaSiPM = cms.double( 2.5 ),
      applyTimeSlew = cms.bool( True ),
      timeSlewParsType = cms.int32( 3 ),
      ts4Max = cms.vdouble( 100.0, 20000.0, 30000.0 ),
      samplesToAdd = cms.int32( 2 ),
      deltaChiSqThresh = cms.double( 0.001 ),
      applyTimeConstraint = cms.bool( False ),
      calculateArrivalTime = cms.bool( False ),
      timeSigmaHPD = cms.double( 5.0 ),
      useMahi = cms.bool( True ),
      correctForPhaseContainment = cms.bool( True ),
      respCorrM3 = cms.double( 1.0 ),
      pulseJitter = cms.double( 1.0 ),
      applyPedConstraint = cms.bool( False ),
      fitTimes = cms.int32( 1 ),
      nMaxItersNNLS = cms.int32( 500 ),
      applyTimeSlewM3 = cms.bool( True ),
      meanPed = cms.double( 0.0 ),
      ts4Min = cms.double( 0.0 ),
      applyPulseJitter = cms.bool( False ),
      useM2 = cms.bool( False ),
      timeMin = cms.double( -12.5 ),
      useM3 = cms.bool( False ),
      chiSqSwitch = cms.double( -1.0 ),
      dynamicPed = cms.bool( False ),
      tdcTimeShift = cms.double( 0.0 ),
      correctionPhaseNS = cms.double( 6.0 ),
      firstSampleShift = cms.int32( 0 ),
      activeBXs = cms.vint32( -3, -2, -1, 0, 1, 2, 3, 4 ),
      ts4chi2 = cms.vdouble( 15.0, 15.0 ),
      timeMax = cms.double( 12.5 ),
      Class = cms.string( "SimpleHBHEPhase1Algo" ),
      applyLegacyHBMCorrection = cms.bool( False )
    ),
    algoConfigClass = cms.string( "" ),
    setNegativeFlagsQIE8 = cms.bool( False ),
    setNegativeFlagsQIE11 = cms.bool( False ),
    setNoiseFlagsQIE8 = cms.bool( False ),
    setNoiseFlagsQIE11 = cms.bool( False ),
    setPulseShapeFlagsQIE8 = cms.bool( False ),
    setPulseShapeFlagsQIE11 = cms.bool( False ),
    setLegacyFlagsQIE8 = cms.bool( False ),
    setLegacyFlagsQIE11 = cms.bool( False ),
    flagParametersQIE8 = cms.PSet( 
      hitEnergyMinimum = cms.double( 1.0 ),
      pulseShapeParameterSets = cms.VPSet( 
        cms.PSet(  pulseShapeParameters = cms.vdouble( 0.0, 100.0, -50.0, 0.0, -15.0, 0.15 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 100.0, 2000.0, -50.0, 0.0, -5.0, 0.05 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( 2000.0, 1000000.0, -50.0, 0.0, 95.0, 0.0 )        ),
        cms.PSet(  pulseShapeParameters = cms.vdouble( -1000000.0, 1000000.0, 45.0, 0.1, 1000000.0, 0.0 )        )
      ),
      nominalPedestal = cms.double( 3.0 ),
      hitMultiplicityThreshold = cms.int32( 17 )
    ),
    flagParametersQIE11 = cms.PSet(  ),
    pulseShapeParametersQIE8 = cms.PSet( 
      UseDualFit = cms.bool( True ),
      LinearCut = cms.vdouble( -3.0, -0.054, -0.054 ),
      TriangleIgnoreSlow = cms.bool( False ),
      TS4TS5LowerThreshold = cms.vdouble( 100.0, 120.0, 160.0, 200.0, 300.0, 500.0 ),
      LinearThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      RightSlopeSmallCut = cms.vdouble( 1.08, 1.16, 1.16 ),
      TS4TS5UpperThreshold = cms.vdouble( 70.0, 90.0, 100.0, 400.0 ),
      TS3TS4ChargeThreshold = cms.double( 70.0 ),
      R45PlusOneRange = cms.double( 0.2 ),
      TS4TS5LowerCut = cms.vdouble( -1.0, -0.7, -0.5, -0.4, -0.3, 0.1 ),
      RightSlopeThreshold = cms.vdouble( 250.0, 400.0, 100000.0 ),
      TS3TS4UpperChargeThreshold = cms.double( 20.0 ),
      MinimumChargeThreshold = cms.double( 20.0 ),
      RightSlopeCut = cms.vdouble( 5.0, 4.15, 4.15 ),
      RMS8MaxThreshold = cms.vdouble( 20.0, 100.0, 100000.0 ),
      MinimumTS4TS5Threshold = cms.double( 100.0 ),
      LeftSlopeThreshold = cms.vdouble( 250.0, 500.0, 100000.0 ),
      TS5TS6ChargeThreshold = cms.double( 70.0 ),
      TrianglePeakTS = cms.uint32( 10000 ),
      TS5TS6UpperChargeThreshold = cms.double( 20.0 ),
      RightSlopeSmallThreshold = cms.vdouble( 150.0, 200.0, 100000.0 ),
      RMS8MaxCut = cms.vdouble( -13.5, -11.5, -11.5 ),
      TS4TS5ChargeThreshold = cms.double( 70.0 ),
      R45MinusOneRange = cms.double( 0.2 ),
      LeftSlopeCut = cms.vdouble( 5.0, 2.55, 2.55 ),
      TS4TS5UpperCut = cms.vdouble( 1.0, 0.8, 0.75, 0.72 )
    ),
    pulseShapeParametersQIE11 = cms.PSet(  )
)
process.hltHbherecoGPU = cms.EDProducer( "HBHERecHitProducerGPU",
    maxTimeSamples = cms.uint32( 10 ),
    kprep1dChannelsPerBlock = cms.uint32( 32 ),
    digisLabelF01HE = cms.InputTag( "hltHcalDigisGPU" ),
    digisLabelF5HB = cms.InputTag( "hltHcalDigisGPU" ),
    digisLabelF3HB = cms.InputTag( "hltHcalDigisGPU" ),
    recHitsLabelM0HBHE = cms.string( "" ),
    sipmQTSShift = cms.int32( 0 ),
    sipmQNTStoSum = cms.int32( 3 ),
    firstSampleShift = cms.int32( 0 ),
    useEffectivePedestals = cms.bool( True ),
    meanTime = cms.double( 0.0 ),
    timeSigmaSiPM = cms.double( 2.5 ),
    timeSigmaHPD = cms.double( 5.0 ),
    ts4Thresh = cms.double( 0.0 ),
    applyTimeSlew = cms.bool( True ),
    tzeroTimeSlewParameters = cms.vdouble( 23.960177, 11.977461, 9.109694 ),
    slopeTimeSlewParameters = cms.vdouble( -3.178648, -1.5610227, -1.075824 ),
    tmaxTimeSlewParameters = cms.vdouble( 16.0, 10.0, 6.25 ),
    kernelMinimizeThreads = cms.vuint32( 16, 1, 1 )
)
process.hltHbherecoFromGPU = cms.EDProducer( "HcalCPURecHitsProducer",
    recHitsM0LabelIn = cms.InputTag( "hltHbherecoGPU" ),
    recHitsM0LabelOut = cms.string( "" ),
    recHitsLegacyLabelOut = cms.string( "" ),
    produceSoA = cms.bool( True ),
    produceLegacy = cms.bool( True )
)
process.hltHfprereco = cms.EDProducer( "HFPreReconstructor",
    digiLabel = cms.InputTag( "hltHcalDigis" ),
    dropZSmarkedPassed = cms.bool( True ),
    tsFromDB = cms.bool( False ),
    sumAllTimeSlices = cms.bool( False ),
    forceSOI = cms.int32( -1 ),
    soiShift = cms.int32( 0 )
)
process.hltHfreco = cms.EDProducer( "HFPhase1Reconstructor",
    inputLabel = cms.InputTag( "hltHfprereco" ),
    useChannelQualityFromDB = cms.bool( False ),
    checkChannelQualityForDepth3and4 = cms.bool( False ),
    algorithm = cms.PSet( 
      tfallIfNoTDC = cms.double( -101.0 ),
      triseIfNoTDC = cms.double( -100.0 ),
      rejectAllFailures = cms.bool( True ),
      energyWeights = cms.vdouble( 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0 ),
      soiPhase = cms.uint32( 1 ),
      timeShift = cms.double( 0.0 ),
      tlimits = cms.vdouble( -1000.0, 1000.0, -1000.0, 1000.0 ),
      Class = cms.string( "HFFlexibleTimeCheck" )
    ),
    algoConfigClass = cms.string( "HFPhase1PMTParams" ),
    setNoiseFlags = cms.bool( True ),
    runHFStripFilter = cms.bool( False ),
    S9S1stat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 35.1773, 35.37, 35.7933, 36.4472, 37.3317, 38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 47.4813, 49.98, 52.7093 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_optimumSlope = cms.vdouble( -99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 0.135313, 0.136289, 0.0589927 ),
      isS8S1 = cms.bool( False ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 43.5, 45.7, 48.32, 51.36, 54.82, 58.7, 63.0, 67.72, 72.86, 78.42, 84.4, 90.8, 97.62 ),
      short_optimumSlope = cms.vdouble( -99999.0, 0.0164905, 0.0238698, 0.0321383, 0.041296, 0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422, 0.135313, 0.136289, 0.0589927 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    S8S1stat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 40.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_optimumSlope = cms.vdouble( 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ),
      isS8S1 = cms.bool( True ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 40.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0 ),
      short_optimumSlope = cms.vdouble( 0.3, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    PETstat = cms.PSet( 
      shortEnergyParams = cms.vdouble( 35.1773, 35.37, 35.7933, 36.4472, 37.3317, 38.4468, 39.7925, 41.3688, 43.1757, 45.2132, 47.4813, 49.98, 52.7093 ),
      shortETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      long_R_29 = cms.vdouble( 0.8 ),
      longETParams = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
      longEnergyParams = cms.vdouble( 43.5, 45.7, 48.32, 51.36, 54.82, 58.7, 63.0, 67.72, 72.86, 78.42, 84.4, 90.8, 97.62 ),
      short_R_29 = cms.vdouble( 0.8 ),
      long_R = cms.vdouble( 0.98 ),
      short_R = cms.vdouble( 0.8 ),
      HcalAcceptSeverityLevel = cms.int32( 9 )
    ),
    HFStripFilter = cms.PSet( 
      seedHitIetaMax = cms.int32( 35 ),
      verboseLevel = cms.untracked.int32( 10 ),
      maxThreshold = cms.double( 100.0 ),
      stripThreshold = cms.double( 40.0 ),
      wedgeCut = cms.double( 0.05 ),
      lstrips = cms.int32( 2 ),
      maxStripTime = cms.double( 10.0 ),
      gap = cms.int32( 2 ),
      timeMax = cms.double( 6.0 )
    )
)
process.hltHoreco = cms.EDProducer( "HcalHitReconstructor",
    correctForPhaseContainment = cms.bool( True ),
    correctionPhaseNS = cms.double( 13.0 ),
    digiLabel = cms.InputTag( "hltHcalDigis" ),
    Subdetector = cms.string( "HO" ),
    correctForTimeslew = cms.bool( True ),
    dropZSmarkedPassed = cms.bool( True ),
    firstSample = cms.int32( 4 ),
    samplesToAdd = cms.int32( 4 ),
    tsFromDB = cms.bool( True ),
    recoParamsFromDB = cms.bool( True ),
    useLeakCorrection = cms.bool( False ),
    dataOOTCorrectionName = cms.string( "" ),
    dataOOTCorrectionCategory = cms.string( "Data" ),
    mcOOTCorrectionName = cms.string( "" ),
    mcOOTCorrectionCategory = cms.string( "MC" ),
    correctTiming = cms.bool( False ),
    firstAuxTS = cms.int32( 4 ),
    setNoiseFlags = cms.bool( False ),
    digiTimeFromDB = cms.bool( True ),
    setHSCPFlags = cms.bool( False ),
    setSaturationFlags = cms.bool( False ),
    setTimingTrustFlags = cms.bool( False ),
    setPulseShapeFlags = cms.bool( False ),
    setNegativeFlags = cms.bool( False ),
    digistat = cms.PSet(  ),
    HFInWindowStat = cms.PSet(  ),
    S9S1stat = cms.PSet(  ),
    S8S1stat = cms.PSet(  ),
    PETstat = cms.PSet(  ),
    saturationParameters = cms.PSet(  maxADCvalue = cms.int32( 127 ) ),
    hfTimingTrustParameters = cms.PSet(  )
)
process.hltTowerMakerForAll = cms.EDProducer( "CaloTowersCreator",
    EBSumThreshold = cms.double( 0.2 ),
    HF2Weight = cms.double( 1.0 ),
    EBWeight = cms.double( 1.0 ),
    hfInput = cms.InputTag( "hltHfreco" ),
    EESumThreshold = cms.double( 0.45 ),
    HOThreshold0 = cms.double( 3.5 ),
    HOThresholdPlus1 = cms.double( 3.5 ),
    HOThresholdMinus1 = cms.double( 3.5 ),
    HOThresholdPlus2 = cms.double( 3.5 ),
    HOThresholdMinus2 = cms.double( 3.5 ),
    HBGrid = cms.vdouble(  ),
    HBThreshold1 = cms.double( 0.4 ),
    HBThreshold2 = cms.double( 0.3 ),
    HBThreshold = cms.double( 0.3 ),
    EEWeights = cms.vdouble(  ),
    HF1Threshold = cms.double( 0.5 ),
    HF2Weights = cms.vdouble(  ),
    HOWeights = cms.vdouble(  ),
    EEGrid = cms.vdouble(  ),
    HEDWeight = cms.double( 1.0 ),
    EEWeight = cms.double( 1.0 ),
    UseHO = cms.bool( False ),
    HBWeights = cms.vdouble(  ),
    HESWeight = cms.double( 1.0 ),
    HF1Weight = cms.double( 1.0 ),
    HF2Grid = cms.vdouble(  ),
    HEDWeights = cms.vdouble(  ),
    HF1Grid = cms.vdouble(  ),
    EBWeights = cms.vdouble(  ),
    HOWeight = cms.double( 1.0E-99 ),
    EBThreshold = cms.double( 0.07 ),
    EEThreshold = cms.double( 0.3 ),
    UseEtEBTreshold = cms.bool( False ),
    UseSymEBTreshold = cms.bool( False ),
    UseEtEETreshold = cms.bool( False ),
    UseSymEETreshold = cms.bool( False ),
    hbheInput = cms.InputTag( "hltHbhereco" ),
    HcalThreshold = cms.double( -1000.0 ),
    HF2Threshold = cms.double( 0.85 ),
    HESThreshold1 = cms.double( 0.1 ),
    HESThreshold = cms.double( 0.2 ),
    HF1Weights = cms.vdouble(  ),
    hoInput = cms.InputTag( "hltHoreco" ),
    HESGrid = cms.vdouble(  ),
    HESWeights = cms.vdouble(  ),
    HEDThreshold1 = cms.double( 0.1 ),
    HEDThreshold = cms.double( 0.2 ),
    EcutTower = cms.double( -1000.0 ),
    HEDGrid = cms.vdouble(  ),
    ecalInputs = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    HBWeight = cms.double( 1.0 ),
    HOGrid = cms.vdouble(  ),
    EBGrid = cms.vdouble(  ),
    MomConstrMethod = cms.int32( 1 ),
    MomHBDepth = cms.double( 0.2 ),
    MomHEDepth = cms.double( 0.4 ),
    MomEBDepth = cms.double( 0.3 ),
    MomEEDepth = cms.double( 0.0 ),
    HcalAcceptSeverityLevel = cms.uint32( 9 ),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring( 'kTime',
      'kWeird',
      'kBad' ),
    UseHcalRecoveredHits = cms.bool( False ),
    UseEcalRecoveredHits = cms.bool( False ),
    UseRejectedHitsOnly = cms.bool( False ),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32( 9999 ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(  ),
    UseRejectedRecoveredHcalHits = cms.bool( False ),
    UseRejectedRecoveredEcalHits = cms.bool( False ),
    missingHcalRescaleFactorForEcal = cms.double( 0.0 ),
    AllowMissingInputs = cms.bool( False ),
    HcalPhase = cms.int32( 1 ),
    usePFThresholdsFromDB = cms.bool( True )
)
process.hltAK4CaloJetsPF = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltTowerMakerForAll" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.4 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK4CaloJetsPFEt5 = cms.EDFilter( "EtMinCaloJetSelector",
    src = cms.InputTag( "hltAK4CaloJetsPF" ),
    filter = cms.bool( False ),
    etMin = cms.double( 5.0 )
)
process.hltL2MuonCandidates = cms.EDProducer( "L2MuonCandidateProducer",
    InputObjects = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' )
)
process.hltIterL3OISeedsFromL2Muons = cms.EDProducer( "TSGForOIDNN",
    src = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    layersToTry = cms.int32( 2 ),
    fixedErrorRescaleFactorForHitless = cms.double( 2.0 ),
    hitsToTry = cms.int32( 1 ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    estimator = cms.string( "hltESPChi2MeasurementEstimator100" ),
    maxEtaForTOB = cms.double( 1.8 ),
    minEtaForTEC = cms.double( 0.7 ),
    debug = cms.untracked.bool( False ),
    maxSeeds = cms.uint32( 20 ),
    maxHitlessSeeds = cms.uint32( 5 ),
    maxHitSeeds = cms.uint32( 1 ),
    propagatorName = cms.string( "PropagatorWithMaterialParabolicMf" ),
    maxHitlessSeedsIP = cms.uint32( 5 ),
    maxHitlessSeedsMuS = cms.uint32( 0 ),
    maxHitDoubletSeeds = cms.uint32( 0 ),
    getStrategyFromDNN = cms.bool( True ),
    useRegressor = cms.bool( False ),
    dnnMetadataPath = cms.string( "RecoMuon/TrackerSeedGenerator/data/OIseeding/DNNclassifier_Run3_metadata.json" )
)
process.hltIterL3OITrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( True ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIterL3OISeedsFromL2Muons" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 500000 ),
    maxSeedsBeforeCleaning = cms.uint32( 5000 )
)
process.hltIterL3OIMuCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltIterL3OITrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "iter10" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    MeasurementTracker = cms.string( "hltESPMeasurementTracker" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIterL3OIMuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIterL3OIMuCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "Notused" ),
    ignoreVertices = cms.bool( True ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 4, 3, 2 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 10.0, 1.0, 0.4 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 5, 5 )
    )
)
process.hltIterL3OIMuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIterL3OIMuCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIterL3OIMuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIterL3OIMuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltL3MuonsIterL3OI = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( False ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( False ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.2 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "Notused" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        GEMRecHitLabel = cms.InputTag( "hltGemRecHits" ),
        HitThreshold = cms.int32( 1 ),
        Chi2CutGEM = cms.double( 1.0 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltIterL3OIMuonTrackSelectionHighPurity" )
    )
)
process.hltIterL3OIL3MuonsLinksCombination = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OI' )
)
process.hltIterL3OIL3Muons = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OI' )
)
process.hltIterL3OIL3MuonCandidates = cms.EDProducer( "L3MuonCandidateProducer",
    InputObjects = cms.InputTag( "hltIterL3OIL3Muons" ),
    InputLinksObjects = cms.InputTag( "hltIterL3OIL3MuonsLinksCombination" ),
    MuonPtOption = cms.string( "Tracker" )
)
process.hltL2SelectorForL3IO = cms.EDProducer( "HLTMuonL2SelectorForL3IO",
    l2Src = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    l3OISrc = cms.InputTag( "hltIterL3OIL3MuonCandidates" ),
    InputLinks = cms.InputTag( "hltIterL3OIL3MuonsLinksCombination" ),
    applyL3Filters = cms.bool( False ),
    MinNhits = cms.int32( 1 ),
    MaxNormalizedChi2 = cms.double( 20.0 ),
    MinNmuonHits = cms.int32( 1 ),
    MaxPtDifference = cms.double( 0.3 )
)
process.hltIterL3MuonPixelTracksTrackingRegions = cms.EDProducer( "MuonTrackingRegionByPtEDProducer",
    DeltaR = cms.double( 0.025 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    OnDemand = cms.int32( -1 ),
    vertexCollection = cms.InputTag( "notUsed" ),
    MeasurementTrackerName = cms.InputTag( "" ),
    UseVertex = cms.bool( False ),
    Rescale_Dz = cms.double( 4.0 ),
    Pt_fixed = cms.bool( True ),
    Z_fixed = cms.bool( True ),
    Pt_min = cms.double( 0.0 ),
    DeltaZ = cms.double( 24.2 ),
    ptRanges = cms.vdouble( 0.0, 15.0, 20.0, 1.0E64 ),
    deltaEtas = cms.vdouble( 0.2, 0.2, 0.2 ),
    deltaPhis = cms.vdouble( 0.75, 0.45, 0.225 ),
    maxRegions = cms.int32( 5 ),
    precise = cms.bool( True ),
    input = cms.InputTag( "hltL2SelectorForL3IO" )
)
process.hltPixelTracksInRegionL2 = cms.EDProducer( "TrackSelectorByRegion",
    tracks = cms.InputTag( "hltPixelTracks" ),
    regions = cms.InputTag( "hltIterL3MuonPixelTracksTrackingRegions" ),
    produceTrackCollection = cms.bool( True ),
    produceMask = cms.bool( False )
)
process.hltIter0IterL3MuonPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracksInRegionL2" ),
    InputVertexCollection = cms.InputTag( "" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0IterL3MuonPixelSeedsFromPixelTracksFiltered = cms.EDProducer( "MuonHLTSeedMVAClassifier",
    src = cms.InputTag( "hltIter0IterL3MuonPixelSeedsFromPixelTracks" ),
    L1Muon = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L2Muon = cms.InputTag( "hltL2MuonCandidates" ),
    rejectAll = cms.bool( False ),
    isFromL1 = cms.bool( False ),
    mvaFileBL1 = cms.FileInPath( "RecoMuon/TrackerSeedGenerator/data/xgb_Run3_Iter0FromL1_PatatrackSeeds_barrel_v3.xml" ),
    mvaFileEL1 = cms.FileInPath( "RecoMuon/TrackerSeedGenerator/data/xgb_Run3_Iter0FromL1_PatatrackSeeds_endcap_v3.xml" ),
    mvaFileBL2 = cms.FileInPath( "RecoMuon/TrackerSeedGenerator/data/xgb_Run3_Iter0_PatatrackSeeds_barrel_v3.xml" ),
    mvaFileEL2 = cms.FileInPath( "RecoMuon/TrackerSeedGenerator/data/xgb_Run3_Iter0_PatatrackSeeds_endcap_v3.xml" ),
    mvaScaleMeanBL1 = cms.vdouble( 3.999966523561405E-4, 1.5340202670472034E-5, 2.6710290157638425E-5, 5.978116313043455E-4, 0.0049135275917734636, 3.4305653488182246E-5, 0.24525118734715307, -0.0024635178849904426 ),
    mvaScaleStdBL1 = cms.vdouble( 7.666933596884494E-4, 0.015685297920984408, 0.026294325262867256, 0.07665283880432934, 0.834879854164998, 0.5397258722194461, 0.2807075832224741, 0.32820882609116625 ),
    mvaScaleMeanEL1 = cms.vdouble( 3.017047347441654E-4, 9.077959353128816E-5, 2.7101609045025927E-4, 0.004557390407735609, -0.020781128525626812, 9.286198943080588E-4, 0.26674085200387376, -0.002971698676536822 ),
    mvaScaleStdEL1 = cms.vdouble( 8.125341035878315E-4, 0.19268436761240013, 0.579019516987623, 0.3222327708969556, 1.0567488273501275, 0.2648980106841699, 0.30889713721141826, 0.3593729790466801 ),
    mvaScaleMeanBL2 = cms.vdouble( 4.332629261558539E-4, 4.689795312031938E-6, 7.644844964566431E-6, 6.580623848546099E-4, 0.00523266117445817, 5.6968993532947E-4, 0.20322471101222087, -0.005575351463397025, 0.18247595248098955, 1.5342398341020196E-4 ),
    mvaScaleStdBL2 = cms.vdouble( 7.444819891335438E-4, 0.0014335177986615237, 0.003503839482232683, 0.07764362324530726, 0.8223406268068466, 0.6392468338330071, 0.2405783807668161, 0.2904161358810494, 0.21887441827342669, 0.27045195352036544 ),
    mvaScaleMeanEL2 = cms.vdouble( 3.120747098810717E-4, 4.5298701434656295E-6, 1.2002076996572005E-5, 0.007900535887258366, -0.022166389143849694, 7.12338927507459E-4, 0.22819667672872926, -0.0039375694144792705, 0.19304371973554835, -1.2936058928324214E-5 ),
    mvaScaleStdEL2 = cms.vdouble( 6.302274350028021E-4, 0.0013138279991871378, 0.004880335178644773, 0.32509543981045624, 0.9449952711981982, 0.279802349646327, 0.3193063648341999, 0.3334815828876066, 0.22528017441813106, 0.2822750719936266 ),
    doSort = cms.bool( False ),
    nSeedsMaxB = cms.int32( 99999 ),
    nSeedsMaxE = cms.int32( 99999 ),
    etaEdge = cms.double( 1.2 ),
    mvaCutB = cms.double( 0.04 ),
    mvaCutE = cms.double( 0.04 ),
    minL1Qual = cms.int32( 7 ),
    baseScore = cms.double( 0.5 )
)
process.hltIter0IterL3MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( True ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0IterL3MuonPixelSeedsFromPixelTracksFiltered" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "none" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0IterL3MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0IterL3MuonCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0IterL3MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0IterL3MuonCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    )
)
process.hltIter0IterL3MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0IterL3MuonCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter0IterL3MuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0IterL3MuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltL3MuonsIterL3IO = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( False ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( True ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( True ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.04 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( "hltL2SelectorForL3IO" ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "hltTrimmedPixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        GEMRecHitLabel = cms.InputTag( "hltGemRecHits" ),
        HitThreshold = cms.int32( 1 ),
        Chi2CutGEM = cms.double( 1.0 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      matchToSeeds = cms.bool( True ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltIter0IterL3MuonTrackSelectionHighPurity" )
    )
)
process.hltIterL3MuonsFromL2LinksCombination = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3MuonsIterL3OI','hltL3MuonsIterL3IO' )
)
process.hltL1MuonsPt0 = cms.EDProducer( "HLTL1TMuonSelector",
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MinPt = cms.double( -1.0 ),
    L1MaxEta = cms.double( 5.0 ),
    L1MinQuality = cms.uint32( 7 ),
    CentralBxOnly = cms.bool( True )
)
process.hltIterL3FromL1MuonPixelTracksTrackingRegions = cms.EDProducer( "L1MuonSeededTrackingRegionsEDProducer",
    Propagator = cms.string( "SteppingHelixPropagatorAny" ),
    L1MinPt = cms.double( 0.0 ),
    L1MaxEta = cms.double( 2.5 ),
    L1MinQuality = cms.uint32( 7 ),
    SetMinPtBarrelTo = cms.double( 3.5 ),
    SetMinPtEndcapTo = cms.double( 1.0 ),
    CentralBxOnly = cms.bool( True ),
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "notUsed" ),
      deltaEtas = cms.vdouble( 0.35, 0.35, 0.35, 0.35 ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 1 ),
      maxNRegions = cms.int32( 5 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.0 ),
      mode = cms.string( "BeamSpotSigma" ),
      input = cms.InputTag( "hltL1MuonsPt0" ),
      ptRanges = cms.vdouble( 0.0, 10.0, 15.0, 20.0, 1.0E64 ),
      searchOpt = cms.bool( False ),
      deltaPhis = cms.vdouble( 1.0, 0.8, 0.6, 0.3 ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.2 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True )
    ),
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'SteppingHelixPropagatorAny' )
    )
)
process.hltPixelTracksInRegionL1 = cms.EDProducer( "TrackSelectorByRegion",
    tracks = cms.InputTag( "hltPixelTracks" ),
    regions = cms.InputTag( "hltIterL3FromL1MuonPixelTracksTrackingRegions" ),
    produceTrackCollection = cms.bool( True ),
    produceMask = cms.bool( False )
)
process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracksInRegionL1" ),
    InputVertexCollection = cms.InputTag( "" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracksFiltered = cms.EDProducer( "MuonHLTSeedMVAClassifier",
    src = cms.InputTag( "hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks" ),
    L1Muon = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L2Muon = cms.InputTag( "hltL2MuonCandidates" ),
    rejectAll = cms.bool( False ),
    isFromL1 = cms.bool( True ),
    mvaFileBL1 = cms.FileInPath( "RecoMuon/TrackerSeedGenerator/data/xgb_Run3_Iter0FromL1_PatatrackSeeds_barrel_v3.xml" ),
    mvaFileEL1 = cms.FileInPath( "RecoMuon/TrackerSeedGenerator/data/xgb_Run3_Iter0FromL1_PatatrackSeeds_endcap_v3.xml" ),
    mvaFileBL2 = cms.FileInPath( "RecoMuon/TrackerSeedGenerator/data/xgb_Run3_Iter0_PatatrackSeeds_barrel_v3.xml" ),
    mvaFileEL2 = cms.FileInPath( "RecoMuon/TrackerSeedGenerator/data/xgb_Run3_Iter0_PatatrackSeeds_endcap_v3.xml" ),
    mvaScaleMeanBL1 = cms.vdouble( 3.999966523561405E-4, 1.5340202670472034E-5, 2.6710290157638425E-5, 5.978116313043455E-4, 0.0049135275917734636, 3.4305653488182246E-5, 0.24525118734715307, -0.0024635178849904426 ),
    mvaScaleStdBL1 = cms.vdouble( 7.666933596884494E-4, 0.015685297920984408, 0.026294325262867256, 0.07665283880432934, 0.834879854164998, 0.5397258722194461, 0.2807075832224741, 0.32820882609116625 ),
    mvaScaleMeanEL1 = cms.vdouble( 3.017047347441654E-4, 9.077959353128816E-5, 2.7101609045025927E-4, 0.004557390407735609, -0.020781128525626812, 9.286198943080588E-4, 0.26674085200387376, -0.002971698676536822 ),
    mvaScaleStdEL1 = cms.vdouble( 8.125341035878315E-4, 0.19268436761240013, 0.579019516987623, 0.3222327708969556, 1.0567488273501275, 0.2648980106841699, 0.30889713721141826, 0.3593729790466801 ),
    mvaScaleMeanBL2 = cms.vdouble( 4.332629261558539E-4, 4.689795312031938E-6, 7.644844964566431E-6, 6.580623848546099E-4, 0.00523266117445817, 5.6968993532947E-4, 0.20322471101222087, -0.005575351463397025, 0.18247595248098955, 1.5342398341020196E-4 ),
    mvaScaleStdBL2 = cms.vdouble( 7.444819891335438E-4, 0.0014335177986615237, 0.003503839482232683, 0.07764362324530726, 0.8223406268068466, 0.6392468338330071, 0.2405783807668161, 0.2904161358810494, 0.21887441827342669, 0.27045195352036544 ),
    mvaScaleMeanEL2 = cms.vdouble( 3.120747098810717E-4, 4.5298701434656295E-6, 1.2002076996572005E-5, 0.007900535887258366, -0.022166389143849694, 7.12338927507459E-4, 0.22819667672872926, -0.0039375694144792705, 0.19304371973554835, -1.2936058928324214E-5 ),
    mvaScaleStdEL2 = cms.vdouble( 6.302274350028021E-4, 0.0013138279991871378, 0.004880335178644773, 0.32509543981045624, 0.9449952711981982, 0.279802349646327, 0.3193063648341999, 0.3334815828876066, 0.22528017441813106, 0.2822750719936266 ),
    doSort = cms.bool( False ),
    nSeedsMaxB = cms.int32( 99999 ),
    nSeedsMaxE = cms.int32( 99999 ),
    etaEdge = cms.double( 1.2 ),
    mvaCutB = cms.double( 0.04 ),
    mvaCutE = cms.double( 0.04 ),
    minL1Qual = cms.int32( 7 ),
    baseScore = cms.double( 0.5 )
)
process.hltIter0IterL3FromL1MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( True ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracksFiltered" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "none" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0IterL3FromL1MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0IterL3FromL1MuonCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0IterL3FromL1MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0IterL3FromL1MuonCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    )
)
process.hltIter0IterL3FromL1MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0IterL3FromL1MuonCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter0IterL3FromL1MuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0IterL3FromL1MuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltIter3IterL3FromL1MuonClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltIter0IterL3FromL1MuonTrackSelectionHighPurity" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
process.hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    OnDemand = cms.bool( False ),
    clustersToSkip = cms.InputTag( "hltIter3IterL3FromL1MuonClustersRefRemoval" )
)
process.hltIter3IterL3FromL1MuonPixelLayersAndRegions = cms.EDProducer( "PixelInactiveAreaTrackingRegionsSeedingLayersProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      extraPhi = cms.double( 0.0 ),
      extraEta = cms.double( 0.0 ),
      maxNVertices = cms.int32( 3 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 1.2 ),
      operationMode = cms.string( "VerticesFixed" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.015 ),
      measurementTrackerName = cms.InputTag( "hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      zErrorVertex = cms.double( 0.03 )
    ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    ignoreSingleFPixPanelModules = cms.bool( True ),
    debug = cms.untracked.bool( False ),
    createPlottingFiles = cms.untracked.bool( False ),
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter3IterL3FromL1MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltIter3IterL3FromL1MuonClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltIter3IterL3FromL1MuonTrackingRegions = cms.EDProducer( "L1MuonSeededTrackingRegionsEDProducer",
    Propagator = cms.string( "SteppingHelixPropagatorAny" ),
    L1MinPt = cms.double( 0.0 ),
    L1MaxEta = cms.double( 2.5 ),
    L1MinQuality = cms.uint32( 7 ),
    SetMinPtBarrelTo = cms.double( 3.5 ),
    SetMinPtEndcapTo = cms.double( 1.0 ),
    CentralBxOnly = cms.bool( True ),
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      deltaEtas = cms.vdouble( 0.175, 0.175, 0.175, 0.175 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      maxNVertices = cms.int32( 3 ),
      maxNRegions = cms.int32( 3 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 1.2 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltL1MuonsPt0" ),
      ptRanges = cms.vdouble( 0.0, 10.0, 15.0, 20.0, 1.0E64 ),
      searchOpt = cms.bool( False ),
      deltaPhis = cms.vdouble( 0.5, 0.4, 0.3, 0.15 ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.015 ),
      measurementTrackerName = cms.InputTag( "hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True )
    ),
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'SteppingHelixPropagatorAny' )
    )
)
process.hltIter3IterL3FromL1MuonPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 50000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False )
)
process.hltIter3IterL3FromL1MuonPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltIter3IterL3FromL1MuonPixelLayersAndRegions" ),
    trackingRegions = cms.InputTag( "hltIter3IterL3FromL1MuonTrackingRegions" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "hltIter3IterL3FromL1MuonPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( False ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltIter3IterL3FromL1MuonPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltIter3IterL3FromL1MuonPixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltIter3IterL3FromL1MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter3IterL3FromL1MuonPixelSeeds" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter3IterL3FromL1MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter3IterL3FromL1MuonCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter3IterL3FromL1Muon" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEvent" )
)
process.hltIter3IterL3FromL1MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter3IterL3FromL1MuonCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltIter3IterL3FromL1MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter3IterL3FromL1MuonCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter3IterL3FromL1MuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter3IterL3FromL1MuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltIter03IterL3FromL1MuonMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIter0IterL3FromL1MuonTrackSelectionHighPurity','hltIter3IterL3FromL1MuonTrackSelectionHighPurity' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0IterL3FromL1MuonTrackSelectionHighPurity','hltIter3IterL3FromL1MuonTrackSelectionHighPurity' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltIterL3MuonMerged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3OIMuonTrackSelectionHighPurity','hltIter0IterL3MuonTrackSelectionHighPurity' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3OIMuonTrackSelectionHighPurity','hltIter0IterL3MuonTrackSelectionHighPurity' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltIterL3MuonAndMuonFromL1Merged = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3MuonMerged','hltIter03IterL3FromL1MuonMerged' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3MuonMerged','hltIter03IterL3FromL1MuonMerged' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltIterL3GlbMuon = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( False ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( False ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.2 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "Notused" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        GEMRecHitLabel = cms.InputTag( "hltGemRecHits" ),
        HitThreshold = cms.int32( 1 ),
        Chi2CutGEM = cms.double( 1.0 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltIterL3MuonAndMuonFromL1Merged" )
    )
)
process.hltIterL3MuonsNoID = cms.EDProducer( "MuonIdProducer",
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( False ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
      useGEM = cms.bool( True ),
      GEMSegmentCollectionLabel = cms.InputTag( "hltGemSegments" ),
      CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( False ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( False ),
      HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( "Notused" ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "Notused" )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
        CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( "Notused" ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "Notused" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter03IterL3FromL1MuonMerged" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "Notused" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
        CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( "Notused" ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "Notused" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    trackDepositName = cms.string( "tracker" ),
    ecalDepositName = cms.string( "ecal" ),
    hcalDepositName = cms.string( "hcal" ),
    hoDepositName = cms.string( "ho" ),
    jetDepositName = cms.string( "jets" ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    ShowerDigiFillerParameters = cms.PSet( 
      cscDigiCollectionLabel = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
      digiMaxDistanceX = cms.double( 25.0 ),
      dtDigiCollectionLabel = cms.InputTag( "hltMuonDTDigis" )
    ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    fillEnergy = cms.bool( False ),
    storeCrossedHcalRecHits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsEta = cms.double( 3.0 ),
    minPt = cms.double( 2.0 ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links',
      'outer tracks' ),
    addExtraSoftMuons = cms.bool( False ),
    fillGlobalTrackRefits = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    inputCollectionLabels = cms.VInputTag( 'hltIterL3MuonAndMuonFromL1Merged','hltIterL3GlbMuon','hltL2Muons:UpdatedAtVtx' ),
    fillCaloCompatibility = cms.bool( False ),
    maxAbsPullY = cms.double( 9999.0 ),
    maxAbsDy = cms.double( 9999.0 ),
    minP = cms.double( 0.0 ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDx = cms.double( 3.0 ),
    fillIsolation = cms.bool( False ),
    writeIsoDeposits = cms.bool( False ),
    minNumberOfMatches = cms.int32( 1 ),
    fillMatching = cms.bool( True ),
    fillShowerDigis = cms.bool( False ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    fillGlobalTrackQuality = cms.bool( False ),
    globalTrackQualityInputTag = cms.InputTag( "" ),
    selectHighPurity = cms.bool( False ),
    pvInputTag = cms.InputTag( "" ),
    fillTrackerKink = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    runArbitrationCleaner = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    arbitrateTrackerMuons = cms.bool( True )
)
process.hltIterL3Muons = cms.EDProducer( "MuonIDFilterProducerForHLT",
    inputMuonCollection = cms.InputTag( "hltIterL3MuonsNoID" ),
    applyTriggerIdLoose = cms.bool( True ),
    typeMuon = cms.uint32( 0 ),
    allowedTypeMask = cms.uint32( 0 ),
    requiredTypeMask = cms.uint32( 0 ),
    minNMuonHits = cms.int32( 0 ),
    minNMuonStations = cms.int32( 0 ),
    minNTrkLayers = cms.int32( 0 ),
    minTrkHits = cms.int32( 0 ),
    minPixLayer = cms.int32( 0 ),
    minPixHits = cms.int32( 0 ),
    minPt = cms.double( 0.0 ),
    maxNormalizedChi2 = cms.double( 9999.0 )
)
process.hltL3MuonsIterL3Links = cms.EDProducer( "MuonLinksProducer",
    inputCollection = cms.InputTag( "hltIterL3Muons" )
)
process.hltIterL3MuonTracks = cms.EDProducer( "HLTMuonTrackSelector",
    track = cms.InputTag( "hltIterL3MuonAndMuonFromL1Merged" ),
    muon = cms.InputTag( "hltIterL3Muons" ),
    originalMVAVals = cms.InputTag( "none" ),
    copyMVA = cms.bool( False ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltIterL3MuonCandidates = cms.EDProducer( "L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag( "hltIterL3Muons" ),
    DisplacedReconstruction = cms.bool( False )
)
process.hltIter0PFLowPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracks" ),
    InputVertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0PFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0PFLowPixelSeedsFromPixelTracks" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0PFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0PFlowCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0PFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.6, 0.6 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.8, 0.8 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.75, 0.75 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.5, 0.5 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltIter0PFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0PFlowCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0PFlowTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltDoubletRecoveryClustersRefRemoval = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltIter0PFlowTrackSelectionHighPurity" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
process.hltDoubletRecoveryMaskedMeasurementTrackerEvent = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    OnDemand = cms.bool( False ),
    clustersToSkip = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" )
)
process.hltDoubletRecoveryPixelLayersAndRegions = cms.EDProducer( "PixelInactiveAreaTrackingRegionsSeedingLayersProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      extraPhi = cms.double( 0.0 ),
      extraEta = cms.double( 0.0 ),
      maxNVertices = cms.int32( 3 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 1.2 ),
      operationMode = cms.string( "VerticesFixed" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 0.015 ),
      measurementTrackerName = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
      precise = cms.bool( True ),
      zErrorVertex = cms.double( 0.03 )
    ),
    inactivePixelDetectorLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag( 'hltSiPixelDigiErrors' ),
    ignoreSingleFPixPanelModules = cms.bool( True ),
    debug = cms.untracked.bool( False ),
    createPlottingFiles = cms.untracked.bool( False ),
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      skipClusters = cms.InputTag( "hltDoubletRecoveryClustersRefRemoval" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltDoubletRecoveryPFlowPixelClusterCheck = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 50000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False )
)
process.hltDoubletRecoveryPFlowPixelHitDoublets = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "" ),
    trackingRegions = cms.InputTag( "" ),
    trackingRegionsSeedingLayers = cms.InputTag( "hltDoubletRecoveryPixelLayersAndRegions" ),
    clusterCheck = cms.InputTag( "hltDoubletRecoveryPFlowPixelClusterCheck" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( False ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltDoubletRecoveryPFlowPixelSeeds = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltDoubletRecoveryPFlowPixelHitDoublets" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltDoubletRecoveryPFlowCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltDoubletRecoveryPFlowPixelSeeds" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter2GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltDoubletRecoveryPFlowCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltDoubletRecoveryPFlowCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltDoubletRecovery" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDoubletRecoveryMaskedMeasurementTrackerEvent" )
)
process.hltDoubletRecoveryPFlowTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.3, 0.3 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.4, 0.4 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.35, 0.35 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltDoubletRecoveryPFlowTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltDoubletRecoveryPFlowCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltDoubletRecoveryPFlowTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltMergedTracks = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0PFlowTrackSelectionHighPurity','hltDoubletRecoveryPFlowTrackSelectionHighPurity' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltPFMuonMerging = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3MuonTracks','hltMergedTracks' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3MuonTracks','hltMergedTracks' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltMuonLinks = cms.EDProducer( "MuonLinksProducerForHLT",
    InclusiveTrackerTrackCollection = cms.InputTag( "hltPFMuonMerging" ),
    LinkCollection = cms.InputTag( "hltL3MuonsIterL3Links" ),
    ptMin = cms.double( 2.5 ),
    pMin = cms.double( 2.5 ),
    shareHitFraction = cms.double( 0.8 )
)
process.hltMuons = cms.EDProducer( "MuonIdProducer",
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( True ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( True ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( True ),
      HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltPFMuonMerging" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "" ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "hltAK4CaloJetsPFEt5" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    trackDepositName = cms.string( "tracker" ),
    ecalDepositName = cms.string( "ecal" ),
    hcalDepositName = cms.string( "hcal" ),
    hoDepositName = cms.string( "ho" ),
    jetDepositName = cms.string( "jets" ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    ShowerDigiFillerParameters = cms.PSet( 
      cscDigiCollectionLabel = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
      dtDigiCollectionLabel = cms.InputTag( "hltMuonDTDigis" ),
      digiMaxDistanceX = cms.double( 25.0 )
    ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    fillEnergy = cms.bool( True ),
    storeCrossedHcalRecHits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsEta = cms.double( 3.0 ),
    minPt = cms.double( 10.0 ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links',
      'outer tracks' ),
    addExtraSoftMuons = cms.bool( False ),
    fillGlobalTrackRefits = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    inputCollectionLabels = cms.VInputTag( 'hltPFMuonMerging','hltMuonLinks','hltL2Muons' ),
    fillCaloCompatibility = cms.bool( True ),
    maxAbsPullY = cms.double( 9999.0 ),
    maxAbsDy = cms.double( 9999.0 ),
    minP = cms.double( 10.0 ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDx = cms.double( 3.0 ),
    fillIsolation = cms.bool( True ),
    writeIsoDeposits = cms.bool( False ),
    minNumberOfMatches = cms.int32( 1 ),
    fillMatching = cms.bool( True ),
    fillShowerDigis = cms.bool( False ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    fillGlobalTrackQuality = cms.bool( False ),
    globalTrackQualityInputTag = cms.InputTag( "" ),
    selectHighPurity = cms.bool( False ),
    pvInputTag = cms.InputTag( "" ),
    fillTrackerKink = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    runArbitrationCleaner = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    arbitrateTrackerMuons = cms.bool( False )
)
process.hltEcalPreshowerDigis = cms.EDProducer( "ESRawToDigi",
    sourceTag = cms.InputTag( "rawDataCollector" ),
    debugMode = cms.untracked.bool( False ),
    InstanceES = cms.string( "" ),
    LookupTable = cms.FileInPath( "EventFilter/ESDigiToRaw/data/ES_lookup_table.dat" ),
    ESdigiCollection = cms.string( "" )
)
process.hltEcalPreshowerRecHit = cms.EDProducer( "ESRecHitProducer",
    ESrechitCollection = cms.string( "EcalRecHitsES" ),
    ESdigiCollection = cms.InputTag( "hltEcalPreshowerDigis" ),
    algo = cms.string( "ESRecHitWorker" ),
    ESRecoAlgo = cms.int32( 0 )
)
process.hltParticleFlowRecHitECALUnseeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    )
)
process.hltParticleFlowRecHitHF = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      hcalEnums = cms.vint32( 4 ),
      name = cms.string( "PFRecHitHCALDenseIdNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  thresh_HF = cms.double( 0.4 ),
        LongFibre_Fraction = cms.double( 0.1 ),
        src = cms.InputTag( "hltHfreco" ),
        EMDepthCorrection = cms.double( 22.0 ),
        ShortFibre_Fraction = cms.double( 0.01 ),
        HADDepthCorrection = cms.double( 25.0 ),
        HFCalib29 = cms.double( 1.07 ),
        LongFibre_Cut = cms.double( 120.0 ),
        name = cms.string( "PFHFRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  flags = cms.vstring( 'Standard',
  'HFLong',
  'HFShort' ),
            cleaningThresholds = cms.vdouble( 0.0, 120.0, 60.0 ),
            name = cms.string( "PFRecHitQTestHCALChannel" ),
            maxSeverities = cms.vint32( 11, 9, 9 )
          ),
          cms.PSet(  usePFThresholdsFromDB = cms.bool( False ),
            name = cms.string( "PFRecHitQTestHCALThresholdVsDepth" ),
            cuts = cms.VPSet( 
              cms.PSet(  threshold = cms.vdouble( 1.2, 1.8 ),
                depth = cms.vint32( 1, 2 ),
                detectorEnum = cms.int32( 4 )
              )
            )
          )
        ),
        ShortFibre_Cut = cms.double( 60.0 )
      )
    )
)
process.hltParticleFlowRecHitPSUnseeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltEcalPreshowerRecHit','EcalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    )
)
process.hltParticleFlowClusterECALUncorrectedUnseeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALUnseeded" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterPSUnseeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSUnseeded" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALUnseeded = cms.EDProducer( "CorrectedECALPFClusterProducer",
    minimumPSEnergy = cms.double( 0.0 ),
    skipPS = cms.bool( False ),
    inputPS = cms.InputTag( "hltParticleFlowClusterPSUnseeded" ),
    energyCorrector = cms.PSet( 
      recHitsEELabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      recHitsEBLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      applyCrackCorrections = cms.bool( False ),
      ebSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      applyMVACorrections = cms.bool( True ),
      eeSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      maxPtForMVAEvaluation = cms.double( 300.0 ),
      srfAwareCorrection = cms.bool( True )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedUnseeded" )
)
process.hltHbheRecHitSoA = cms.EDProducer( "HCALRecHitSoAProducer@alpaka",
    src = cms.InputTag( "hltHbhereco" ),
    synchronise = cms.untracked.bool( False ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltParticleFlowRecHitHBHESoA = cms.EDProducer( "PFRecHitSoAProducerHCAL@alpaka",
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( "hltHbheRecHitSoA" ),
        params = cms.ESInputTag( "hltESPPFRecHitHCALParams","" )
      )
    ),
    topology = cms.ESInputTag( "hltESPPFRecHitHCALTopology","" ),
    synchronise = cms.untracked.bool( False ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltParticleFlowRecHitHBHE = cms.EDProducer( "LegacyPFRecHitProducer",
    src = cms.InputTag( "hltParticleFlowRecHitHBHESoA" )
)
process.hltParticleFlowClusterHBHESoA = cms.EDProducer( "PFClusterSoAProducer@alpaka",
    pfRecHits = cms.InputTag( "hltParticleFlowRecHitHBHESoA" ),
    pfClusterParams = cms.ESInputTag( "hltESPPFClusterParams","" ),
    topology = cms.ESInputTag( "hltESPPFRecHitHCALTopology","" ),
    synchronise = cms.bool( False ),
    pfRecHitFractionAllocation = cms.int32( 250 ),
    alpaka = cms.untracked.PSet(  backend = cms.untracked.string( "" ) )
)
process.hltParticleFlowClusterHBHE = cms.EDProducer( "LegacyPFClusterProducer",
    src = cms.InputTag( "hltParticleFlowClusterHBHESoA" ),
    PFRecHitsLabelIn = cms.InputTag( "hltParticleFlowRecHitHBHESoA" ),
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitHBHE" ),
    usePFThresholdsFromDB = cms.bool( True ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 5 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominatorByDetector = cms.VPSet( 
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
            depths = cms.vint32( 1, 2, 3, 4 ),
            detector = cms.string( "HCAL_BARREL1" )
          ),
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
            depths = cms.vint32( 1, 2, 3, 4, 5, 6, 7 ),
            detector = cms.string( "HCAL_ENDCAP" )
          )
        ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 5 ),
      minChi2Prob = cms.double( 0.0 ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominatorByDetector = cms.VPSet( 
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
            depths = cms.vint32( 1, 2, 3, 4 ),
            detector = cms.string( "HCAL_BARREL1" )
          ),
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
            depths = cms.vint32( 1, 2, 3, 4, 5, 6, 7 ),
            detector = cms.string( "HCAL_ENDCAP" )
          )
        ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
          depths = cms.vint32( 1, 2, 3, 4 ),
          detector = cms.string( "HCAL_BARREL1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
          depths = cms.vint32( 1, 2, 3, 4, 5, 6, 7 ),
          detector = cms.string( "HCAL_ENDCAP" )
        )
      ),
      maxNSigmaTime = cms.double( 10.0 ),
      showerSigma = cms.double( 10.0 ),
      timeSigmaEE = cms.double( 10.0 ),
      clusterTimeResFromSeed = cms.bool( False ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True ),
      timeResolutionCalcBarrel = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeResolutionCalcEndcap = cms.PSet( 
        corrTermLowE = cms.double( 0.0 ),
        threshLowE = cms.double( 6.0 ),
        noiseTerm = cms.double( 21.86 ),
        constantTermLowE = cms.double( 4.24 ),
        noiseTermLowE = cms.double( 8.0 ),
        threshHighE = cms.double( 15.0 ),
        constantTerm = cms.double( 2.82 )
      ),
      timeSigmaEB = cms.double( 10.0 )
    )
)
process.hltParticleFlowClusterHCAL = cms.EDProducer( "PFMultiDepthClusterProducer",
    clustersSource = cms.InputTag( "hltParticleFlowClusterHBHE" ),
    usePFThresholdsFromDB = cms.bool( True ),
    pfClusterBuilder = cms.PSet( 
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominatorByDetector = cms.VPSet( 
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
            depths = cms.vint32( 1, 2, 3, 4 ),
            detector = cms.string( "HCAL_BARREL1" )
          ),
          cms.PSet(  logWeightDenominator = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
            depths = cms.vint32( 1, 2, 3, 4, 5, 6, 7 ),
            detector = cms.string( "HCAL_ENDCAP" )
          )
        ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      algoName = cms.string( "PFMultiDepthClusterizer" ),
      nSigmaPhi = cms.double( 2.0 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      nSigmaEta = cms.double( 2.0 )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterHF = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitHF" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.4 ),
          detector = cms.string( "HF_EM" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.4 ),
          detector = cms.string( "HF_HAD" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 0 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
      ),
      algoName = cms.string( "Basic2DClusterForEachSeed" )
    ),
    pfClusterBuilder = cms.PSet(  ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltLightPFTracks = cms.EDProducer( "LightPFTrackProducer",
    TrackQuality = cms.string( "none" ),
    UseQuality = cms.bool( False ),
    TkColList = cms.VInputTag( 'hltPFMuonMerging' )
)
process.hltParticleFlowBlock = cms.EDProducer( "PFBlockProducer",
    verbose = cms.untracked.bool( False ),
    debug = cms.untracked.bool( False ),
    elementImporters = cms.VPSet( 
      cms.PSet(  muonSrc = cms.InputTag( "hltMuons" ),
        cleanBadConvertedBrems = cms.bool( False ),
        muonMaxDPtOPt = cms.double( 1.0 ),
        source = cms.InputTag( "hltLightPFTracks" ),
        NHitCuts_byTrackAlgo = cms.vuint32( 3, 3, 3, 3, 3, 3 ),
        vetoEndcap = cms.bool( False ),
        useIterativeTracking = cms.bool( False ),
        importerName = cms.string( "GeneralTracksImporter" ),
        DPtOverPtCuts_byTrackAlgo = cms.vdouble( 0.5, 0.5, 0.5, 0.5, 0.5, 0.5 ),
        trackQuality = cms.string( "highPurity" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
        importerName = cms.string( "ECALClusterImporter" ),
        BCtoPFCMap = cms.InputTag( "" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterHCAL" ),
        importerName = cms.string( "GenericClusterImporter" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterHF" ),
        importerName = cms.string( "GenericClusterImporter" )
      )
    ),
    linkDefinitions = cms.VPSet( 
      cms.PSet(  linkType = cms.string( "TRACK:ECAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "TrackAndECALLinker" )
      ),
      cms.PSet(  trajectoryLayerExit = cms.string( "HCALExit" ),
        trajectoryLayerEntrance = cms.string( "HCALEntrance" ),
        nMaxHcalLinksPerTrack = cms.int32( 1 ),
        linkType = cms.string( "TRACK:HCAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "TrackAndHCALLinker" )
      ),
      cms.PSet(  minAbsEtaEcal = cms.double( 2.5 ),
        linkType = cms.string( "ECAL:HCAL" ),
        useKDTree = cms.bool( False ),
        linkerName = cms.string( "ECALAndHCALLinker" )
      ),
      cms.PSet(  linkType = cms.string( "HFEM:HFHAD" ),
        useKDTree = cms.bool( False ),
        linkerName = cms.string( "HFEMAndHFHADLinker" )
      )
    )
)
process.hltParticleFlow = cms.EDProducer( "PFProducer",
    verbose = cms.untracked.bool( False ),
    debug = cms.untracked.bool( False ),
    blocks = cms.InputTag( "hltParticleFlowBlock" ),
    muons = cms.InputTag( "hltMuons" ),
    postMuonCleaning = cms.bool( True ),
    vetoEndcap = cms.bool( False ),
    vertexCollection = cms.InputTag( "hltPixelVertices" ),
    useVerticesForNeutral = cms.bool( True ),
    useHO = cms.bool( False ),
    PFEGammaCandidates = cms.InputTag( "particleFlowEGamma" ),
    GedElectronValueMap = cms.InputTag( "gedGsfElectronsTmp" ),
    GedPhotonValueMap = cms.InputTag( 'tmpGedPhotons','valMapPFEgammaCandToPhoton' ),
    useEGammaElectrons = cms.bool( False ),
    egammaElectrons = cms.InputTag( "" ),
    useEGammaFilters = cms.bool( False ),
    useProtectionsForJetMET = cms.bool( True ),
    PFEGammaFiltersParameters = cms.PSet( 
      electron_missinghits = cms.uint32( 1 ),
      electron_protectionsForJetMET = cms.PSet( 
        maxEeleOverPoutRes = cms.double( 0.5 ),
        maxEleHcalEOverEcalE = cms.double( 0.1 ),
        maxEcalEOverPRes = cms.double( 0.2 ),
        maxHcalEOverP = cms.double( 1.0 ),
        maxE = cms.double( 50.0 ),
        maxTrackPOverEele = cms.double( 1.0 ),
        maxDPhiIN = cms.double( 0.1 ),
        maxEcalEOverP_2 = cms.double( 0.2 ),
        maxEcalEOverP_1 = cms.double( 0.5 ),
        maxEeleOverPout = cms.double( 0.2 ),
        maxHcalEOverEcalE = cms.double( 0.1 ),
        maxHcalE = cms.double( 10.0 ),
        maxNtracks = cms.double( 3.0 )
      ),
      photon_MinEt = cms.double( 10.0 ),
      electron_ecalDrivenHademPreselCut = cms.double( 0.15 ),
      electron_protectionsForBadHcal = cms.PSet( 
        dEta = cms.vdouble( 0.0064, 0.01264 ),
        dPhi = cms.vdouble( 0.0547, 0.0394 ),
        enableProtections = cms.bool( False ),
        full5x5_sigmaIetaIeta = cms.vdouble( 0.0106, 0.0387 ),
        eInvPInv = cms.vdouble( 0.184, 0.0721 )
      ),
      photon_protectionsForBadHcal = cms.PSet( 
        enableProtections = cms.bool( False ),
        solidConeTrkIsoOffset = cms.double( 10.0 ),
        solidConeTrkIsoSlope = cms.double( 0.3 )
      ),
      electron_iso_mva_barrel = cms.double( -0.1875 ),
      electron_iso_mva_endcap = cms.double( -0.1075 ),
      photon_SigmaiEtaiEta_endcap = cms.double( 0.034 ),
      photon_SigmaiEtaiEta_barrel = cms.double( 0.0125 ),
      photon_HoE = cms.double( 0.05 ),
      electron_iso_combIso_endcap = cms.double( 10.0 ),
      electron_iso_pt = cms.double( 10.0 ),
      photon_protectionsForJetMET = cms.PSet( 
        sumPtTrackIsoSlope = cms.double( 0.001 ),
        sumPtTrackIso = cms.double( 4.0 )
      ),
      electron_iso_combIso_barrel = cms.double( 10.0 ),
      electron_noniso_mvaCut = cms.double( -0.1 ),
      photon_combIso = cms.double( 10.0 ),
      electron_maxElePtForOnlyMVAPresel = cms.double( 50.0 )
    ),
    muon_HCAL = cms.vdouble( 3.0, 3.0 ),
    muon_ECAL = cms.vdouble( 0.5, 0.5 ),
    muon_HO = cms.vdouble( 0.9, 0.9 ),
    PFMuonAlgoParameters = cms.PSet(  ),
    rejectTracks_Bad = cms.bool( False ),
    rejectTracks_Step45 = cms.bool( False ),
    usePFNuclearInteractions = cms.bool( False ),
    usePFConversions = cms.bool( False ),
    usePFDecays = cms.bool( False ),
    dptRel_DispVtx = cms.double( 10.0 ),
    iCfgCandConnector = cms.PSet( 
      nuclCalibFactors = cms.vdouble( 0.8, 0.15, 0.5, 0.5, 0.05 ),
      bCorrect = cms.bool( False ),
      bCalibPrimary = cms.bool( False )
    ),
    nsigma_TRACK = cms.double( 1.0 ),
    pt_Error = cms.double( 1.0 ),
    factors_45 = cms.vdouble( 10.0, 100.0 ),
    goodTrackDeadHcal_ptErrRel = cms.double( 0.2 ),
    goodTrackDeadHcal_chi2n = cms.double( 5.0 ),
    goodTrackDeadHcal_layers = cms.uint32( 4 ),
    goodTrackDeadHcal_validFr = cms.double( 0.5 ),
    goodTrackDeadHcal_dxy = cms.double( 0.5 ),
    goodPixelTrackDeadHcal_minEta = cms.double( 2.3 ),
    goodPixelTrackDeadHcal_maxPt = cms.double( 50.0 ),
    goodPixelTrackDeadHcal_ptErrRel = cms.double( 1.0 ),
    goodPixelTrackDeadHcal_chi2n = cms.double( 2.0 ),
    goodPixelTrackDeadHcal_maxLost3Hit = cms.int32( 0 ),
    goodPixelTrackDeadHcal_maxLost4Hit = cms.int32( 1 ),
    goodPixelTrackDeadHcal_dxy = cms.double( 0.02 ),
    goodPixelTrackDeadHcal_dz = cms.double( 0.05 ),
    pf_nsigma_ECAL = cms.double( 0.0 ),
    pf_nsigma_HCAL = cms.double( 1.0 ),
    pf_nsigma_HFEM = cms.double( 1.0 ),
    pf_nsigma_HFHAD = cms.double( 1.0 ),
    useCalibrationsFromDB = cms.bool( True ),
    calibrationsLabel = cms.string( "HLT" ),
    postHFCleaning = cms.bool( False ),
    PFHFCleaningParameters = cms.PSet( 
      minHFCleaningPt = cms.double( 5.0 ),
      minDeltaMet = cms.double( 0.4 ),
      maxSignificance = cms.double( 2.5 ),
      minSignificance = cms.double( 2.5 ),
      minSignificanceReduction = cms.double( 1.4 ),
      maxDeltaPhiPt = cms.double( 7.0 )
    ),
    cleanedHF = cms.VInputTag( 'hltParticleFlowRecHitHF:Cleaned','hltParticleFlowClusterHF:Cleaned' ),
    calibHF_use = cms.bool( False ),
    calibHF_eta_step = cms.vdouble( 0.0, 2.9, 3.0, 3.2, 4.2, 4.4, 4.6, 4.8, 5.2, 5.4 ),
    calibHF_a_EMonly = cms.vdouble( 0.96945, 0.96701, 0.76309, 0.82268, 0.87583, 0.89718, 0.98674, 1.4681, 1.458, 1.458 ),
    calibHF_a_EMHAD = cms.vdouble( 1.42215, 1.00496, 0.68961, 0.81656, 0.98504, 0.98504, 1.00802, 1.0593, 1.4576, 1.4576 ),
    calibHF_b_HADonly = cms.vdouble( 1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 0.94348, 0.9437, 1.0034, 1.0444, 1.0444 ),
    calibHF_b_EMHAD = cms.vdouble( 1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 0.94348, 0.9437, 1.0034, 1.0444, 1.0444 ),
    resolHF_square = cms.vdouble( 7.834401, 0.012996, 0.0 )
)
process.hltAK4PFJets = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 0 ),
    src = cms.InputTag( "hltParticleFlow" ),
    srcPVs = cms.InputTag( "hltPixelVertices" ),
    jetType = cms.string( "PFJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.4 ),
    inputEtMin = cms.double( 0.0 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 0.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( True ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK4PFJetsLooseID = cms.EDProducer( "HLTPFJetIDProducer",
    minPt = cms.double( 20.0 ),
    maxEta = cms.double( 1.0E99 ),
    CHF = cms.double( 0.0 ),
    NHF = cms.double( 0.99 ),
    CEF = cms.double( 0.99 ),
    NEF = cms.double( 0.99 ),
    maxCF = cms.double( 99.0 ),
    NCH = cms.int32( 0 ),
    NTOT = cms.int32( 1 ),
    jetsInput = cms.InputTag( "hltAK4PFJets" )
)
process.hltAK4PFJetsTightID = cms.EDProducer( "HLTPFJetIDProducer",
    minPt = cms.double( 20.0 ),
    maxEta = cms.double( 1.0E99 ),
    CHF = cms.double( 0.0 ),
    NHF = cms.double( 0.9 ),
    CEF = cms.double( 0.99 ),
    NEF = cms.double( 0.99 ),
    maxCF = cms.double( 99.0 ),
    NCH = cms.int32( 0 ),
    NTOT = cms.int32( 1 ),
    jetsInput = cms.InputTag( "hltAK4PFJets" )
)
process.hltFixedGridRhoFastjetAll = cms.EDProducer( "FixedGridRhoProducerFastjet",
    pfCandidatesTag = cms.InputTag( "hltParticleFlow" ),
    maxRapidity = cms.double( 5.0 ),
    gridSpacing = cms.double( 0.55 )
)
process.hltAK4PFFastJetCorrector = cms.EDProducer( "L1FastjetCorrectorProducer",
    level = cms.string( "L1FastJet" ),
    algorithm = cms.string( "AK4PFHLT" ),
    srcRho = cms.InputTag( "hltFixedGridRhoFastjetAll" )
)
process.hltAK4PFRelativeCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L2Relative" ),
    algorithm = cms.string( "AK4PFHLT" )
)
process.hltAK4PFAbsoluteCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L3Absolute" ),
    algorithm = cms.string( "AK4PFHLT" )
)
process.hltAK4PFResidualCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L2L3Residual" ),
    algorithm = cms.string( "AK4PFHLT" )
)
process.hltAK4PFCorrector = cms.EDProducer( "ChainedJetCorrectorProducer",
    correctors = cms.VInputTag( 'hltAK4PFFastJetCorrector','hltAK4PFRelativeCorrector','hltAK4PFAbsoluteCorrector','hltAK4PFResidualCorrector' )
)
process.hltAK4PFJetsCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK4PFJets" ),
    correctors = cms.VInputTag( 'hltAK4PFCorrector' )
)
process.hltAK4PFJetsLooseIDCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK4PFJetsLooseID" ),
    correctors = cms.VInputTag( 'hltAK4PFCorrector' )
)
process.hltAK4PFJetsTightIDCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK4PFJetsTightID" ),
    correctors = cms.VInputTag( 'hltAK4PFCorrector' )
)
process.hltFixedGridRhoFastjetAllCalo = cms.EDProducer( "FixedGridRhoProducerFastjet",
    pfCandidatesTag = cms.InputTag( "hltTowerMakerForAll" ),
    maxRapidity = cms.double( 5.0 ),
    gridSpacing = cms.double( 0.55 )
)
process.hltPFMETProducer = cms.EDProducer( "PFMETProducer",
    src = cms.InputTag( "hltParticleFlow" ),
    globalThreshold = cms.double( 0.0 ),
    alias = cms.string( "hltPFMet" ),
    calculateSignificance = cms.bool( False ),
    parameters = cms.PSet(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" )
)
process.hltFixedGridRhoFastjetECALMFForMuons = cms.EDProducer( "FixedGridRhoProducerFastjetFromRecHit",
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    ebRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    eeRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    skipHCAL = cms.bool( True ),
    skipECAL = cms.bool( False ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    maxRapidity = cms.double( 2.5 ),
    gridSpacing = cms.double( 0.55 ),
    usePFThresholdsFromDB = cms.bool( True )
)
process.hltFixedGridRhoFastjetHCAL = cms.EDProducer( "FixedGridRhoProducerFastjetFromRecHit",
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    ebRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    eeRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    skipHCAL = cms.bool( False ),
    skipECAL = cms.bool( True ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    maxRapidity = cms.double( 2.5 ),
    gridSpacing = cms.double( 0.55 ),
    usePFThresholdsFromDB = cms.bool( True )
)
process.hltRecHitInRegionForMuonsMF = cms.EDProducer( "MuonHLTRechitInRegionsProducer",
    productLabels = cms.vstring( 'EcalRegionalRecHitsEB',
      'EcalRegionalRecHitsEE' ),
    ecalhitLabels = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    l1TagIsolated = cms.InputTag( "hltIterL3MuonCandidates" ),
    l1TagNonIsolated = cms.InputTag( "NotUsed" ),
    useUncalib = cms.bool( False ),
    doIsolated = cms.bool( True ),
    l1LowerThr = cms.double( 0.0 ),
    l1UpperThr = cms.double( 999.0 ),
    l1LowerThrIgnoreIsolation = cms.double( 100.0 ),
    regionEtaMargin = cms.double( 0.4 ),
    regionPhiMargin = cms.double( 0.4 )
)
process.hltRecHitInRegionForMuonsES = cms.EDProducer( "MuonHLTRechitInRegionsProducer",
    productLabels = cms.vstring( 'EcalRegionalRecHitsES' ),
    ecalhitLabels = cms.VInputTag( 'hltEcalPreshowerRecHit:EcalRecHitsES' ),
    l1TagIsolated = cms.InputTag( "hltIterL3MuonCandidates" ),
    l1TagNonIsolated = cms.InputTag( "NotUsed" ),
    useUncalib = cms.bool( False ),
    doIsolated = cms.bool( True ),
    l1LowerThr = cms.double( 0.0 ),
    l1UpperThr = cms.double( 999.0 ),
    l1LowerThrIgnoreIsolation = cms.double( 100.0 ),
    regionEtaMargin = cms.double( 0.4 ),
    regionPhiMargin = cms.double( 0.4 )
)
process.hltParticleFlowRecHitECALForMuonsMF = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRecHitInRegionForMuonsMF','EcalRegionalRecHitsEB' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltRecHitInRegionForMuonsMF','EcalRegionalRecHitsEE' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    )
)
process.hltParticleFlowRecHitPSForMuons = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRecHitInRegionForMuonsES','EcalRegionalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    )
)
process.hltParticleFlowClusterECALUncorrectedForMuonsMF = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALForMuonsMF" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterPSForMuons = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSForMuons" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALForMuonsMF = cms.EDProducer( "CorrectedECALPFClusterProducer",
    minimumPSEnergy = cms.double( 0.0 ),
    skipPS = cms.bool( False ),
    inputPS = cms.InputTag( "hltParticleFlowClusterPSForMuons" ),
    energyCorrector = cms.PSet( 
      recHitsEELabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      recHitsEBLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      applyCrackCorrections = cms.bool( False ),
      ebSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      applyMVACorrections = cms.bool( True ),
      eeSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      maxPtForMVAEvaluation = cms.double( 300.0 ),
      srfAwareCorrection = cms.bool( True )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedForMuonsMF" )
)
process.hltMuonEcalMFPFClusterIsoForMuons = cms.EDProducer( "MuonHLTEcalPFClusterIsolationProducer",
    recoCandidateProducer = cms.InputTag( "hltIterL3MuonCandidates" ),
    pfClusterProducer = cms.InputTag( "hltParticleFlowClusterECALForMuonsMF" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetECALMFForMuons" ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.05 ),
    drVetoEndcap = cms.double( 0.05 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    effectiveAreas = cms.vdouble( 0.35, 0.193 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltMuonHcalRegPFClusterIsoForMuons = cms.EDProducer( "MuonHLTHcalPFClusterIsolationProducer",
    recoCandidateProducer = cms.InputTag( "hltIterL3MuonCandidates" ),
    pfClusterProducerHCAL = cms.InputTag( "hltParticleFlowClusterHCAL" ),
    useHF = cms.bool( False ),
    pfClusterProducerHFEM = cms.InputTag( "" ),
    pfClusterProducerHFHAD = cms.InputTag( "" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetHCAL" ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.1 ),
    drVetoEndcap = cms.double( 0.1 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    useEt = cms.bool( True ),
    effectiveAreas = cms.vdouble( 0.227, 0.372 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltPixelTracksTrackingRegionsForSeedsL3Muon = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltPixelVertices" ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 4 ),
      maxNRegions = cms.int32( 40 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.3 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltIterL3MuonCandidates" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.1 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.3 ),
      deltaPhi = cms.double( 0.3 )
    )
)
process.hltPixelTracksInRegionIter0L3Muon = cms.EDProducer( "TrackSelectorByRegion",
    tracks = cms.InputTag( "hltPixelTracks" ),
    regions = cms.InputTag( "hltPixelTracksTrackingRegionsForSeedsL3Muon" ),
    produceTrackCollection = cms.bool( True ),
    produceMask = cms.bool( False )
)
process.hltIter0L3MuonPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracksInRegionIter0L3Muon" ),
    InputVertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0L3MuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0L3MuonPixelSeedsFromPixelTracks" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0L3MuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0L3MuonCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0L3MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0L3MuonCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.6, 0.6 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.8, 0.8 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.75, 0.75 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.5, 0.5 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltIter0L3MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0L3MuonCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter0L3MuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0L3MuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltMuonTkRelIsolationCut0p08Map = cms.EDProducer( "L3MuonCombinedRelativeIsolationProducer",
    UseRhoCorrectedCaloDeposits = cms.bool( False ),
    UseCaloIso = cms.bool( False ),
    CaloDepositsLabel = cms.InputTag( "notUsed" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonCandidates" ),
    OutputMuIsoDeposits = cms.bool( True ),
    TrackPt_Min = cms.double( -1.0 ),
    printDebug = cms.bool( False ),
    CutsPSet = cms.PSet( 
      applyCutsORmaxNTracks = cms.bool( False ),
      maxNTracks = cms.int32( -1 ),
      Thresholds = cms.vdouble( 0.08 ),
      EtaBounds = cms.vdouble( 2.411 ),
      ComponentName = cms.string( "SimpleCuts" ),
      ConeSizes = cms.vdouble( 0.3 )
    ),
    TrkExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter0L3MuonTrackSelectionHighPurity" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      VetoLeadingTrack = cms.bool( True ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "PXLS" ),
      PtVeto_Min = cms.double( 2.0 ),
      NHits_Min = cms.uint32( 0 ),
      PropagateTracksToRadius = cms.bool( True ),
      ReferenceRadius = cms.double( 6.0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "PixelTrackExtractor" ),
      DR_VetoPt = cms.double( 0.025 )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      Vertex_Constraint_Z = cms.bool( False ),
      DR_Veto_E = cms.double( 0.07 ),
      Weight_H = cms.double( 1.0 ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "EcalPlusHcal" ),
      Vertex_Constraint_XY = cms.bool( False ),
      Threshold_H = cms.double( 0.5 ),
      Threshold_E = cms.double( 0.2 ),
      ComponentName = cms.string( "CaloExtractor" ),
      Weight_E = cms.double( 1.0 )
    )
)
process.hltParticleFlowSuperClusterECALUnseeded = cms.EDProducer( "PFECALSuperClusterProducer",
    PFSuperClusterCollectionEndcap = cms.string( "hltParticleFlowSuperClusterECALEndcap" ),
    doSatelliteClusterMerge = cms.bool( False ),
    thresh_PFClusterBarrel = cms.double( 0.5 ),
    PFBasicClusterCollectionBarrel = cms.string( "hltParticleFlowBasicClusterECALBarrel" ),
    useRegression = cms.bool( True ),
    satelliteMajorityFraction = cms.double( 0.5 ),
    thresh_PFClusterEndcap = cms.double( 0.5 ),
    ESAssociation = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    PFBasicClusterCollectionPreshower = cms.string( "hltParticleFlowBasicClusterECALPreshower" ),
    verbose = cms.untracked.bool( False ),
    thresh_SCEt = cms.double( 4.0 ),
    etawidth_SuperClusterEndcap = cms.double( 0.04 ),
    phiwidth_SuperClusterEndcap = cms.double( 0.6 ),
    useDynamicDPhiWindow = cms.bool( True ),
    PFSuperClusterCollectionBarrel = cms.string( "hltParticleFlowSuperClusterECALBarrel" ),
    regressionConfig = cms.PSet( 
      uncertaintyKeyEB = cms.string( "pfscecal_EBUncertainty_online" ),
      ecalRecHitsEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ecalRecHitsEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      regressionKeyEE = cms.string( "pfscecal_EECorrection_online" ),
      regressionKeyEB = cms.string( "pfscecal_EBCorrection_online" ),
      uncertaintyKeyEE = cms.string( "pfscecal_EEUncertainty_online" ),
      isHLT = cms.bool( True ),
      regTrainedWithPS = cms.bool( True )
    ),
    applyCrackCorrections = cms.bool( False ),
    satelliteClusterSeedThreshold = cms.double( 50.0 ),
    etawidth_SuperClusterBarrel = cms.double( 0.04 ),
    PFBasicClusterCollectionEndcap = cms.string( "hltParticleFlowBasicClusterECALEndcap" ),
    PFClusters = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    thresh_PFClusterSeedBarrel = cms.double( 1.0 ),
    EnergyWeight = cms.string( "Raw" ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    thresh_PFClusterSeedEndcap = cms.double( 1.0 ),
    phiwidth_SuperClusterBarrel = cms.double( 0.6 ),
    thresh_PFClusterES = cms.double( 0.5 ),
    seedThresholdIsET = cms.bool( True ),
    isOOTCollection = cms.bool( False ),
    barrelRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEE' ),
    endcapRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEB' ),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string( "hltParticleFlowSuperClusterECALEndcapWithPreshower" ),
    dropUnseedable = cms.bool( False ),
    ClusteringType = cms.string( "Mustache" )
)
process.hltEgammaCandidatesUnseeded = cms.EDProducer( "EgammaHLTRecoEcalCandidateProducers",
    scHybridBarrelProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALUnseeded','hltParticleFlowSuperClusterECALBarrel' ),
    scIslandEndcapProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALUnseeded','hltParticleFlowSuperClusterECALEndcapWithPreshower' ),
    recoEcalCandidateCollection = cms.string( "" )
)
process.hltEgammaCandidatesWrapperUnseeded = cms.EDFilter( "HLTEgammaTriggerFilterObjectWrapper",
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    candNonIsolatedTag = cms.InputTag( "" ),
    doIsolated = cms.bool( True )
)
process.hltEgammaClusterShapeUnseeded = cms.EDProducer( "EgammaHLTClusterShapeProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    multThresEB = cms.double( 1.0 ),
    multThresEE = cms.double( 1.25 )
)
process.hltFixedGridRhoFastjetAllCaloForMuons = cms.EDProducer( "FixedGridRhoProducerFastjetFromRecHit",
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    ebRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    eeRecHitsTag = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    skipHCAL = cms.bool( False ),
    skipECAL = cms.bool( False ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    maxRapidity = cms.double( 2.5 ),
    gridSpacing = cms.double( 0.55 ),
    usePFThresholdsFromDB = cms.bool( True )
)
process.hltEgammaHoverEUnseeded = cms.EDProducer( "EgammaHLTHcalVarProducerFromRecHit",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    etThresHB = cms.vdouble( 0.0, 0.0, 0.0, 0.0 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    etThresHE = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
    usePFThresholdsFromDB = cms.bool( True ),
    innerCone = cms.double( 0.0 ),
    outerCone = cms.double( 0.14 ),
    depth = cms.int32( 0 ),
    maxSeverityHB = cms.int32( 9 ),
    maxSeverityHE = cms.int32( 9 ),
    doEtSum = cms.bool( False ),
    useSingleTower = cms.bool( False ),
    effectiveAreas = cms.vdouble( 0.105, 0.17 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltEgammaEcalPFClusterIsoUnseeded = cms.EDProducer( "EgammaHLTEcalPFClusterIsolationProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    pfClusterProducer = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.0 ),
    drVetoEndcap = cms.double( 0.0 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    effectiveAreas = cms.vdouble( 0.16544, 0.13212 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltEgammaHcalPFClusterIsoUnseeded = cms.EDProducer( "EgammaHLTHcalPFClusterIsolationProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    pfClusterProducerHCAL = cms.InputTag( "hltParticleFlowClusterHCAL" ),
    useHF = cms.bool( False ),
    pfClusterProducerHFEM = cms.InputTag( "" ),
    pfClusterProducerHFHAD = cms.InputTag( "" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.0 ),
    drVetoEndcap = cms.double( 0.0 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    useEt = cms.bool( True ),
    effectiveAreas = cms.vdouble( 0.2, 0.25 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltPixelLayerPairs = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix1+BPix3',
      'BPix1+BPix4',
      'BPix2+BPix3',
      'BPix2+BPix4',
      'BPix3+BPix4',
      'FPix1_pos+FPix2_pos',
      'FPix1_pos+FPix3_pos',
      'FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos',
      'BPix1+FPix2_pos',
      'BPix1+FPix3_pos',
      'BPix2+FPix1_pos',
      'BPix2+FPix2_pos',
      'BPix2+FPix3_pos',
      'BPix3+FPix1_pos',
      'BPix3+FPix2_pos',
      'BPix3+FPix3_pos',
      'BPix4+FPix1_pos',
      'BPix4+FPix2_pos',
      'BPix4+FPix3_pos',
      'FPix1_neg+FPix2_neg',
      'FPix1_neg+FPix3_neg',
      'FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg',
      'BPix1+FPix2_neg',
      'BPix1+FPix3_neg',
      'BPix2+FPix1_neg',
      'BPix2+FPix2_neg',
      'BPix2+FPix3_neg',
      'BPix3+FPix1_neg',
      'BPix3+FPix2_neg',
      'BPix3+FPix3_neg',
      'BPix4+FPix1_neg',
      'BPix4+FPix2_neg',
      'BPix4+FPix3_neg' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltPixelLayerTriplets = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2+BPix3',
      'BPix2+BPix3+BPix4',
      'BPix1+BPix3+BPix4',
      'BPix1+BPix2+BPix4',
      'BPix2+BPix3+FPix1_pos',
      'BPix2+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix1_pos',
      'BPix1+BPix2+FPix1_neg',
      'BPix2+FPix1_pos+FPix2_pos',
      'BPix2+FPix1_neg+FPix2_neg',
      'BPix1+FPix1_pos+FPix2_pos',
      'BPix1+FPix1_neg+FPix2_neg',
      'FPix1_pos+FPix2_pos+FPix3_pos',
      'FPix1_neg+FPix2_neg+FPix3_neg',
      'BPix1+BPix3+FPix1_pos',
      'BPix1+BPix2+FPix2_pos',
      'BPix1+BPix3+FPix1_neg',
      'BPix1+BPix2+FPix2_neg',
      'BPix1+FPix2_neg+FPix3_neg',
      'BPix1+FPix1_neg+FPix3_neg',
      'BPix1+FPix2_pos+FPix3_pos',
      'BPix1+FPix1_pos+FPix3_pos' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltEgammaSuperClustersToPixelMatchUnseeded = cms.EDProducer( "EgammaHLTFilteredSuperClusterProducer",
    cands = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    minEtCutEB = cms.double( 0.0 ),
    minEtCutEE = cms.double( 0.0 ),
    cuts = cms.VPSet( 
      cms.PSet(  endcapCut = cms.PSet( 
  useEt = cms.bool( False ),
  cutOverE = cms.double( 0.2 )
),
        var = cms.InputTag( "hltEgammaHoverEUnseeded" ),
        barrelCut = cms.PSet( 
          useEt = cms.bool( False ),
          cutOverE = cms.double( 0.2 )
        )
      )
    )
)
process.hltEleSeedsTrackingRegionsUnseeded = cms.EDProducer( "TrackingRegionsFromSuperClustersEDProducer",
    RegionPSet = cms.PSet( 
      minBSDeltaZ = cms.double( 0.0 ),
      useZInVertex = cms.bool( False ),
      vertices = cms.InputTag( "" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      useZInBeamspot = cms.bool( False ),
      ptMin = cms.double( 1.5 ),
      deltaEtaRegion = cms.double( 0.1 ),
      nrSigmaForBSDeltaZ = cms.double( 4.0 ),
      originHalfLength = cms.double( 12.5 ),
      measurementTrackerEvent = cms.InputTag( "" ),
      originRadius = cms.double( 0.2 ),
      precise = cms.bool( True ),
      superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatchUnseeded' ),
      whereToUseMeasTracker = cms.string( "kNever" ),
      deltaPhiRegion = cms.double( 0.4 ),
      defaultZ = cms.double( 0.0 )
    )
)
process.hltElePixelHitDoubletsUnseeded = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltPixelLayerPairs" ),
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegionsUnseeded" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltElePixelHitDoubletsForTripletsUnseeded = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltPixelLayerTriplets" ),
    trackingRegions = cms.InputTag( "hltEleSeedsTrackingRegionsUnseeded" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "" ),
    produceSeedingHitSets = cms.bool( True ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0, 1 )
)
process.hltElePixelHitTripletsUnseeded = cms.EDProducer( "CAHitTripletEDProducer",
    doublets = cms.InputTag( "hltElePixelHitDoubletsForTripletsUnseeded" ),
    extraHitRPhitolerance = cms.double( 0.032 ),
    useBendingCorrection = cms.bool( True ),
    CAThetaCut = cms.double( 0.004 ),
    CAPhiCut = cms.double( 0.1 ),
    CAThetaCut_byTriplets = cms.VPSet( 
      cms.PSet(  seedingLayers = cms.string( "" ),
        cut = cms.double( -1.0 )
      )
    ),
    CAPhiCut_byTriplets = cms.VPSet( 
      cms.PSet(  seedingLayers = cms.string( "" ),
        cut = cms.double( -1.0 )
      )
    ),
    CAHardPtCut = cms.double( 0.3 ),
    maxChi2 = cms.PSet( 
      value2 = cms.double( 6.0 ),
      value1 = cms.double( 100.0 ),
      pt1 = cms.double( 0.8 ),
      enabled = cms.bool( True ),
      pt2 = cms.double( 8.0 )
    ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsDoubletsUnseeded = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltElePixelHitDoubletsUnseeded" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsTripletsUnseeded = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsEDProducer",
    seedingHitSets = cms.InputTag( "hltElePixelHitTripletsUnseeded" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) )
)
process.hltElePixelSeedsCombinedUnseeded = cms.EDProducer( "SeedCombiner",
    seedCollections = cms.VInputTag( 'hltElePixelSeedsDoubletsUnseeded','hltElePixelSeedsTripletsUnseeded' )
)
process.hltEgammaElectronPixelSeedsUnseeded = cms.EDProducer( "ElectronNHitSeedProducer",
    initialSeeds = cms.InputTag( "hltElePixelSeedsCombinedUnseeded" ),
    vertices = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    measTkEvt = cms.InputTag( "hltMeasurementTrackerEvent" ),
    superClusters = cms.VInputTag( 'hltEgammaSuperClustersToPixelMatchUnseeded' ),
    matcherConfig = cms.PSet( 
      useRecoVertex = cms.bool( False ),
      minNrHits = cms.vuint32( 2, 3 ),
      matchingCuts = cms.VPSet( 
        cms.PSet(  dPhiMaxHighEt = cms.vdouble( 0.05 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 9999.0 ),
          dRZMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxHighEtThres = cms.vdouble( 20.0 ),
          dRZMaxHighEtThres = cms.vdouble( 0.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        ),
        cms.PSet(  etaBins = cms.vdouble(  ),
          dPhiMaxHighEt = cms.vdouble( 0.003 ),
          version = cms.int32( 2 ),
          dRZMaxHighEt = cms.vdouble( 0.05 ),
          dRZMaxLowEtGrad = cms.vdouble( -0.002 ),
          dPhiMaxLowEtGrad = cms.vdouble( 0.0 ),
          dPhiMaxHighEtThres = cms.vdouble( 0.0 ),
          dRZMaxHighEtThres = cms.vdouble( 30.0 )
        )
      ),
      minNrHitsValidLayerBins = cms.vint32( 4 ),
      detLayerGeom = cms.ESInputTag( "","hltESPGlobalDetLayerGeometry" ),
      navSchool = cms.ESInputTag( "","SimpleNavigationSchool" ),
      paramMagField = cms.ESInputTag( "","ParabolicMf" )
    )
)
process.hltEgammaPixelMatchVarsUnseeded = cms.EDProducer( "EgammaHLTPixelMatchVarProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    pixelSeedsProducer = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    dPhi1SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00112, 7.52E-4, -0.00122, 0.00109 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00222, 1.96E-4, -2.03E-4, 4.47E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00236, 6.91E-4, 1.99E-4, 4.16E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00823, -0.0029 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00282 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 1 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.010838, -0.00345 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 2.0 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 2 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0043 ),
    xMin = cms.double( 2.0 ),
    yMax = cms.int32( 2 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 3 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.0208, -0.0125, 0.00231 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol2" )
  )
) ),
    dPhi2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 1.3E-4 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.6 ),
    funcType = cms.string( "TF1:=pol0" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 4.5E-4, -1.99E-4 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.9 ),
    funcType = cms.string( "TF1:=pol1" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 7.94E-5 ),
    xMin = cms.double( 1.9 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol0" )
  )
) ),
    dRZ2SParams = cms.PSet(  bins = cms.VPSet( 
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.00299, 2.99E-4, -4.13E-6, 0.00191 ),
    xMin = cms.double( 0.0 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 1.5 ),
    funcType = cms.string( "TF1:=pol3" )
  ),
  cms.PSet(  yMin = cms.int32( 1 ),
    binType = cms.string( "AbsEtaClus" ),
    funcParams = cms.vdouble( 0.248, -0.329, 0.148, -0.0222 ),
    xMin = cms.double( 1.5 ),
    yMax = cms.int32( 99999 ),
    xMax = cms.double( 3.0 ),
    funcType = cms.string( "TF1:=pol3" )
  )
) ),
    productsToWrite = cms.int32( 0 )
)
process.hltEgammaCkfTrackCandidatesForGSFUnseeded = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( True ),
    doSeedingRegionRebuilding = cms.bool( True ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryBuilderForGsfElectrons" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 1000000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltEgammaGsfTracksUnseeded = cms.EDProducer( "GsfTrackProducer",
    src = cms.InputTag( "hltEgammaCkfTrackCandidatesForGSFUnseeded" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    producer = cms.string( "" ),
    Fitter = cms.string( "hltESPGsfElectronFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    TrajectoryInEvent = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    Propagator = cms.string( "hltESPFwdElectronPropagator" ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    MeasurementTracker = cms.string( "hltESPMeasurementTracker" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    GeometricInnerState = cms.bool( True ),
    AlgorithmName = cms.string( "gsf" )
)
process.hltEgammaGsfElectronsUnseeded = cms.EDProducer( "EgammaHLTPixelMatchElectronProducers",
    TrackProducer = cms.InputTag( "" ),
    GsfTrackProducer = cms.InputTag( "hltEgammaGsfTracksUnseeded" ),
    UseGsfTracks = cms.bool( True ),
    BSProducer = cms.InputTag( "hltOnlineBeamSpot" )
)
process.hltEgammaGsfTrackVarsBestTrkUnseeded = cms.EDProducer( "EgammaHLTGsfTrackVarProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    inputCollection = cms.InputTag( "hltEgammaGsfElectronsUnseeded" ),
    beamSpotProducer = cms.InputTag( "hltOnlineBeamSpot" ),
    upperTrackNrToRemoveCut = cms.int32( 9999 ),
    lowerTrackNrToRemoveCut = cms.int32( -1 ),
    useDefaultValuesForBarrel = cms.bool( False ),
    useDefaultValuesForEndcap = cms.bool( False ),
    produceAbsValues = cms.bool( False )
)
process.hltEgammaEleGsfTrackIsoUnseeded = cms.EDProducer( "EgammaHLTElectronTrackIsolationProducers",
    electronProducer = cms.InputTag( "hltEgammaGsfElectronsUnseeded" ),
    trackProducer = cms.InputTag( "hltMergedTracks" ),
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    beamSpotProducer = cms.InputTag( "hltOnlineBeamSpot" ),
    egTrkIsoPtMin = cms.double( 1.0 ),
    egTrkIsoConeSize = cms.double( 0.2 ),
    egTrkIsoZSpan = cms.double( 0.15 ),
    egTrkIsoRSpan = cms.double( 999999.0 ),
    egTrkIsoVetoConeSizeBarrel = cms.double( 0.03 ),
    egTrkIsoVetoConeSizeEndcap = cms.double( 0.03 ),
    egTrkIsoStripBarrel = cms.double( 0.01 ),
    egTrkIsoStripEndcap = cms.double( 0.01 ),
    useGsfTrack = cms.bool( True ),
    useSCRefs = cms.bool( True )
)
process.hltEgammaR9IDUnseeded = cms.EDProducer( "EgammaHLTR9IDProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' )
)
process.hltDisplacedmumuVtxNoMatchingProducer = cms.EDProducer( "HLTDisplacedmumuVtxProducer",
    Src = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltDoubleMu3L3FilteredNoVtx" ),
    matchToPrevious = cms.bool( False ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MinPtPair = cms.double( 0.0 ),
    MinInvMass = cms.double( 0.0 ),
    MaxInvMass = cms.double( 99999.0 ),
    ChargeOpt = cms.int32( 0 )
)
process.hltRecHitInRegionForMuonsMFnoVtx = cms.EDProducer( "MuonHLTRechitInRegionsProducer",
    productLabels = cms.vstring( 'EcalRegionalRecHitsEB',
      'EcalRegionalRecHitsEE' ),
    ecalhitLabels = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    l1TagIsolated = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    l1TagNonIsolated = cms.InputTag( "NotUsed" ),
    useUncalib = cms.bool( False ),
    doIsolated = cms.bool( True ),
    l1LowerThr = cms.double( 0.0 ),
    l1UpperThr = cms.double( 999.0 ),
    l1LowerThrIgnoreIsolation = cms.double( 100.0 ),
    regionEtaMargin = cms.double( 0.4 ),
    regionPhiMargin = cms.double( 0.4 )
)
process.hltRecHitInRegionForMuonsESNoVtx = cms.EDProducer( "MuonHLTRechitInRegionsProducer",
    productLabels = cms.vstring( 'EcalRegionalRecHitsES' ),
    ecalhitLabels = cms.VInputTag( 'hltEcalPreshowerRecHit:EcalRecHitsES' ),
    l1TagIsolated = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    l1TagNonIsolated = cms.InputTag( "NotUsed" ),
    useUncalib = cms.bool( False ),
    doIsolated = cms.bool( True ),
    l1LowerThr = cms.double( 0.0 ),
    l1UpperThr = cms.double( 999.0 ),
    l1LowerThrIgnoreIsolation = cms.double( 100.0 ),
    regionEtaMargin = cms.double( 0.4 ),
    regionPhiMargin = cms.double( 0.4 )
)
process.hltParticleFlowRecHitECALForMuonsMFNoVtx = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRecHitInRegionForMuonsMFnoVtx','EcalRegionalRecHitsEB' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltRecHitInRegionForMuonsMFnoVtx','EcalRegionalRecHitsEE' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    )
)
process.hltParticleFlowRecHitPSForMuonsNoVtx = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRecHitInRegionForMuonsESNoVtx','EcalRegionalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    )
)
process.hltParticleFlowClusterECALUncorrectedForMuonsMFNoVtx = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALForMuonsMFNoVtx" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterPSForMuonsNoVtx = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSForMuonsNoVtx" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALForMuonsMFNoVtx = cms.EDProducer( "CorrectedECALPFClusterProducer",
    minimumPSEnergy = cms.double( 0.0 ),
    skipPS = cms.bool( False ),
    inputPS = cms.InputTag( "hltParticleFlowClusterPSForMuonsNoVtx" ),
    energyCorrector = cms.PSet( 
      recHitsEELabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      recHitsEBLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      applyCrackCorrections = cms.bool( False ),
      ebSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      applyMVACorrections = cms.bool( True ),
      eeSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      maxPtForMVAEvaluation = cms.double( 300.0 ),
      srfAwareCorrection = cms.bool( True )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedForMuonsMFNoVtx" )
)
process.hltMuonEcalMFPFClusterIsoForMuonsNoVtx = cms.EDProducer( "MuonHLTEcalPFClusterIsolationProducer",
    recoCandidateProducer = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    pfClusterProducer = cms.InputTag( "hltParticleFlowClusterECALForMuonsMFNoVtx" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetECALMFForMuons" ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.05 ),
    drVetoEndcap = cms.double( 0.05 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    effectiveAreas = cms.vdouble( 0.35, 0.193 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltMuonHcalPFClusterIsoForMuonsNoVtx = cms.EDProducer( "MuonHLTHcalPFClusterIsolationProducer",
    recoCandidateProducer = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    pfClusterProducerHCAL = cms.InputTag( "hltParticleFlowClusterHCAL" ),
    useHF = cms.bool( False ),
    pfClusterProducerHFEM = cms.InputTag( "" ),
    pfClusterProducerHFHAD = cms.InputTag( "" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCalo" ),
    doRhoCorrection = cms.bool( True ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    drMax = cms.double( 0.3 ),
    drVetoBarrel = cms.double( 0.1 ),
    drVetoEndcap = cms.double( 0.1 ),
    etaStripBarrel = cms.double( 0.0 ),
    etaStripEndcap = cms.double( 0.0 ),
    energyBarrel = cms.double( 0.0 ),
    energyEndcap = cms.double( 0.0 ),
    useEt = cms.bool( True ),
    effectiveAreas = cms.vdouble( 0.11, 0.163 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltPixelTracksTrackingRegionsForSeedsL3MuonNoVtx = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltPixelVertices" ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 4 ),
      maxNRegions = cms.int32( 40 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 0.3 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.1 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.3 ),
      deltaPhi = cms.double( 0.3 )
    )
)
process.hltPixelTracksInRegionIter0L3MuonNoVtx = cms.EDProducer( "TrackSelectorByRegion",
    tracks = cms.InputTag( "hltPixelTracks" ),
    regions = cms.InputTag( "hltPixelTracksTrackingRegionsForSeedsL3MuonNoVtx" ),
    produceTrackCollection = cms.bool( True ),
    produceMask = cms.bool( False )
)
process.hltIter0L3MuonPixelSeedsFromPixelTracksNoVtx = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracksInRegionIter0L3MuonNoVtx" ),
    InputVertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0L3MuonCkfTrackCandidatesNoVtx = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0L3MuonPixelSeedsFromPixelTracksNoVtx" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0GroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0L3MuonCtfWithMaterialTracksNoVtx = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0L3MuonCkfTrackCandidatesNoVtx" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0L3MuonTrackCutClassifierNoVtx = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0L3MuonCtfWithMaterialTracksNoVtx" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 15.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 0.003 ),
        dr_par2 = cms.vdouble( 3.40282346639E38, 0.6, 0.6 ),
        dr_par1 = cms.vdouble( 3.40282346639E38, 0.8, 0.8 ),
        dr_exp = cms.vint32( 4, 4, 4 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 0.001 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 3.40282346639E38, 0.75, 0.75 ),
        dz_par2 = cms.vdouble( 3.40282346639E38, 0.5, 0.5 ),
        dz_exp = cms.vint32( 4, 4, 4 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 9999.0, 25.0, 16.0 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 3 )
    )
)
process.hltIter0L3MuonTrackSelectionHighPurityNoVtx = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0L3MuonCtfWithMaterialTracksNoVtx" ),
    originalMVAVals = cms.InputTag( 'hltIter0L3MuonTrackCutClassifierNoVtx','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0L3MuonTrackCutClassifierNoVtx','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltMuonTkRelIsolationCut0p09MapNoVtx = cms.EDProducer( "L3MuonCombinedRelativeIsolationProducer",
    UseRhoCorrectedCaloDeposits = cms.bool( False ),
    UseCaloIso = cms.bool( False ),
    CaloDepositsLabel = cms.InputTag( "notUsed" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    OutputMuIsoDeposits = cms.bool( True ),
    TrackPt_Min = cms.double( -1.0 ),
    printDebug = cms.bool( False ),
    CutsPSet = cms.PSet( 
      applyCutsORmaxNTracks = cms.bool( False ),
      maxNTracks = cms.int32( -1 ),
      Thresholds = cms.vdouble( 0.09 ),
      EtaBounds = cms.vdouble( 2.411 ),
      ComponentName = cms.string( "SimpleCuts" ),
      ConeSizes = cms.vdouble( 0.3 )
    ),
    TrkExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter0L3MuonTrackSelectionHighPurityNoVtx" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      VetoLeadingTrack = cms.bool( True ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "PXLS" ),
      PtVeto_Min = cms.double( 2.0 ),
      NHits_Min = cms.uint32( 0 ),
      PropagateTracksToRadius = cms.bool( True ),
      ReferenceRadius = cms.double( 6.0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "PixelTrackExtractor" ),
      DR_VetoPt = cms.double( 0.025 )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      Vertex_Constraint_Z = cms.bool( False ),
      DR_Veto_E = cms.double( 0.07 ),
      Weight_H = cms.double( 1.0 ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "EcalPlusHcal" ),
      Vertex_Constraint_XY = cms.bool( False ),
      Threshold_H = cms.double( 0.5 ),
      Threshold_E = cms.double( 0.2 ),
      ComponentName = cms.string( "CaloExtractor" ),
      Weight_E = cms.double( 1.0 )
    )
)
process.hltFEDSelectorL1 = cms.EDProducer( "EvFFEDSelector",
    inputTag = cms.InputTag( "rawDataCollector" ),
    fedList = cms.vuint32( 1404 )
)
process.hltScoutingTrackPacker = cms.EDProducer( "HLTScoutingTrackProducer",
    OtherTracks = cms.InputTag( "hltPFMuonMerging" ),
    vertexCollection = cms.InputTag( "hltPixelVertices" ),
    mantissaPrecision = cms.int32( 10 ),
    vtxMinDist = cms.double( 999.0 ),
    ptMin = cms.double( 1.0 )
)
process.hltScoutingPrimaryVertexPacker = cms.EDProducer( "HLTScoutingPrimaryVertexProducer",
    vertexCollection = cms.InputTag( "hltPixelVertices" ),
    mantissaPrecision = cms.int32( 10 )
)
process.hltScoutingPFPacker = cms.EDProducer( "HLTScoutingPFProducer",
    pfJetCollection = cms.InputTag( "hltAK4PFJets" ),
    pfJetTagCollection = cms.InputTag( "" ),
    pfCandidateCollection = cms.InputTag( "hltParticleFlow" ),
    vertexCollection = cms.InputTag( "hltPixelVertices" ),
    metCollection = cms.InputTag( "hltPFMETProducer" ),
    rho = cms.InputTag( "hltFixedGridRhoFastjetAll" ),
    pfJetPtCut = cms.double( 20.0 ),
    pfJetEtaCut = cms.double( 5.0 ),
    pfCandidatePtCut = cms.double( 0.6 ),
    pfCandidateEtaCut = cms.double( 3.0 ),
    mantissaPrecision = cms.int32( 10 ),
    doJetTags = cms.bool( True ),
    doCandidates = cms.bool( True ),
    doMet = cms.bool( True ),
    doTrackVars = cms.bool( True ),
    relativeTrackVars = cms.bool( True ),
    doCandIndsForJets = cms.bool( False )
)
process.hltScoutingMuonPackerNoVtx = cms.EDProducer( "HLTScoutingMuonProducer",
    ChargedCandidates = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    displacedvertexCollection = cms.InputTag( "hltDisplacedmumuVtxNoMatchingProducer" ),
    InputMuons = cms.InputTag( "hltIterL3MuonsNoVtx" ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3LinksNoVtx" ),
    Tracks = cms.InputTag( "hltIterL3MuonAndMuonFromL1MergedNoVtx" ),
    EcalPFClusterIsoMap = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuonsNoVtx" ),
    HcalPFClusterIsoMap = cms.InputTag( "hltMuonHcalPFClusterIsoForMuonsNoVtx" ),
    TrackIsoMap = cms.InputTag( 'hltMuonTkRelIsolationCut0p09MapNoVtx','combinedRelativeIsoDeposits' ),
    muonPtCut = cms.double( 0.0 ),
    muonEtaCut = cms.double( 2.4 ),
    minVtxProbCut = cms.double( 0.001 )
)
process.hltScoutingMuonPackerVtx = cms.EDProducer( "HLTScoutingMuonProducer",
    ChargedCandidates = cms.InputTag( "hltIterL3MuonCandidates" ),
    displacedvertexCollection = cms.InputTag( "" ),
    InputMuons = cms.InputTag( "hltIterL3Muons" ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    Tracks = cms.InputTag( "hltIterL3MuonAndMuonFromL1Merged" ),
    EcalPFClusterIsoMap = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    HcalPFClusterIsoMap = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    TrackIsoMap = cms.InputTag( 'hltMuonTkRelIsolationCut0p08Map','combinedRelativeIsoDeposits' ),
    muonPtCut = cms.double( 0.0 ),
    muonEtaCut = cms.double( 2.4 ),
    minVtxProbCut = cms.double( 0.001 )
)
process.hltScoutingEgammaPacker = cms.EDProducer( "HLTScoutingEgammaProducer",
    EgammaCandidates = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    EgammaGsfTracks = cms.InputTag( "hltEgammaGsfTracksUnseeded" ),
    SigmaIEtaIEtaMap = cms.InputTag( 'hltEgammaClusterShapeUnseeded','sigmaIEtaIEta5x5NoiseCleaned' ),
    r9Map = cms.InputTag( 'hltEgammaR9IDUnseeded','r95x5' ),
    HoverEMap = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    DetaMap = cms.InputTag( 'hltEgammaGsfTrackVarsBestTrkUnseeded','DetaSeed' ),
    DphiMap = cms.InputTag( 'hltEgammaGsfTrackVarsBestTrkUnseeded','Dphi' ),
    MissingHitsMap = cms.InputTag( 'hltEgammaGsfTrackVarsBestTrkUnseeded','MissingHits' ),
    OneOEMinusOneOPMap = cms.InputTag( 'hltEgammaGsfTrackVarsBestTrkUnseeded','OneOESuperMinusOneOP' ),
    fBremMap = cms.InputTag( 'hltEgammaGsfTrackVarsBestTrkUnseeded','fbrem' ),
    EcalPFClusterIsoMap = cms.InputTag( "hltEgammaEcalPFClusterIsoUnseeded" ),
    EleGsfTrackIsoMap = cms.InputTag( "hltEgammaEleGsfTrackIsoUnseeded" ),
    HcalPFClusterIsoMap = cms.InputTag( "hltEgammaHcalPFClusterIsoUnseeded" ),
    egammaPtCut = cms.double( 2.0 ),
    egammaEtaCut = cms.double( 2.5 ),
    egammaHoverECut = cms.double( 9999.0 ),
    egammaSigmaIEtaIEtaCut = cms.vdouble( 99999.0, 99999.0 ),
    absEtaBinUpperEdges = cms.vdouble( 1.479, 5.0 ),
    saveRecHitTiming = cms.bool( False ),
    mantissaPrecision = cms.int32( 10 ),
    rechitMatrixSize = cms.int32( 10 ),
    rechitZeroSuppression = cms.bool( True ),
    ecalRechitEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' )
)
process.hltBoolEnd = cms.EDFilter( "HLTBool",
    result = cms.bool( True )
)
process.hltL1sDSTRun3DoubleEGPFScoutingPixelTracking = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleEG_LooseIso16_LooseIso12_er1p5 OR L1_DoubleEG_LooseIso18_LooseIso12_er1p5 OR L1_DoubleEG_LooseIso20_LooseIso12_er1p5 OR L1_DoubleEG_LooseIso22_LooseIso12_er1p5 OR L1_DoubleEG11_er1p2_dR_Max0p6" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDSTPFScoutingDoubleEG = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltRechitInRegionsECAL = cms.EDProducer( "HLTEcalRecHitInAllL1RegionsProducer",
    productLabels = cms.vstring( 'EcalRecHitsEB',
      'EcalRecHitsEE' ),
    recHitLabels = cms.VInputTag( 'hltEcalRecHit:EcalRecHitsEB','hltEcalRecHit:EcalRecHitsEE' ),
    l1InputRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "EGamma" ),
        minEt = cms.double( 5.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Jet' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Jet" ),
        minEt = cms.double( 170.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Tau' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Tau" ),
        minEt = cms.double( 100.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      )
    )
)
process.hltRechitInRegionsES = cms.EDProducer( "HLTEcalRecHitInAllL1RegionsProducer",
    productLabels = cms.vstring( 'EcalRecHitsES' ),
    recHitLabels = cms.VInputTag( 'hltEcalPreshowerRecHit:EcalRecHitsES' ),
    l1InputRegions = cms.VPSet( 
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "EGamma" ),
        minEt = cms.double( 5.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Jet' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Jet" ),
        minEt = cms.double( 170.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      ),
      cms.PSet(  inputColl = cms.InputTag( 'hltGtStage2Digis','Tau' ),
        regionEtaMargin = cms.double( 0.9 ),
        type = cms.string( "Tau" ),
        minEt = cms.double( 100.0 ),
        regionPhiMargin = cms.double( 1.2 ),
        maxEt = cms.double( 999999.0 )
      )
    )
)
process.hltParticleFlowRecHitECALL1Seeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet( 
      barrel = cms.PSet(  ),
      endcap = cms.PSet(  ),
      name = cms.string( "PFRecHitECALNavigator" )
    ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEB' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEBRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      ),
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEE' ),
        srFlags = cms.InputTag( "" ),
        name = cms.string( "PFEERecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  name = cms.string( "PFRecHitQTestDBThreshold" ),
            applySelectionsToAllCrystals = cms.bool( True )
          ),
          cms.PSet(  topologicalCleaning = cms.bool( True ),
            skipTTRecoveredHits = cms.bool( True ),
            cleaningThreshold = cms.double( 2.0 ),
            name = cms.string( "PFRecHitQTestECAL" ),
            timingCleaning = cms.bool( True )
          )
        )
      )
    )
)
process.hltParticleFlowRecHitPSL1Seeded = cms.EDProducer( "PFRecHitProducer",
    navigator = cms.PSet(  name = cms.string( "PFRecHitPreshowerNavigator" ) ),
    producers = cms.VPSet( 
      cms.PSet(  src = cms.InputTag( 'hltRechitInRegionsES','EcalRecHitsES' ),
        name = cms.string( "PFPSRecHitCreator" ),
        qualityTests = cms.VPSet( 
          cms.PSet(  threshold = cms.double( 7.0E-6 ),
            name = cms.string( "PFRecHitQTestThreshold" )
          )
        )
      )
    )
)
process.hltParticleFlowClusterPSL1Seeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitPSL1Seeded" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 1.2E-4 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 4 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 6.0E-5 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "PS2" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( False )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 6.0E-5 ),
        minFractionInCalc = cms.double( 1.0E-9 )
      ),
      maxIterations = cms.uint32( 50 ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS1" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 6.0E-5 ),
          detector = cms.string( "PS2" )
        )
      ),
      showerSigma = cms.double( 0.3 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet(  ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALUncorrectedL1Seeded = cms.EDProducer( "PFClusterProducer",
    recHitsSource = cms.InputTag( "hltParticleFlowRecHitECALL1Seeded" ),
    usePFThresholdsFromDB = cms.bool( True ),
    recHitCleaners = cms.VPSet( 
    ),
    seedCleaners = cms.VPSet( 
    ),
    seedFinder = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  seedingThresholdPt = cms.double( 0.15 ),
          seedingThreshold = cms.double( 0.6 ),
          detector = cms.string( "ECAL_ENDCAP" )
        ),
        cms.PSet(  seedingThresholdPt = cms.double( 0.0 ),
          seedingThreshold = cms.double( 0.23 ),
          detector = cms.string( "ECAL_BARREL" )
        )
      ),
      algoName = cms.string( "LocalMaximumSeedFinder" ),
      nNeighbours = cms.int32( 8 )
    ),
    initialClusteringStep = cms.PSet( 
      thresholdsByDetector = cms.VPSet( 
        cms.PSet(  gatheringThreshold = cms.double( 0.08 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  gatheringThreshold = cms.double( 0.3 ),
          gatheringThresholdPt = cms.double( 0.0 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      algoName = cms.string( "Basic2DGenericTopoClusterizer" ),
      useCornerCells = cms.bool( True )
    ),
    pfClusterBuilder = cms.PSet( 
      minFracTot = cms.double( 1.0E-20 ),
      stoppingTolerance = cms.double( 1.0E-8 ),
      positionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( 9 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      maxIterations = cms.uint32( 50 ),
      positionCalcForConvergence = cms.PSet( 
        minAllowedNormalization = cms.double( 0.0 ),
        T0_ES = cms.double( 1.2 ),
        algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
        T0_EE = cms.double( 3.1 ),
        T0_EB = cms.double( 7.4 ),
        X0 = cms.double( 0.89 ),
        minFractionInCalc = cms.double( 0.0 ),
        W0 = cms.double( 4.2 )
      ),
      allCellsPositionCalc = cms.PSet( 
        minAllowedNormalization = cms.double( 1.0E-9 ),
        posCalcNCrystals = cms.int32( -1 ),
        algoName = cms.string( "Basic2DGenericPFlowPositionCalc" ),
        logWeightDenominator = cms.double( 0.08 ),
        minFractionInCalc = cms.double( 1.0E-9 ),
        timeResolutionCalcBarrel = cms.PSet( 
          corrTermLowE = cms.double( 0.0510871 ),
          threshLowE = cms.double( 0.5 ),
          noiseTerm = cms.double( 1.10889 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 1.31883 ),
          threshHighE = cms.double( 5.0 ),
          constantTerm = cms.double( 0.428192 )
        ),
        timeResolutionCalcEndcap = cms.PSet( 
          corrTermLowE = cms.double( 0.0 ),
          threshLowE = cms.double( 1.0 ),
          noiseTerm = cms.double( 5.72489999999 ),
          constantTermLowE = cms.double( 0.0 ),
          noiseTermLowE = cms.double( 6.92683000001 ),
          threshHighE = cms.double( 10.0 ),
          constantTerm = cms.double( 0.0 )
        )
      ),
      algoName = cms.string( "Basic2DGenericPFlowClusterizer" ),
      recHitEnergyNorms = cms.VPSet( 
        cms.PSet(  recHitEnergyNorm = cms.double( 0.08 ),
          detector = cms.string( "ECAL_BARREL" )
        ),
        cms.PSet(  recHitEnergyNorm = cms.double( 0.3 ),
          detector = cms.string( "ECAL_ENDCAP" )
        )
      ),
      showerSigma = cms.double( 1.5 ),
      minFractionToKeep = cms.double( 1.0E-7 ),
      excludeOtherSeeds = cms.bool( True )
    ),
    positionReCalc = cms.PSet( 
      minAllowedNormalization = cms.double( 0.0 ),
      T0_ES = cms.double( 1.2 ),
      algoName = cms.string( "ECAL2DPositionCalcWithDepthCorr" ),
      T0_EE = cms.double( 3.1 ),
      T0_EB = cms.double( 7.4 ),
      X0 = cms.double( 0.89 ),
      minFractionInCalc = cms.double( 0.0 ),
      W0 = cms.double( 4.2 )
    ),
    energyCorrector = cms.PSet(  )
)
process.hltParticleFlowClusterECALL1Seeded = cms.EDProducer( "CorrectedECALPFClusterProducer",
    minimumPSEnergy = cms.double( 0.0 ),
    skipPS = cms.bool( False ),
    inputPS = cms.InputTag( "hltParticleFlowClusterPSL1Seeded" ),
    energyCorrector = cms.PSet( 
      recHitsEELabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      recHitsEBLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      applyCrackCorrections = cms.bool( False ),
      ebSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      applyMVACorrections = cms.bool( True ),
      eeSrFlagLabel = cms.InputTag( "hltEcalDigisLegacy" ),
      maxPtForMVAEvaluation = cms.double( 300.0 ),
      srfAwareCorrection = cms.bool( True )
    ),
    inputECAL = cms.InputTag( "hltParticleFlowClusterECALUncorrectedL1Seeded" )
)
process.hltParticleFlowSuperClusterECALL1Seeded = cms.EDProducer( "PFECALSuperClusterProducer",
    PFSuperClusterCollectionEndcap = cms.string( "hltParticleFlowSuperClusterECALEndcap" ),
    doSatelliteClusterMerge = cms.bool( False ),
    thresh_PFClusterBarrel = cms.double( 0.5 ),
    PFBasicClusterCollectionBarrel = cms.string( "hltParticleFlowBasicClusterECALBarrel" ),
    useRegression = cms.bool( True ),
    satelliteMajorityFraction = cms.double( 0.5 ),
    thresh_PFClusterEndcap = cms.double( 0.5 ),
    ESAssociation = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    PFBasicClusterCollectionPreshower = cms.string( "hltParticleFlowBasicClusterECALPreshower" ),
    verbose = cms.untracked.bool( False ),
    thresh_SCEt = cms.double( 4.0 ),
    etawidth_SuperClusterEndcap = cms.double( 0.04 ),
    phiwidth_SuperClusterEndcap = cms.double( 0.6 ),
    useDynamicDPhiWindow = cms.bool( True ),
    PFSuperClusterCollectionBarrel = cms.string( "hltParticleFlowSuperClusterECALBarrel" ),
    regressionConfig = cms.PSet( 
      uncertaintyKeyEB = cms.string( "pfscecal_EBUncertainty_online" ),
      ecalRecHitsEE = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      ecalRecHitsEB = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      regressionKeyEE = cms.string( "pfscecal_EECorrection_online" ),
      regressionKeyEB = cms.string( "pfscecal_EBCorrection_online" ),
      uncertaintyKeyEE = cms.string( "pfscecal_EEUncertainty_online" ),
      isHLT = cms.bool( True ),
      regTrainedWithPS = cms.bool( True )
    ),
    applyCrackCorrections = cms.bool( False ),
    satelliteClusterSeedThreshold = cms.double( 50.0 ),
    etawidth_SuperClusterBarrel = cms.double( 0.04 ),
    PFBasicClusterCollectionEndcap = cms.string( "hltParticleFlowBasicClusterECALEndcap" ),
    PFClusters = cms.InputTag( "hltParticleFlowClusterECALL1Seeded" ),
    thresh_PFClusterSeedBarrel = cms.double( 1.0 ),
    EnergyWeight = cms.string( "Raw" ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    thresh_PFClusterSeedEndcap = cms.double( 1.0 ),
    phiwidth_SuperClusterBarrel = cms.double( 0.6 ),
    thresh_PFClusterES = cms.double( 0.5 ),
    seedThresholdIsET = cms.bool( True ),
    isOOTCollection = cms.bool( False ),
    barrelRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEE' ),
    endcapRecHits = cms.InputTag( 'ecalRecHit','EcalRecHitsEB' ),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string( "hltParticleFlowSuperClusterECALEndcapWithPreshower" ),
    dropUnseedable = cms.bool( False ),
    ClusteringType = cms.string( "Mustache" )
)
process.hltEgammaCandidates = cms.EDProducer( "EgammaHLTRecoEcalCandidateProducers",
    scHybridBarrelProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALL1Seeded','hltParticleFlowSuperClusterECALBarrel' ),
    scIslandEndcapProducer = cms.InputTag( 'hltParticleFlowSuperClusterECALL1Seeded','hltParticleFlowSuperClusterECALEndcapWithPreshower' ),
    recoEcalCandidateCollection = cms.string( "" )
)
process.hltEGL1DoubleIsoEG11Filter = cms.EDFilter( "HLTEgammaL1TMatchFilterRegional",
    saveTags = cms.bool( True ),
    candIsolatedTag = cms.InputTag( "hltEgammaCandidates" ),
    l1IsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    candNonIsolatedTag = cms.InputTag( "" ),
    l1NonIsolatedTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1SeedFilterTag = cms.InputTag( "hltL1sDSTRun3DoubleEGPFScoutingPixelTracking" ),
    l1CenJetsTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    l1TausTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    ncandcut = cms.int32( 2 ),
    doIsolated = cms.bool( False ),
    region_eta_size = cms.double( 0.522 ),
    region_eta_size_ecap = cms.double( 1.0 ),
    region_phi_size = cms.double( 1.044 ),
    barrel_end = cms.double( 1.4791 ),
    endcap_end = cms.double( 2.65 )
)
process.hltDoubleEG11CaloIdLEt11Filter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEGL1DoubleIsoEG11Filter" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" ),
    etcutEB = cms.double( 11.0 ),
    etcutEE = cms.double( 11.0 ),
    minEtaCut = cms.double( -2.1 ),
    maxEtaCut = cms.double( 2.1 ),
    ncandcut = cms.int32( 2 )
)
process.hltEgammaClusterShape = cms.EDProducer( "EgammaHLTClusterShapeProducer",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    ecalRechitEB = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEB' ),
    ecalRechitEE = cms.InputTag( 'hltRechitInRegionsECAL','EcalRecHitsEE' ),
    multThresEB = cms.double( 1.0 ),
    multThresEE = cms.double( 1.25 )
)
process.hltDoubleEG11CaloIdLClusterShapeFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDoubleEG11CaloIdLEt11Filter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShape','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.014 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltEgammaHoverE = cms.EDProducer( "EgammaHLTHcalVarProducerFromRecHit",
    recoEcalCandidateProducer = cms.InputTag( "hltEgammaCandidates" ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    hbheRecHitsTag = cms.InputTag( "hltHbhereco" ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    eThresHB = cms.vdouble( 0.4, 0.3, 0.3, 0.3 ),
    etThresHB = cms.vdouble( 0.0, 0.0, 0.0, 0.0 ),
    eThresHE = cms.vdouble( 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 ),
    etThresHE = cms.vdouble( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ),
    usePFThresholdsFromDB = cms.bool( True ),
    innerCone = cms.double( 0.0 ),
    outerCone = cms.double( 0.14 ),
    depth = cms.int32( 0 ),
    maxSeverityHB = cms.int32( 9 ),
    maxSeverityHE = cms.int32( 9 ),
    doEtSum = cms.bool( False ),
    useSingleTower = cms.bool( False ),
    effectiveAreas = cms.vdouble( 0.105, 0.17 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 )
)
process.hltDoubleEG11CaloIdLHEFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltDoubleEG11CaloIdLClusterShapeFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverE" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.2 ),
    thrOverEEE = cms.vdouble( 0.2 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 2 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidates" )
)
process.hltL1sDSTRun3JetHTPFScoutingPixelTracking = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_HTT200er OR L1_HTT255er OR L1_HTT280er OR L1_HTT320er OR L1_HTT360er OR L1_HTT400er OR L1_HTT450er OR L1_ETT2000 OR L1_SingleJet180 OR L1_SingleJet200 OR L1_DoubleJet30er2p5_Mass_Min250_dEta_Max1p5 OR L1_DoubleJet30er2p5_Mass_Min300_dEta_Max1p5 OR L1_DoubleJet30er2p5_Mass_Min330_dEta_Max1p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDSTPFScoutingJetHT = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltMuonTriggerResultsFilter = cms.EDFilter( "TriggerResultsFilter",
    usePathStatus = cms.bool( True ),
    hltResults = cms.InputTag( "" ),
    l1tResults = cms.InputTag( "" ),
    l1tIgnoreMaskAndPrescale = cms.bool( False ),
    throw = cms.bool( True ),
    triggerConditions = cms.vstring( 'Dataset_Muon0',
      'Dataset_Muon1' )
)
process.hltPreDSTPFScoutingDatasetMuon = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1sDSTRun3AXONominalPFScoutingTracking = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_AXO_Nominal" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDSTPFScoutingAXONominal = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1sDSTRun3AXOTightPFScoutingTracking = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_AXO_Tight" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDSTPFScoutingAXOTight = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1sSingleMuScouting = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu10_SQ14_BMTF OR L1_SingleMu11_SQ14_BMTF" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDSTPFScoutingSingleMuon = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMuScoutingL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMuScouting" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMuScoutingL2Filtered0 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMuScoutingL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMuScoutingL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMuScoutingL1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sMuScoutingL3Filtered0 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMuScoutingL2Filtered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMuScoutingL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL1sSingleMu22or25 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu22 OR L1_SingleMu25" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu37TkMu27 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu22orMu25L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu22or25" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMu22orMu25L1f0L2Filtered25 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22orMu25L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3fL1sMu16orMu25L1f0L2f25L3Filtered37 = cms.EDFilter( "HLTMuonTrkL1TFilter",
    saveTags = cms.bool( True ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    inputCandCollection = cms.InputTag( "hltIterL3MuonCandidates" ),
    previousCandTag = cms.InputTag( "hltL1fL1sMu22orMu25L1Filtered0" ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    minMuonStations = cms.int32( 2 ),
    maxNormalizedChi2 = cms.double( 9999.0 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    trkMuonId = cms.uint32( 0 ),
    minPt = cms.double( 37.0 ),
    minN = cms.uint32( 1 ),
    maxAbsEta = cms.double( 2.5 ),
    L1MatchingdR = cms.double( 0.3 ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltMuTrackSeeds = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracks" ),
    InputVertexCollection = cms.InputTag( "" ),
    originHalfLength = cms.double( 1.0E9 ),
    originRadius = cms.double( 1.0E9 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( False ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltMuCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltMuTrackSeeds" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltMuCtfTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltMuCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherRK" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "hltMuCtfTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltDiMuonMerging = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 100.0 ),
    LostHitPenalty = cms.double( 0.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3MuonAndMuonFromL1Merged','hltMuCtfTracks' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3MuonAndMuonFromL1Merged','hltMuCtfTracks' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltDiMuonLinks = cms.EDProducer( "MuonLinksProducerForHLT",
    InclusiveTrackerTrackCollection = cms.InputTag( "hltDiMuonMerging" ),
    LinkCollection = cms.InputTag( "hltL3MuonsIterL3Links" ),
    ptMin = cms.double( 2.5 ),
    pMin = cms.double( 2.5 ),
    shareHitFraction = cms.double( 0.8 )
)
process.hltGlbTrkMuons = cms.EDProducer( "MuonIdProducer",
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( False ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( False ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( False ),
      HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltPFMuonMerging" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "" ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "hltAntiKT4CaloJetsPFEt5" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    trackDepositName = cms.string( "tracker" ),
    ecalDepositName = cms.string( "ecal" ),
    hcalDepositName = cms.string( "hcal" ),
    hoDepositName = cms.string( "ho" ),
    jetDepositName = cms.string( "jets" ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    ShowerDigiFillerParameters = cms.PSet( 
      cscDigiCollectionLabel = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
      dtDigiCollectionLabel = cms.InputTag( "hltMuonDTDigis" ),
      digiMaxDistanceX = cms.double( 25.0 )
    ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    fillEnergy = cms.bool( False ),
    storeCrossedHcalRecHits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsEta = cms.double( 3.0 ),
    minPt = cms.double( 8.0 ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links' ),
    addExtraSoftMuons = cms.bool( False ),
    fillGlobalTrackRefits = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    inputCollectionLabels = cms.VInputTag( 'hltDiMuonMerging','hltDiMuonLinks' ),
    fillCaloCompatibility = cms.bool( False ),
    maxAbsPullY = cms.double( 9999.0 ),
    maxAbsDy = cms.double( 9999.0 ),
    minP = cms.double( 0.0 ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDx = cms.double( 3.0 ),
    fillIsolation = cms.bool( False ),
    writeIsoDeposits = cms.bool( False ),
    minNumberOfMatches = cms.int32( 1 ),
    fillMatching = cms.bool( True ),
    fillShowerDigis = cms.bool( False ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    fillGlobalTrackQuality = cms.bool( False ),
    globalTrackQualityInputTag = cms.InputTag( "" ),
    selectHighPurity = cms.bool( False ),
    pvInputTag = cms.InputTag( "" ),
    fillTrackerKink = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    runArbitrationCleaner = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    arbitrateTrackerMuons = cms.bool( False )
)
process.hltGlbTrkMuonCands = cms.EDProducer( "L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag( "hltGlbTrkMuons" ),
    DisplacedReconstruction = cms.bool( False )
)
process.hltDiMuonGlbFiltered37TrkFiltered27 = cms.EDFilter( "HLTDiMuonGlbTrkFilter",
    saveTags = cms.bool( True ),
    inputMuonCollection = cms.InputTag( "hltGlbTrkMuons" ),
    inputCandCollection = cms.InputTag( "hltGlbTrkMuonCands" ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    maxNormalizedChi2 = cms.double( 1.0E99 ),
    minDR = cms.double( 0.001 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    trkMuonId = cms.uint32( 0 ),
    minPtMuon1 = cms.double( 37.0 ),
    minPtMuon2 = cms.double( 27.0 ),
    maxEtaMuon = cms.double( 1.0E99 ),
    maxYDimuon = cms.double( 1.0E99 ),
    minMass = cms.double( 1.0 ),
    maxMass = cms.double( 1.0E99 ),
    ChargeOpt = cms.int32( 0 ),
    maxDCAMuMu = cms.double( 1.0E99 ),
    maxdEtaMuMu = cms.double( 1.0E99 )
)
process.hltDiMuonGlb37Trk27DzFiltered0p2 = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltGlbTrkMuonCands' ),
    originTag2 = cms.VInputTag( 'hltGlbTrkMuonCands' ),
    inputTag1 = cms.InputTag( "hltDiMuonGlbFiltered37TrkFiltered27" ),
    inputTag2 = cms.InputTag( "hltDiMuonGlbFiltered37TrkFiltered27" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    MinN = cms.int32( 1 ),
    MinPixHitsForDZ = cms.int32( 0 ),
    checkSC = cms.bool( False )
)
process.hltL1sDoubleMu3SQHTT200 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleMu3_SQ_HTT220er" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDoubleMu4Mass3p8DZPFHT350 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDoubleMuon4L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMu3SQHTT200" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 2 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltDoubleMuon4L2PreFiltered0 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltDoubleMuon4L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3DoubleMuon4L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltDoubleMuon4L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1DiMu3SQHT200L3PreFiltered4 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltDoubleMuon4L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3DoubleMuon4L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 4.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDoubleMuon4Mass3p8Filtered = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltDoubleMuon4L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3DoubleMuon4L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 4.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 3.8 ),
    MaxInvMass = cms.vdouble( 9999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDoubleMu4Mass3p8DZFilter = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    inputTag1 = cms.InputTag( "hltDoubleMuon4Mass3p8Filtered" ),
    inputTag2 = cms.InputTag( "hltDoubleMuon4Mass3p8Filtered" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    MinN = cms.int32( 1 ),
    MinPixHitsForDZ = cms.int32( 0 ),
    checkSC = cms.bool( False )
)
process.hltPFHTJet30 = cms.EDProducer( "HLTHtMhtProducer",
    usePt = cms.bool( True ),
    excludePFMuons = cms.bool( False ),
    minNJetHt = cms.int32( 0 ),
    minNJetMht = cms.int32( 0 ),
    minPtJetHt = cms.double( 30.0 ),
    minPtJetMht = cms.double( 0.0 ),
    maxEtaJetHt = cms.double( 2.5 ),
    maxEtaJetMht = cms.double( 999.0 ),
    jetsLabel = cms.InputTag( "hltAK4PFJetsCorrected" ),
    pfCandidatesLabel = cms.InputTag( "hltParticleFlow" )
)
process.hltPFHT350Jet30 = cms.EDFilter( "HLTHtMhtFilter",
    saveTags = cms.bool( True ),
    htLabels = cms.VInputTag( 'hltPFHTJet30' ),
    mhtLabels = cms.VInputTag( 'hltPFHTJet30' ),
    minHt = cms.vdouble( 350.0 ),
    minMht = cms.vdouble( 0.0 ),
    minMeff = cms.vdouble( 0.0 ),
    meffSlope = cms.vdouble( 1.0 )
)
process.hltL1sSingleMu3IorMu3Jet30er2p5 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu3 OR L1_Mu3_Jet30er2p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu3PFJet40 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu3Jet30L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu3IorMu3Jet30er2p5" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMu3L1f0L2Filtered0 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu3Jet30L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu3L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu3Jet30L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sMu3L1f0L2f0L3Filtered3 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu3L1f0L2Filtered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu3L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 3.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltMu3JetCollectionsForLeptonPlusPFJets = cms.EDProducer( "HLTPFJetsCleanedFromLeadingLeptons",
    leptons = cms.InputTag( "hltL3fL1sMu3L1f0L2f0L3Filtered3" ),
    jets = cms.InputTag( "hltAK4PFJetsCorrected" ),
    minDeltaR = cms.double( 1.0 ),
    numLeptons = cms.uint32( 1 )
)
process.hltMu3PFJet40MuCleaned = cms.EDFilter( "HLTPFJetCollectionsFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltMu3JetCollectionsForLeptonPlusPFJets" ),
    originalTag = cms.InputTag( "hltAK4PFJetsCorrected" ),
    MinJetPt = cms.double( 40.0 ),
    MaxAbsJetEta = cms.double( 2.5 ),
    MinNJets = cms.uint32( 1 ),
    triggerType = cms.int32( 85 )
)
process.hltL1sSingleMu18 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu18" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreIsoMu20 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu18L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu18" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMu18L1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu18L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu18L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu18L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sMu18L1f0L2f10QL3Filtered20Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu18L1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu18L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 20.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sMu18L1f0L2f10QL3Filtered20QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sMu18L1f0L2f10QL3Filtered20Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3fL1sMu18L1f0L2f10QL3Filtered20QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sMu18L1f0L2f10QL3Filtered20QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sMu18L1f0L2f10QL3f20QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sMu18L1f0L2f10QL3Filtered20QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltL1sSingleMu22 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu22" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreIsoMu24 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu22L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu22" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sSingleMu22L1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu22L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sSingleMu22L1f0L2f10QL3Filtered24Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sSingleMu22L1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu22L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sSingleMu22L1f0L2f10QL3Filtered24Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltPreIsoMu24eta2p1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu22erL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu22" ),
    MaxEta = cms.double( 2.1 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sSingleMu22erL1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22erL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.16 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu22erL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22erL1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sSingleMu22erL1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu22erL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.1 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltPreIsoMu27 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu22or25L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu22or25" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMu22or25L1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22or25L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22or25L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu22or25L1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu22or25L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 27.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f27QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltL1sDoubleMuORTripleMuORDoubleMu0upt = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleMu_15_5_SQ OR L1_DoubleMu_15_7 OR L1_TripleMu_5_3_3 OR L1_DoubleMu0er1p4_SQ_OS_dR_Max1p4 OR L1_DoubleMu0er1p5_SQ_OS_dR_Max1p4 OR L1_DoubleMu4p5_SQ_OS_dR_Max1p2 OR L1_DoubleMu0_Upt15_Upt7 OR L1_DoubleMu0_Upt6_IP_Min1_Upt4 OR L1_DoubleMu6_Upt6_SQ_er2p0 OR L1_DoubleMu7_Upt7_SQ_er2p0 OR L1_DoubleMu8_Upt8_SQ_er2p0 OR L1_DoubleMu0_Upt6_SQ_er2p0 OR L1_DoubleMu0_Upt7_SQ_er2p0 OR L1_DoubleMu0_Upt8_SQ_er2p0" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDoubleL2Mu30NoVtx2ChaCosmicSeedEta2p4 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMuORTripleMuORDoubleMu0upt" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 2 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltDt4DSegmentsMeanTimer = cms.EDProducer( "DTRecSegment4DProducer",
    Reco4DAlgoName = cms.string( "DTMeantimerPatternReco4D" ),
    Reco4DAlgoConfig = cms.PSet( 
      Reco2DAlgoConfig = cms.PSet( 
        AlphaMaxPhi = cms.double( 1.0 ),
        debug = cms.untracked.bool( False ),
        segmCleanerMode = cms.int32( 2 ),
        AlphaMaxTheta = cms.double( 0.9 ),
        hit_afterT0_resolution = cms.double( 0.03 ),
        performT0_vdriftSegCorrection = cms.bool( False ),
        recAlgo = cms.string( "DTLinearDriftFromDBAlgo" ),
        MaxChi2 = cms.double( 4.0 ),
        recAlgoConfig = cms.PSet( 
          maxTime = cms.double( 420.0 ),
          debug = cms.untracked.bool( False ),
          stepTwoFromDigi = cms.bool( False ),
          tTrigModeConfig = cms.PSet( 
            debug = cms.untracked.bool( False ),
            tofCorrType = cms.int32( 0 ),
            tTrigLabel = cms.string( "" ),
            wirePropCorrType = cms.int32( 0 ),
            doTOFCorrection = cms.bool( True ),
            vPropWire = cms.double( 24.4 ),
            doT0Correction = cms.bool( True ),
            doWirePropCorrection = cms.bool( True ),
            t0Label = cms.string( "" )
          ),
          useUncertDB = cms.bool( True ),
          doVdriftCorr = cms.bool( True ),
          minTime = cms.double( -3.0 ),
          tTrigMode = cms.string( "DTTTrigSyncFromDB" ),
          readLegacyTTrigDB = cms.bool( True ),
          readLegacyVDriftDB = cms.bool( True )
        ),
        MaxAllowedHits = cms.uint32( 50 ),
        nUnSharedHitsMin = cms.int32( 2 ),
        nSharedHitsMax = cms.int32( 2 ),
        performT0SegCorrection = cms.bool( False ),
        perform_delta_rejecting = cms.bool( False )
      ),
      Reco2DAlgoName = cms.string( "DTMeantimerPatternReco" ),
      debug = cms.untracked.bool( False ),
      segmCleanerMode = cms.int32( 2 ),
      AllDTRecHits = cms.bool( True ),
      hit_afterT0_resolution = cms.double( 0.03 ),
      performT0_vdriftSegCorrection = cms.bool( False ),
      recAlgo = cms.string( "DTLinearDriftFromDBAlgo" ),
      recAlgoConfig = cms.PSet( 
        maxTime = cms.double( 420.0 ),
        debug = cms.untracked.bool( False ),
        stepTwoFromDigi = cms.bool( False ),
        tTrigModeConfig = cms.PSet( 
          debug = cms.untracked.bool( False ),
          tofCorrType = cms.int32( 0 ),
          tTrigLabel = cms.string( "" ),
          wirePropCorrType = cms.int32( 0 ),
          doTOFCorrection = cms.bool( True ),
          vPropWire = cms.double( 24.4 ),
          doT0Correction = cms.bool( True ),
          doWirePropCorrection = cms.bool( True ),
          t0Label = cms.string( "" )
        ),
        useUncertDB = cms.bool( True ),
        doVdriftCorr = cms.bool( True ),
        minTime = cms.double( -3.0 ),
        tTrigMode = cms.string( "DTTTrigSyncFromDB" ),
        readLegacyTTrigDB = cms.bool( True ),
        readLegacyVDriftDB = cms.bool( True )
      ),
      nUnSharedHitsMin = cms.int32( 2 ),
      nSharedHitsMax = cms.int32( 2 ),
      performT0SegCorrection = cms.bool( False ),
      perform_delta_rejecting = cms.bool( False )
    ),
    debug = cms.untracked.bool( False ),
    recHits1DLabel = cms.InputTag( "hltDt1DRecHits" ),
    recHits2DLabel = cms.InputTag( "dt2DSegments" )
)
process.hltL2CosmicOfflineMuonSeeds = cms.EDProducer( "CosmicMuonSeedGenerator",
    MaxSeeds = cms.int32( 1000 ),
    CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
    EnableDTMeasurement = cms.bool( True ),
    MaxCSCChi2 = cms.double( 300.0 ),
    MaxDTChi2 = cms.double( 300.0 ),
    DTRecSegmentLabel = cms.InputTag( "hltDt4DSegmentsMeanTimer" ),
    EnableCSCMeasurement = cms.bool( True ),
    ForcePointDown = cms.bool( False )
)
process.hltL2CosmicMuonSeeds = cms.EDProducer( "L2MuonSeedGeneratorFromL1T",
    GMTReadoutCollection = cms.InputTag( "" ),
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    Propagator = cms.string( "SteppingHelixPropagatorAny" ),
    L1MinPt = cms.double( 0.0 ),
    L1MaxEta = cms.double( 2.5 ),
    L1MinQuality = cms.uint32( 1 ),
    SetMinPtBarrelTo = cms.double( 3.5 ),
    SetMinPtEndcapTo = cms.double( 1.0 ),
    UseOfflineSeed = cms.untracked.bool( True ),
    UseUnassociatedL1 = cms.bool( False ),
    MatchDR = cms.vdouble( 0.3 ),
    EtaMatchingBins = cms.vdouble( 0.0, 2.5 ),
    CentralBxOnly = cms.bool( True ),
    MatchType = cms.uint32( 0 ),
    SortType = cms.uint32( 0 ),
    OfflineSeedLabel = cms.untracked.InputTag( "hltL2CosmicOfflineMuonSeeds" ),
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'SteppingHelixPropagatorAny' )
    )
)
process.hltL2CosmicMuons = cms.EDProducer( "L2MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny',
        'hltESPFastSteppingHelixPropagatorOpposite' )
    ),
    InputObjects = cms.InputTag( "hltL2CosmicMuonSeeds" ),
    SeedTransformerParameters = cms.PSet( 
      Fitter = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
      NMinRecHits = cms.uint32( 2 ),
      RescaleError = cms.double( 100.0 ),
      Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      UseSubRecHits = cms.bool( False ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
    ),
    L2TrajBuilderParameters = cms.PSet( 
      BWFilterParameters = cms.PSet( 
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegmentsMeanTimer" ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        BWSeedType = cms.string( "fromGenerator" ),
        GEMRecSegmentLabel = cms.InputTag( "hltGemRecHits" ),
        RPCRecSegmentLabel = cms.InputTag( "hltRpcRecHits" ),
        EnableGEMMeasurement = cms.bool( True ),
        EnableRPCMeasurement = cms.bool( True ),
        MuonTrajectoryUpdatorParameters = cms.PSet( 
          ExcludeRPCFromFit = cms.bool( False ),
          Granularity = cms.int32( 0 ),
          MaxChi2 = cms.double( 25.0 ),
          RescaleError = cms.bool( False ),
          RescaleErrorFactor = cms.double( 100.0 ),
          UseInvalidHits = cms.bool( True )
        ),
        EnableCSCMeasurement = cms.bool( True ),
        MaxChi2 = cms.double( 100.0 ),
        FitDirection = cms.string( "outsideIn" ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        NumberOfSigma = cms.double( 3.0 ),
        EnableDTMeasurement = cms.bool( True )
      ),
      DoSeedRefit = cms.bool( False ),
      FilterParameters = cms.PSet( 
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegmentsMeanTimer" ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        GEMRecSegmentLabel = cms.InputTag( "hltGemRecHits" ),
        RPCRecSegmentLabel = cms.InputTag( "hltRpcRecHits" ),
        EnableGEMMeasurement = cms.bool( True ),
        EnableRPCMeasurement = cms.bool( True ),
        MuonTrajectoryUpdatorParameters = cms.PSet( 
          ExcludeRPCFromFit = cms.bool( False ),
          Granularity = cms.int32( 0 ),
          MaxChi2 = cms.double( 25.0 ),
          RescaleError = cms.bool( False ),
          RescaleErrorFactor = cms.double( 100.0 ),
          UseInvalidHits = cms.bool( True )
        ),
        EnableCSCMeasurement = cms.bool( True ),
        MaxChi2 = cms.double( 1000.0 ),
        FitDirection = cms.string( "insideOut" ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        NumberOfSigma = cms.double( 3.0 ),
        EnableDTMeasurement = cms.bool( True )
      ),
      SeedPosition = cms.string( "in" ),
      DoBackwardFilter = cms.bool( True ),
      DoRefit = cms.bool( False ),
      NavigationType = cms.string( "Standard" ),
      SeedTransformerParameters = cms.PSet( 
        Fitter = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
        NMinRecHits = cms.uint32( 2 ),
        RescaleError = cms.double( 100.0 ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        UseSubRecHits = cms.bool( False ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      SeedPropagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" )
    ),
    DoSeedRefit = cms.bool( False ),
    TrackLoaderParameters = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( False ),
      VertexConstraint = cms.bool( True ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        BeamSpotPosition = cms.vdouble( 0.0, 0.0, 0.0 ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" )
      ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    MuonTrajectoryBuilder = cms.string( "StandAloneMuonTrajectoryBuilder" )
)
process.hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed = cms.EDProducer( "L2MuonCandidateProducer",
    InputObjects = cms.InputTag( "hltL2CosmicMuons" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx30Q2ChaCosmicSeedEta2p4 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2CosmicMuons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.4 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 2 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2Mu30NoVtx2ChaEta2p4 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx30Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.9, 1.5, 2.1, 5.0 ),
    MinNstations = cms.vint32( 0, 2, 0, 2 ),
    MinNhits = cms.vint32( 0, 1, 0, 1 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL2DoubleMu30NoVtxFiltered2ChaEta2p4 = cms.EDFilter( "HLTMuonDimuonL2FromL1TFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMuORTripleMuORDoubleMu0upt" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    FastAccept = cms.bool( False ),
    MaxEta = cms.double( 2.4 ),
    MinNhits = cms.int32( 0 ),
    MinNstations = cms.int32( 0 ),
    MinNchambers = cms.int32( 2 ),
    MaxDr = cms.double( 100.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.double( 0.0 ),
    MinPtMax = cms.double( 30.0 ),
    MinPtMin = cms.double( 30.0 ),
    MinInvMass = cms.double( -999999.0 ),
    MaxInvMass = cms.double( 999999.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 3.15 ),
    MinAngle = cms.double( -999.0 ),
    MaxAngle = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 )
)
process.hltL1sSingleMuOR = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu3 OR L1_SingleMu5 OR L1_SingleMu7 OR L1_SingleMu18 OR L1_SingleMu20 OR L1_SingleMu22 OR L1_SingleMu25" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDoubleL2Mu50 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMuORL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMuOR" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2MuonSeedsAllBx = cms.EDProducer( "L2MuonSeedGeneratorFromL1T",
    GMTReadoutCollection = cms.InputTag( "" ),
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    Propagator = cms.string( "SteppingHelixPropagatorAny" ),
    L1MinPt = cms.double( 0.0 ),
    L1MaxEta = cms.double( 2.5 ),
    L1MinQuality = cms.uint32( 7 ),
    SetMinPtBarrelTo = cms.double( 3.5 ),
    SetMinPtEndcapTo = cms.double( 1.0 ),
    UseOfflineSeed = cms.untracked.bool( True ),
    UseUnassociatedL1 = cms.bool( False ),
    MatchDR = cms.vdouble( 0.3 ),
    EtaMatchingBins = cms.vdouble( 0.0, 2.5 ),
    CentralBxOnly = cms.bool( False ),
    MatchType = cms.uint32( 0 ),
    SortType = cms.uint32( 0 ),
    OfflineSeedLabel = cms.untracked.InputTag( "hltL2OfflineMuonSeeds" ),
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'SteppingHelixPropagatorAny' )
    )
)
process.hltL2MuonsAllBx = cms.EDProducer( "L2MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny',
        'hltESPFastSteppingHelixPropagatorOpposite' )
    ),
    InputObjects = cms.InputTag( "hltL2MuonSeedsAllBx" ),
    SeedTransformerParameters = cms.PSet( 
      Fitter = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
      NMinRecHits = cms.uint32( 2 ),
      RescaleError = cms.double( 100.0 ),
      Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      UseSubRecHits = cms.bool( False ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
    ),
    L2TrajBuilderParameters = cms.PSet( 
      BWFilterParameters = cms.PSet( 
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        BWSeedType = cms.string( "fromGenerator" ),
        GEMRecSegmentLabel = cms.InputTag( "hltGemRecHits" ),
        RPCRecSegmentLabel = cms.InputTag( "hltRpcRecHits" ),
        EnableGEMMeasurement = cms.bool( True ),
        EnableRPCMeasurement = cms.bool( True ),
        MuonTrajectoryUpdatorParameters = cms.PSet( 
          ExcludeRPCFromFit = cms.bool( False ),
          Granularity = cms.int32( 0 ),
          MaxChi2 = cms.double( 25.0 ),
          RescaleError = cms.bool( False ),
          RescaleErrorFactor = cms.double( 100.0 ),
          UseInvalidHits = cms.bool( True )
        ),
        EnableCSCMeasurement = cms.bool( True ),
        MaxChi2 = cms.double( 100.0 ),
        FitDirection = cms.string( "outsideIn" ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        NumberOfSigma = cms.double( 3.0 ),
        EnableDTMeasurement = cms.bool( True )
      ),
      DoSeedRefit = cms.bool( False ),
      FilterParameters = cms.PSet( 
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        GEMRecSegmentLabel = cms.InputTag( "hltGemRecHits" ),
        RPCRecSegmentLabel = cms.InputTag( "hltRpcRecHits" ),
        EnableGEMMeasurement = cms.bool( True ),
        EnableRPCMeasurement = cms.bool( True ),
        MuonTrajectoryUpdatorParameters = cms.PSet( 
          ExcludeRPCFromFit = cms.bool( False ),
          Granularity = cms.int32( 0 ),
          MaxChi2 = cms.double( 25.0 ),
          RescaleError = cms.bool( False ),
          RescaleErrorFactor = cms.double( 100.0 ),
          UseInvalidHits = cms.bool( True )
        ),
        EnableCSCMeasurement = cms.bool( True ),
        MaxChi2 = cms.double( 1000.0 ),
        FitDirection = cms.string( "insideOut" ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        NumberOfSigma = cms.double( 3.0 ),
        EnableDTMeasurement = cms.bool( True )
      ),
      SeedPosition = cms.string( "in" ),
      DoBackwardFilter = cms.bool( True ),
      DoRefit = cms.bool( False ),
      NavigationType = cms.string( "Standard" ),
      SeedTransformerParameters = cms.PSet( 
        Fitter = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
        NMinRecHits = cms.uint32( 2 ),
        RescaleError = cms.double( 100.0 ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
        UseSubRecHits = cms.bool( False ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      SeedPropagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" )
    ),
    DoSeedRefit = cms.bool( False ),
    TrackLoaderParameters = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( False ),
      VertexConstraint = cms.bool( True ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        BeamSpotPosition = cms.vdouble( 0.0, 0.0, 0.0 ),
        Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" )
      ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    MuonTrajectoryBuilder = cms.string( "Exhaustive" )
)
process.hltL2MuonCandidatesAllBx = cms.EDProducer( "L2MuonCandidateProducer",
    InputObjects = cms.InputTag( 'hltL2MuonsAllBx','UpdatedAtVtx' )
)
process.hltL2fL1sMuORL1f0DoubleL2AllBxFiltered50Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesAllBx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMuORL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2MuonsAllBx" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.9, 1.5, 2.1, 5.0 ),
    MinNstations = cms.vint32( 0, 2, 0, 2 ),
    MinNhits = cms.vint32( 0, 1, 0, 1 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2Mu23NoVtx2ChaCosmicSeed = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx23Q2ChaCosmicSeed = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2CosmicMuons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.0 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 2 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 23.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2Mu25NoVtx2ChaCosmicSeed = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx25Q2ChaCosmicSeed = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2CosmicMuons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.0 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 2 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 25.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2Mu25NoVtx2ChaCosmicSeedEta2p4 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx25Q2ChaCosmicSeedEta2p4 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2CosmicMuons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.4 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 2 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 25.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2Mu23NoVtx2Cha = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx23Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.9, 1.5, 2.1, 5.0 ),
    MinNstations = cms.vint32( 0, 2, 0, 2 ),
    MinNhits = cms.vint32( 0, 1, 0, 1 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 23.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL2DoubleMu23NoVertexL2Filtered2Cha = cms.EDFilter( "HLTMuonDimuonL2FromL1TFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMuORTripleMuORDoubleMu0upt" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    FastAccept = cms.bool( False ),
    MaxEta = cms.double( 2.0 ),
    MinNhits = cms.int32( 0 ),
    MinNstations = cms.int32( 0 ),
    MinNchambers = cms.int32( 2 ),
    MaxDr = cms.double( 100.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.double( 0.0 ),
    MinPtMax = cms.double( 23.0 ),
    MinPtMin = cms.double( 23.0 ),
    MinInvMass = cms.double( -9999.0 ),
    MaxInvMass = cms.double( 9999.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 3.15 ),
    MinAngle = cms.double( -999.0 ),
    MaxAngle = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 )
)
process.hltPreDoubleL2Mu25NoVtx2Cha = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx25Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.9, 1.5, 2.1, 5.0 ),
    MinNstations = cms.vint32( 0, 2, 0, 2 ),
    MinNhits = cms.vint32( 0, 1, 0, 1 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 25.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL2DoubleMu25NoVtxFiltered2Cha = cms.EDFilter( "HLTMuonDimuonL2FromL1TFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMuORTripleMuORDoubleMu0upt" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    FastAccept = cms.bool( False ),
    MaxEta = cms.double( 2.0 ),
    MinNhits = cms.int32( 0 ),
    MinNstations = cms.int32( 0 ),
    MinNchambers = cms.int32( 2 ),
    MaxDr = cms.double( 100.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.double( 0.0 ),
    MinPtMax = cms.double( 25.0 ),
    MinPtMin = cms.double( 25.0 ),
    MinInvMass = cms.double( -999999.0 ),
    MaxInvMass = cms.double( 999999.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 3.15 ),
    MinAngle = cms.double( -999.0 ),
    MaxAngle = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 )
)
process.hltPreDoubleL2Mu25NoVtx2ChaEta2p4 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2DoubleMu25NoVtxFiltered2ChaEta2p4 = cms.EDFilter( "HLTMuonDimuonL2FromL1TFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMuORTripleMuORDoubleMu0upt" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    FastAccept = cms.bool( False ),
    MaxEta = cms.double( 2.4 ),
    MinNhits = cms.int32( 0 ),
    MinNstations = cms.int32( 0 ),
    MinNchambers = cms.int32( 2 ),
    MaxDr = cms.double( 100.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.double( 0.0 ),
    MinPtMax = cms.double( 25.0 ),
    MinPtMin = cms.double( 25.0 ),
    MinInvMass = cms.double( -999999.0 ),
    MaxInvMass = cms.double( 999999.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 3.15 ),
    MinAngle = cms.double( -999.0 ),
    MaxAngle = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 )
)
process.hltL1sDoubleMu125to157 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleMu_12_5 OR L1_DoubleMu_15_7" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu17TrkIsoVVLMu8TrkIsoVVL = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sDoubleMu155L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMu125to157" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 2 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu155L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu155L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu155L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1DoubleMu155fPreFiltered8 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu155L1f0L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 8.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1DoubleMu155fFiltered17 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 17.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3MuonRelTrkIsolationVVL = cms.EDProducer( "L3MuonCombinedRelativeIsolationProducer",
    UseRhoCorrectedCaloDeposits = cms.bool( False ),
    UseCaloIso = cms.bool( False ),
    CaloDepositsLabel = cms.InputTag( "notUsed" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonCandidates" ),
    OutputMuIsoDeposits = cms.bool( True ),
    TrackPt_Min = cms.double( -1.0 ),
    printDebug = cms.bool( False ),
    CutsPSet = cms.PSet( 
      applyCutsORmaxNTracks = cms.bool( False ),
      maxNTracks = cms.int32( -1 ),
      Thresholds = cms.vdouble( 0.4 ),
      EtaBounds = cms.vdouble( 2.411 ),
      ComponentName = cms.string( "SimpleCuts" ),
      ConeSizes = cms.vdouble( 0.3 )
    ),
    TrkExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter0L3MuonTrackSelectionHighPurity" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      VetoLeadingTrack = cms.bool( False ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "PXLS" ),
      PtVeto_Min = cms.double( 2.0 ),
      NHits_Min = cms.uint32( 0 ),
      PropagateTracksToRadius = cms.bool( False ),
      ReferenceRadius = cms.double( 6.0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "PixelTrackExtractor" ),
      DR_VetoPt = cms.double( 0.025 )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      Vertex_Constraint_Z = cms.bool( False ),
      DR_Veto_E = cms.double( 0.07 ),
      Weight_H = cms.double( 1.0 ),
      CaloTowerCollectionLabel = cms.InputTag( "notUsed" ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "EcalPlusHcal" ),
      Vertex_Constraint_XY = cms.bool( False ),
      Threshold_H = cms.double( 0.5 ),
      Threshold_E = cms.double( 0.2 ),
      ComponentName = cms.string( "CaloExtractor" ),
      Weight_E = cms.double( 1.0 )
    )
)
process.hltDiMuon178RelTrkIsoVVLFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1DoubleMu155fPreFiltered8" ),
    MinN = cms.int32( 2 ),
    DepTag = cms.VInputTag( 'hltL3MuonRelTrkIsolationVVL' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltPreMu19TrkIsoVVLMu9TrkIsoVVL = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1DoubleMu155fPreFiltered9 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu155L1f0L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 9.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1DoubleMu155fFiltered19 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 19.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDiMuon199RelTrkIsoVVLFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1DoubleMu155fPreFiltered9" ),
    MinN = cms.int32( 2 ),
    DepTag = cms.VInputTag( 'hltL3MuonRelTrkIsolationVVL' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZ = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDiMuon178RelTrkIsoVVLFilteredDzFiltered0p2 = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    inputTag1 = cms.InputTag( "hltDiMuon178RelTrkIsoVVLFiltered" ),
    inputTag2 = cms.InputTag( "hltDiMuon178RelTrkIsoVVLFiltered" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    MinN = cms.int32( 1 ),
    MinPixHitsForDZ = cms.int32( 0 ),
    checkSC = cms.bool( False )
)
process.hltPreMu19TrkIsoVVLMu9TrkIsoVVLDZ = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDiMuon199RelTrkIsoVVLFilteredDzFiltered0p2 = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    inputTag1 = cms.InputTag( "hltDiMuon199RelTrkIsoVVLFiltered" ),
    inputTag2 = cms.InputTag( "hltDiMuon199RelTrkIsoVVLFiltered" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    MinN = cms.int32( 1 ),
    MinPixHitsForDZ = cms.int32( 0 ),
    checkSC = cms.bool( False )
)
process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDiMuon178Mass8Filtered = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu155L1f0L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 8.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 8.0 ),
    MaxInvMass = cms.vdouble( 9999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8PFJet30 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltAK4CaloJets = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltTowerMakerForAll" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.4 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( True ),
    voronoiRfact = cms.double( 0.9 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 14327 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK4CaloJetsIDPassed = cms.EDProducer( "HLTCaloJetIDProducer",
    min_N90 = cms.int32( -2 ),
    min_N90hits = cms.int32( 2 ),
    min_EMF = cms.double( 1.0E-6 ),
    max_EMF = cms.double( 999.0 ),
    jetsInput = cms.InputTag( "hltAK4CaloJets" ),
    JetIDParams = cms.PSet( 
      hfRecHitsColl = cms.InputTag( "hltHfreco" ),
      hoRecHitsColl = cms.InputTag( "hltHoreco" ),
      ebRecHitsColl = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      hbheRecHitsColl = cms.InputTag( "hltHbhereco" ),
      useRecHits = cms.bool( True ),
      eeRecHitsColl = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' )
    )
)
process.hltAK4CaloFastJetCorrector = cms.EDProducer( "L1FastjetCorrectorProducer",
    level = cms.string( "L1FastJet" ),
    algorithm = cms.string( "AK4CaloHLT" ),
    srcRho = cms.InputTag( "hltFixedGridRhoFastjetAllCalo" )
)
process.hltAK4CaloRelativeCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L2Relative" ),
    algorithm = cms.string( "AK4CaloHLT" )
)
process.hltAK4CaloAbsoluteCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L3Absolute" ),
    algorithm = cms.string( "AK4CaloHLT" )
)
process.hltAK4CaloResidualCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L2L3Residual" ),
    algorithm = cms.string( "AK4CaloHLT" )
)
process.hltAK4CaloCorrector = cms.EDProducer( "ChainedJetCorrectorProducer",
    correctors = cms.VInputTag( 'hltAK4CaloFastJetCorrector','hltAK4CaloRelativeCorrector','hltAK4CaloAbsoluteCorrector','hltAK4CaloResidualCorrector' )
)
process.hltAK4CaloJetsCorrected = cms.EDProducer( "CorrectedCaloJetProducer",
    src = cms.InputTag( "hltAK4CaloJets" ),
    correctors = cms.VInputTag( 'hltAK4CaloCorrector' )
)
process.hltAK4CaloJetsCorrectedIDPassed = cms.EDProducer( "CorrectedCaloJetProducer",
    src = cms.InputTag( "hltAK4CaloJetsIDPassed" ),
    correctors = cms.VInputTag( 'hltAK4CaloCorrector' )
)
process.hltSingleCaloJet10 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4CaloJetsCorrectedIDPassed" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 5.0 ),
    MinN = cms.int32( 1 )
)
process.hltPFJetsCorrectedMatchedToCaloJets10 = cms.EDProducer( "HLTPFJetsMatchedToFilteredCaloJetsProducer",
    src = cms.InputTag( "hltAK4PFJetsCorrected" ),
    triggerJetsFilter = cms.InputTag( "hltSingleCaloJet10" ),
    triggerJetsType = cms.int32( 85 ),
    maxDeltaR = cms.double( 0.5 )
)
process.hltSinglePFJet30 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFJetsCorrectedMatchedToCaloJets10" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 5.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreMu19TrkIsoVVLMu9TrkIsoVVLDZMass8 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDiMuon199Mass8Filtered = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu155L1f0L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 19.0 ),
    MinPtMin = cms.vdouble( 8.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 8.0 ),
    MaxInvMass = cms.vdouble( 9999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass3p8 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDiMuon178Mass3p8Filtered = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu155L1f0L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 8.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 3.8 ),
    MaxInvMass = cms.vdouble( 9999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8CaloJet30 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSingleCaloJet30 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4CaloJetsCorrectedIDPassed" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 5.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8AK8PFJet30 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltAK8CaloJets = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltTowerMakerForAll" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.8 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.8 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( True ),
    voronoiRfact = cms.double( 0.9 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 14327 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK8CaloJetsIDPassed = cms.EDProducer( "HLTCaloJetIDProducer",
    min_N90 = cms.int32( -2 ),
    min_N90hits = cms.int32( 2 ),
    min_EMF = cms.double( 1.0E-6 ),
    max_EMF = cms.double( 999.0 ),
    jetsInput = cms.InputTag( "hltAK8CaloJets" ),
    JetIDParams = cms.PSet( 
      hfRecHitsColl = cms.InputTag( "hltHfreco" ),
      hoRecHitsColl = cms.InputTag( "hltHoreco" ),
      ebRecHitsColl = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      hbheRecHitsColl = cms.InputTag( "hltHbhereco" ),
      useRecHits = cms.bool( True ),
      eeRecHitsColl = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' )
    )
)
process.hltAK8CaloFastJetCorrector = cms.EDProducer( "L1FastjetCorrectorProducer",
    level = cms.string( "L1FastJet" ),
    algorithm = cms.string( "AK8CaloHLT" ),
    srcRho = cms.InputTag( "hltFixedGridRhoFastjetAllCalo" )
)
process.hltAK8CaloRelativeCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L2Relative" ),
    algorithm = cms.string( "AK8CaloHLT" )
)
process.hltAK8CaloAbsoluteCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L3Absolute" ),
    algorithm = cms.string( "AK8CaloHLT" )
)
process.hltAK8CaloResidualCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L2L3Residual" ),
    algorithm = cms.string( "AK8CaloHLT" )
)
process.hltAK8CaloCorrector = cms.EDProducer( "ChainedJetCorrectorProducer",
    correctors = cms.VInputTag( 'hltAK8CaloFastJetCorrector','hltAK8CaloRelativeCorrector','hltAK8CaloAbsoluteCorrector','hltAK8CaloResidualCorrector' )
)
process.hltAK8CaloJetsCorrected = cms.EDProducer( "CorrectedCaloJetProducer",
    src = cms.InputTag( "hltAK8CaloJets" ),
    correctors = cms.VInputTag( 'hltAK8CaloCorrector' )
)
process.hltAK8CaloJetsCorrectedIDPassed = cms.EDProducer( "CorrectedCaloJetProducer",
    src = cms.InputTag( "hltAK8CaloJetsIDPassed" ),
    correctors = cms.VInputTag( 'hltAK8CaloCorrector' )
)
process.hltSingleCaloJet10AK8 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK8CaloJetsCorrectedIDPassed" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 5.0 ),
    MinN = cms.int32( 1 )
)
process.hltAK8CaloJetsPF = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltTowerMakerForAll" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.8 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.8 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK8CaloJetsPFEt5 = cms.EDFilter( "EtMinCaloJetSelector",
    src = cms.InputTag( "hltAK8CaloJetsPF" ),
    filter = cms.bool( False ),
    etMin = cms.double( 5.0 )
)
process.hltAK8PFJets = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 0 ),
    src = cms.InputTag( "hltParticleFlow" ),
    srcPVs = cms.InputTag( "hltPixelVertices" ),
    jetType = cms.string( "PFJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.8 ),
    inputEtMin = cms.double( 0.0 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 0.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.8 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( True ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK8PFJetsLooseID = cms.EDProducer( "HLTPFJetIDProducer",
    minPt = cms.double( 20.0 ),
    maxEta = cms.double( 1.0E99 ),
    CHF = cms.double( 0.0 ),
    NHF = cms.double( 0.99 ),
    CEF = cms.double( 0.99 ),
    NEF = cms.double( 0.99 ),
    maxCF = cms.double( 99.0 ),
    NCH = cms.int32( 0 ),
    NTOT = cms.int32( 1 ),
    jetsInput = cms.InputTag( "hltAK8PFJets" )
)
process.hltAK8PFJetsTightID = cms.EDProducer( "HLTPFJetIDProducer",
    minPt = cms.double( 20.0 ),
    maxEta = cms.double( 1.0E99 ),
    CHF = cms.double( 0.0 ),
    NHF = cms.double( 0.9 ),
    CEF = cms.double( 0.99 ),
    NEF = cms.double( 0.99 ),
    maxCF = cms.double( 99.0 ),
    NCH = cms.int32( 0 ),
    NTOT = cms.int32( 1 ),
    jetsInput = cms.InputTag( "hltAK8PFJets" )
)
process.hltAK8PFFastJetCorrector = cms.EDProducer( "L1FastjetCorrectorProducer",
    level = cms.string( "L1FastJet" ),
    algorithm = cms.string( "AK8PFHLT" ),
    srcRho = cms.InputTag( "hltFixedGridRhoFastjetAll" )
)
process.hltAK8PFRelativeCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L2Relative" ),
    algorithm = cms.string( "AK8PFHLT" )
)
process.hltAK8PFAbsoluteCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L3Absolute" ),
    algorithm = cms.string( "AK8PFHLT" )
)
process.hltAK8PFResidualCorrector = cms.EDProducer( "LXXXCorrectorProducer",
    level = cms.string( "L2L3Residual" ),
    algorithm = cms.string( "AK8PFHLT" )
)
process.hltAK8PFCorrector = cms.EDProducer( "ChainedJetCorrectorProducer",
    correctors = cms.VInputTag( 'hltAK8PFFastJetCorrector','hltAK8PFRelativeCorrector','hltAK8PFAbsoluteCorrector','hltAK8PFResidualCorrector' )
)
process.hltAK8PFJetsCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK8PFJets" ),
    correctors = cms.VInputTag( 'hltAK8PFCorrector' )
)
process.hltAK8PFJetsLooseIDCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK8PFJetsLooseID" ),
    correctors = cms.VInputTag( 'hltAK8PFCorrector' )
)
process.hltAK8PFJetsTightIDCorrected = cms.EDProducer( "CorrectedPFJetProducer",
    src = cms.InputTag( "hltAK8PFJetsTightID" ),
    correctors = cms.VInputTag( 'hltAK8PFCorrector' )
)
process.hltPFJetsCorrectedMatchedToCaloJets10AK8 = cms.EDProducer( "HLTPFJetsMatchedToFilteredCaloJetsProducer",
    src = cms.InputTag( "hltAK8PFJetsCorrected" ),
    triggerJetsFilter = cms.InputTag( "hltSingleCaloJet10AK8" ),
    triggerJetsType = cms.int32( 85 ),
    maxDeltaR = cms.double( 0.5 )
)
process.hltSinglePFJet30AK8 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFJetsCorrectedMatchedToCaloJets10AK8" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 5.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8AK8CaloJet30 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSingleCaloJet30AK8 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK8CaloJetsCorrectedIDPassed" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 5.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreMu19TrkIsoVVLMu9TrkIsoVVLDZMass3p8 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDiMuon199Mass3p8Filtered = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu155L1f0L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 19.0 ),
    MinPtMin = cms.vdouble( 9.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 3.8 ),
    MaxInvMass = cms.vdouble( 9999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL1sSingleMu15DQorSingleMu7 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu15_DQ OR L1_SingleMu7" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu15 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu15DQorMu7lqL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu15DQorSingleMu7" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMu15DQorMu7lqL1f0L2Filtered10 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu15DQorMu7lqL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu15DQorMu7lqL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu15DQorMu7lqL1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sMu15DQorMu7lqL1f0L2f10L3Filtered15 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu15DQorMu7lqL1f0L2Filtered10" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu15DQorMu7lqL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 15.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreMu20 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu27 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu50 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu22or25L1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu22or25L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreMu55 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered55Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu22or25L1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu22or25L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 55.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreCascadeMu100 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fOldL1sMu22or25L1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22or25L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.9, 1.5, 2.1, 5.0 ),
    MinNstations = cms.vint32( 0, 2, 0, 2 ),
    MinNhits = cms.vint32( 0, 1, 0, 1 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3TrajSeedOIState = cms.EDProducer( "TSGFromL2Muon",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSteppingHelixPropagatorOpposite',
        'hltESPSteppingHelixPropagatorAlong' )
    ),
    MuonTrackingRegionBuilder = cms.PSet(  ),
    TrackerSeedCleaner = cms.PSet(  ),
    TkSeedGenerator = cms.PSet( 
      copyMuonRecHit = cms.bool( False ),
      propagatorName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
      MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
      errorMatrixPset = cms.PSet( 
        atIP = cms.bool( True ),
        action = cms.string( "use" ),
        errorMatrixValuesPSet = cms.PSet( 
          xAxis = cms.vdouble( 0.0, 13.0, 30.0, 70.0, 1000.0 ),
          zAxis = cms.vdouble( -3.14159, 3.14159 ),
          yAxis = cms.vdouble( 0.0, 1.0, 1.4, 10.0 ),
          pf3_V14 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V25 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V13 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V24 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V35 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V12 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V23 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V34 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V45 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V11 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V22 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V33 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V44 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V55 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V15 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          )
        )
      ),
      ComponentName = cms.string( "TSGForRoadSearch" ),
      maxChi2 = cms.double( 40.0 ),
      manySeeds = cms.bool( False ),
      propagatorCompatibleName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
      option = cms.uint32( 3 )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    PtCut = cms.double( 1.0 ),
    PCut = cms.double( 2.5 )
)
process.hltL3TrackCandidateFromL2OIState = cms.EDProducer( "CkfTrajectoryMaker",
    trackCandidateAlso = cms.bool( True ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( True ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltL3TrajSeedOIState" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 0 )
)
process.hltL3TkTracksFromL2OIState = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltL3TrackCandidateFromL2OIState" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltL3MuonsOIState = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonTrackingRegionBuilder8356" ) ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "pixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 0.2 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltL3TkTracksFromL2OIState" )
    )
)
process.hltL3TrajSeedOIHit = cms.EDProducer( "TSGFromL2Muon",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'PropagatorWithMaterial',
        'hltESPSmartPropagatorAnyOpposite' )
    ),
    MuonTrackingRegionBuilder = cms.PSet(  ),
    TrackerSeedCleaner = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      cleanerFromSharedHits = cms.bool( True ),
      directionCleaner = cms.bool( True ),
      ptCleaner = cms.bool( True )
    ),
    TkSeedGenerator = cms.PSet( 
      iterativeTSG = cms.PSet( 
        MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
        beamSpot = cms.InputTag( "unused" ),
        MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
        SelectState = cms.bool( False ),
        ErrorRescaling = cms.double( 3.0 ),
        UseVertexState = cms.bool( True ),
        SigmaZ = cms.double( 25.0 ),
        MaxChi2 = cms.double( 40.0 ),
        errorMatrixPset = cms.PSet( 
          atIP = cms.bool( True ),
          action = cms.string( "use" ),
          errorMatrixValuesPSet = cms.PSet( 
            xAxis = cms.vdouble( 0.0, 13.0, 30.0, 70.0, 1000.0 ),
            zAxis = cms.vdouble( -3.14159, 3.14159 ),
            yAxis = cms.vdouble( 0.0, 1.0, 1.4, 10.0 ),
            pf3_V14 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V25 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V13 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V24 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V35 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V12 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V23 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V34 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V45 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V11 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V22 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V33 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V44 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V55 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V15 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            )
          )
        ),
        Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
        ComponentName = cms.string( "TSGFromPropagation" ),
        UpdateState = cms.bool( True ),
        ResetMethod = cms.string( "matrix" )
      ),
      PSetNames = cms.vstring( 'skipTSG',
        'iterativeTSG' ),
      skipTSG = cms.PSet(  ),
      ComponentName = cms.string( "DualByL2TSG" ),
      L3TkCollectionA = cms.InputTag( "hltL3MuonsOIState" )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    PtCut = cms.double( 1.0 ),
    PCut = cms.double( 2.5 )
)
process.hltL3TrackCandidateFromL2OIHit = cms.EDProducer( "CkfTrajectoryMaker",
    trackCandidateAlso = cms.bool( True ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( True ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltL3TrajSeedOIHit" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 0 )
)
process.hltL3TkTracksFromL2OIHit = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltL3TrackCandidateFromL2OIHit" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltL3MuonsOIHit = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonTrackingRegionBuilder8356" ) ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "pixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 0.2 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltL3TkTracksFromL2OIHit" )
    )
)
process.hltL3TkFromL2OICombination = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3MuonsOIState','hltL3MuonsOIHit' )
)
process.hltPixelLayerPairsLegacy = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix1+BPix3',
      'BPix2+BPix3',
      'BPix1+FPix1_pos',
      'BPix1+FPix1_neg',
      'BPix1+FPix2_pos',
      'BPix1+FPix2_neg',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'BPix2+FPix2_pos',
      'BPix2+FPix2_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet(  ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltMixedLayerPairs = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'BPix1+BPix2',
      'BPix1+BPix3',
      'BPix2+BPix3',
      'BPix1+FPix1_pos',
      'BPix1+FPix1_neg',
      'BPix1+FPix2_pos',
      'BPix1+FPix2_neg',
      'BPix2+FPix1_pos',
      'BPix2+FPix1_neg',
      'BPix2+FPix2_pos',
      'BPix2+FPix2_neg',
      'FPix1_pos+FPix2_pos',
      'FPix1_neg+FPix2_neg',
      'FPix2_pos+TEC1_pos',
      'FPix2_pos+TEC2_pos',
      'TEC1_pos+TEC2_pos',
      'TEC2_pos+TEC3_pos',
      'FPix2_neg+TEC1_neg',
      'FPix2_neg+TEC2_neg',
      'TEC1_neg+TEC2_neg',
      'TEC2_neg+TEC3_neg' ),
    BPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0027 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.006 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    FPix = cms.PSet( 
      hitErrorRPhi = cms.double( 0.0051 ),
      TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
      useErrorsFromParam = cms.bool( True ),
      hitErrorRZ = cms.double( 0.0036 ),
      HitProducer = cms.string( "hltSiPixelRecHits" )
    ),
    TIB = cms.PSet(  ),
    TID = cms.PSet(  ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 1 ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 1 )
    ),
    MTIB = cms.PSet(  ),
    MTID = cms.PSet(  ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet(  )
)
process.hltL3TrajSeedIOHit = cms.EDProducer( "TSGFromL2Muon",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'PropagatorWithMaterial' )
    ),
    MuonTrackingRegionBuilder = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonTrackingRegionBuilder8356" ) ),
    TrackerSeedCleaner = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      cleanerFromSharedHits = cms.bool( True ),
      directionCleaner = cms.bool( True ),
      ptCleaner = cms.bool( True )
    ),
    TkSeedGenerator = cms.PSet( 
      iterativeTSG = cms.PSet( 
        firstTSG = cms.PSet( 
          TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
          OrderedHitsFactoryPSet = cms.PSet( 
            SeedingLayers = cms.InputTag( "hltPixelLayerTriplets" ),
            ComponentName = cms.string( "StandardHitTripletGenerator" ),
            GeneratorPSet = cms.PSet( 
              SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
              maxElement = cms.uint32( 0 ),
              useFixedPreFiltering = cms.bool( False ),
              extraHitRZtolerance = cms.double( 0.06 ),
              phiPreFiltering = cms.double( 0.3 ),
              extraHitRPhitolerance = cms.double( 0.06 ),
              useBending = cms.bool( True ),
              ComponentName = cms.string( "PixelTripletHLTGenerator" ),
              useMultScattering = cms.bool( True )
            )
          ),
          SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromConsecutiveHitsCreator" ) ),
          ComponentName = cms.string( "TSGFromOrderedHits" )
        ),
        secondTSG = cms.PSet( 
          TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
          OrderedHitsFactoryPSet = cms.PSet( 
            SeedingLayers = cms.InputTag( "hltPixelLayerPairsLegacy" ),
            maxElement = cms.uint32( 0 ),
            ComponentName = cms.string( "StandardHitPairGenerator" ),
            useOnDemandTracker = cms.untracked.int32( 0 )
          ),
          SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromConsecutiveHitsCreator" ) ),
          ComponentName = cms.string( "TSGFromOrderedHits" )
        ),
        PSetNames = cms.vstring( 'firstTSG',
          'secondTSG' ),
        thirdTSG = cms.PSet( 
          etaSeparation = cms.double( 2.0 ),
          SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromConsecutiveHitsCreator" ) ),
          PSetNames = cms.vstring( 'endcapTSG',
            'barrelTSG' ),
          barrelTSG = cms.PSet(  ),
          ComponentName = cms.string( "DualByEtaTSG" ),
          endcapTSG = cms.PSet( 
            TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
            OrderedHitsFactoryPSet = cms.PSet( 
              SeedingLayers = cms.InputTag( "hltMixedLayerPairs" ),
              maxElement = cms.uint32( 0 ),
              ComponentName = cms.string( "StandardHitPairGenerator" ),
              useOnDemandTracker = cms.untracked.int32( 0 )
            ),
            ComponentName = cms.string( "TSGFromOrderedHits" )
          )
        ),
        ComponentName = cms.string( "CombinedTSG" )
      ),
      PSetNames = cms.vstring( 'skipTSG',
        'iterativeTSG' ),
      skipTSG = cms.PSet(  ),
      ComponentName = cms.string( "DualByL2TSG" ),
      L3TkCollectionA = cms.InputTag( "hltL3TkFromL2OICombination" )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    PtCut = cms.double( 1.0 ),
    PCut = cms.double( 2.5 )
)
process.hltL3TrackCandidateFromL2IOHit = cms.EDProducer( "CkfTrajectoryMaker",
    trackCandidateAlso = cms.bool( True ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltL3TrajSeedIOHit" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 0 )
)
process.hltL3TkTracksFromL2IOHit = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltL3TrackCandidateFromL2IOHit" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltL3MuonsIOHit = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonTrackingRegionBuilder8356" ) ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "pixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 0.2 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltL3TkTracksFromL2IOHit" )
    )
)
process.hltL3TrajectorySeed = cms.EDProducer( "L3MuonTrajectorySeedCombiner",
    labels = cms.VInputTag( 'hltL3TrajSeedIOHit','hltL3TrajSeedOIState','hltL3TrajSeedOIHit' )
)
process.hltL3TrackCandidateFromL2 = cms.EDProducer( "L3TrackCandCombiner",
    labels = cms.VInputTag( 'hltL3TrackCandidateFromL2IOHit','hltL3TrackCandidateFromL2OIHit','hltL3TrackCandidateFromL2OIState' )
)
process.hltL3TkTracksMergeStep1 = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 100.0 ),
    LostHitPenalty = cms.double( 0.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltL3TkTracksFromL2OIState','hltL3TkTracksFromL2OIHit' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltL3TkTracksFromL2OIState','hltL3TkTracksFromL2OIHit' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltL3TkTracksFromL2 = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 100.0 ),
    LostHitPenalty = cms.double( 0.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltL3TkTracksMergeStep1','hltL3TkTracksFromL2IOHit' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltL3TkTracksMergeStep1','hltL3TkTracksFromL2IOHit' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltL3MuonsLinksCombination = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3MuonsOIState','hltL3MuonsOIHit','hltL3MuonsIOHit' )
)
process.hltL3Muons = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3MuonsOIState','hltL3MuonsOIHit','hltL3MuonsIOHit' )
)
process.hltOldL3MuonCandidates = cms.EDProducer( "L3MuonCandidateProducer",
    InputObjects = cms.InputTag( "hltL3Muons" ),
    InputLinksObjects = cms.InputTag( "hltL3MuonsLinksCombination" ),
    MuonPtOption = cms.string( "Tracker" )
)
process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered100Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltOldL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fOldL1sMu22or25L1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "" ),
    inputMuonCollection = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 100.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 20.0 ),
    MaxDXYBeamSpot = cms.double( 0.1 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 0.0 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "" ),
    requireL3MuonTrajectorySeed = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreHighPtTkMu100 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1MuonsPt15 = cms.EDProducer( "HLTL1TMuonSelector",
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MinPt = cms.double( 15.0 ),
    L1MaxEta = cms.double( 5.0 ),
    L1MinQuality = cms.uint32( 3 ),
    CentralBxOnly = cms.bool( True )
)
process.hltIter0HighPtTkMuPixelTracksTrackingRegions = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "notUsed" ),
      zErrorVetex = cms.double( 0.2 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 24.2 ),
      maxNVertices = cms.int32( 1 ),
      maxNRegions = cms.int32( 5 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      ptMin = cms.double( 10.0 ),
      mode = cms.string( "BeamSpotSigma" ),
      input = cms.InputTag( "hltL1MuonsPt15" ),
      searchOpt = cms.bool( False ),
      whereToUseMeasurementTracker = cms.string( "Never" ),
      originRadius = cms.double( 0.2 ),
      measurementTrackerName = cms.InputTag( "" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.35 ),
      deltaPhi = cms.double( 0.2 )
    )
)
process.hltPixelTracksInRegionTkMu = cms.EDProducer( "TrackSelectorByRegion",
    tracks = cms.InputTag( "hltPixelTracks" ),
    regions = cms.InputTag( "hltIter0HighPtTkMuPixelTracksTrackingRegions" ),
    produceTrackCollection = cms.bool( True ),
    produceMask = cms.bool( False )
)
process.hltIter0HighPtTkMuPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracksInRegionTkMu" ),
    InputVertexCollection = cms.InputTag( "notUsed" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.1 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0HighPtTkMuCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0HighPtTkMuPixelSeedsFromPixelTracks" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0HighPtTkMuPSetTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0HighPtTkMuCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0HighPtTkMuCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0HighPtTkMuTrackSelectionHighPurity = cms.EDProducer( "AnalyticalTrackSelector",
    src = cms.InputTag( "hltIter0HighPtTkMuCtfWithMaterialTracks" ),
    keepAllTracks = cms.bool( False ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    useVertices = cms.bool( False ),
    useVtxError = cms.bool( False ),
    vertices = cms.InputTag( "notUsed" ),
    vtxNumber = cms.int32( -1 ),
    vertexCut = cms.string( "tracksSize>=3" ),
    copyTrajectories = cms.untracked.bool( False ),
    copyExtras = cms.untracked.bool( True ),
    qualityBit = cms.string( "highPurity" ),
    chi2n_par = cms.double( 0.7 ),
    chi2n_no1Dmod_par = cms.double( 9999.0 ),
    res_par = cms.vdouble( 0.003, 0.001 ),
    d0_par1 = cms.vdouble( 0.3, 4.0 ),
    dz_par1 = cms.vdouble( 0.35, 4.0 ),
    d0_par2 = cms.vdouble( 0.4, 4.0 ),
    dz_par2 = cms.vdouble( 0.4, 4.0 ),
    applyAdaptedPVCuts = cms.bool( True ),
    max_d0 = cms.double( 100.0 ),
    max_z0 = cms.double( 100.0 ),
    nSigmaZ = cms.double( 3.0 ),
    minNumberLayers = cms.uint32( 3 ),
    minNumber3DLayers = cms.uint32( 0 ),
    maxNumberLostLayers = cms.uint32( 1 ),
    minHitsToBypassChecks = cms.uint32( 20 ),
    applyAbsCutsIfNoPV = cms.bool( False ),
    max_d0NoPV = cms.double( 100.0 ),
    max_z0NoPV = cms.double( 100.0 ),
    max_relpterr = cms.double( 9999.0 ),
    min_nhits = cms.uint32( 0 ),
    max_minMissHitOutOrIn = cms.int32( 99 ),
    max_lostHitFraction = cms.double( 1.0 ),
    max_eta = cms.double( 9999.0 ),
    min_eta = cms.double( -9999.0 )
)
process.hltHighPtTkMu50TkFilt = cms.EDFilter( "HLTTrackWithHits",
    saveTags = cms.bool( True ),
    src = cms.InputTag( "hltIter0HighPtTkMuTrackSelectionHighPurity" ),
    MinN = cms.int32( 1 ),
    MaxN = cms.int32( 99999 ),
    MinBPX = cms.int32( 0 ),
    MinFPX = cms.int32( 0 ),
    MinPXL = cms.int32( 1 ),
    MinPT = cms.double( 50.0 )
)
process.hltHighPtTkMuons = cms.EDProducer( "MuonIdProducer",
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( False ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( False ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( False ),
      HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltPFMuonMerging" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "" ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "hltAntiKT4CaloJetsPFEt5" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    trackDepositName = cms.string( "tracker" ),
    ecalDepositName = cms.string( "ecal" ),
    hcalDepositName = cms.string( "hcal" ),
    hoDepositName = cms.string( "ho" ),
    jetDepositName = cms.string( "jets" ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    ShowerDigiFillerParameters = cms.PSet( 
      cscDigiCollectionLabel = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
      digiMaxDistanceX = cms.double( 25.0 ),
      dtDigiCollectionLabel = cms.InputTag( "hltMuonDTDigis" )
    ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    fillEnergy = cms.bool( False ),
    storeCrossedHcalRecHits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsEta = cms.double( 3.0 ),
    minPt = cms.double( 8.0 ),
    inputCollectionTypes = cms.vstring( 'inner tracks' ),
    addExtraSoftMuons = cms.bool( False ),
    fillGlobalTrackRefits = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    inputCollectionLabels = cms.VInputTag( 'hltIter0HighPtTkMuTrackSelectionHighPurity' ),
    fillCaloCompatibility = cms.bool( False ),
    maxAbsPullY = cms.double( 9999.0 ),
    maxAbsDy = cms.double( 9999.0 ),
    minP = cms.double( 0.0 ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDx = cms.double( 3.0 ),
    fillIsolation = cms.bool( False ),
    writeIsoDeposits = cms.bool( False ),
    minNumberOfMatches = cms.int32( 1 ),
    fillMatching = cms.bool( True ),
    fillShowerDigis = cms.bool( False ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    fillGlobalTrackQuality = cms.bool( False ),
    globalTrackQualityInputTag = cms.InputTag( "" ),
    selectHighPurity = cms.bool( False ),
    pvInputTag = cms.InputTag( "" ),
    fillTrackerKink = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    runArbitrationCleaner = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    arbitrateTrackerMuons = cms.bool( False )
)
process.hltHighPtTkMuonCands = cms.EDProducer( "L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag( "hltHighPtTkMuons" ),
    DisplacedReconstruction = cms.bool( False )
)
process.hltL3fL1sMu25f0TkFiltered100Q = cms.EDFilter( "HLTMuonTrkL1TFilter",
    saveTags = cms.bool( True ),
    inputMuonCollection = cms.InputTag( "hltHighPtTkMuons" ),
    inputCandCollection = cms.InputTag( "hltHighPtTkMuonCands" ),
    previousCandTag = cms.InputTag( "hltL1fL1sMu22or25L1Filtered0" ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    minMuonStations = cms.int32( 2 ),
    maxNormalizedChi2 = cms.double( 1.0E99 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    trkMuonId = cms.uint32( 0 ),
    minPt = cms.double( 100.0 ),
    minN = cms.uint32( 1 ),
    maxAbsEta = cms.double( 1.0E99 ),
    L1MatchingdR = cms.double( 0.3 ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL1sSingleMu3IorSingleMu5IorSingleMu7 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu3 OR L1_SingleMu5 OR L1_SingleMu7" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu8TrkIsoVVL = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu3or5or7L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu3IorSingleMu5IorSingleMu7" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMu5L1f0L2Filtered5 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu3or5or7L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu5L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu3or5or7L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sMu5L1f0L2f5L3Filtered8 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu5L1f0L2Filtered5" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu5L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 8.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sMu5L1f0L2f5L3Filtered8TkIsoVVLFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sMu5L1f0L2f5L3Filtered8" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltL3MuonRelTrkIsolationVVL' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltL1sSingleMu15DQ = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu15_DQ" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu17TrkIsoVVL = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu15DQlqL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMu15DQ" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMu15DQlqL1f0L2Filtered10 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu15DQlqL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu15DQlqL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu15DQlqL1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sMu15DQlqL1f0L2f10L3Filtered17 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu15DQlqL1f0L2Filtered10" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu15DQlqL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 17.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sMu1lqL1f0L2f10L3Filtered17TkIsoVVLFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sMu15DQlqL1f0L2f10L3Filtered17" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltL3MuonRelTrkIsolationVVL' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltPreMu19TrkIsoVVL = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1sMu15DQlqL1f0L2f10L3Filtered19 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu15DQlqL1f0L2Filtered10" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu15DQlqL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 19.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sMu1lqL1f0L2f10L3Filtered19TkIsoVVLFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sMu15DQlqL1f0L2f10L3Filtered19" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltL3MuonRelTrkIsolationVVL' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltL1sMu12HTT150er = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_Mu12_HTT150er OR L1_Mu14_HTT150er OR L1_Mu6_HTT240er OR L1_HTT280er" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu12IsoVVLPFHT150PNetBTag0p53 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1sSingleMuOpenObjectMap = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMuOpen" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltHtMhtJet30 = cms.EDProducer( "HLTHtMhtProducer",
    usePt = cms.bool( False ),
    excludePFMuons = cms.bool( False ),
    minNJetHt = cms.int32( 0 ),
    minNJetMht = cms.int32( 0 ),
    minPtJetHt = cms.double( 30.0 ),
    minPtJetMht = cms.double( 30.0 ),
    maxEtaJetHt = cms.double( 2.5 ),
    maxEtaJetMht = cms.double( 5.0 ),
    jetsLabel = cms.InputTag( "hltAK4CaloJetsCorrected" ),
    pfCandidatesLabel = cms.InputTag( "" )
)
process.hltHT100Jet30 = cms.EDFilter( "HLTHtMhtFilter",
    saveTags = cms.bool( True ),
    htLabels = cms.VInputTag( 'hltHtMhtJet30' ),
    mhtLabels = cms.VInputTag( 'hltHtMhtJet30' ),
    minHt = cms.vdouble( 100.0 ),
    minMht = cms.vdouble( 0.0 ),
    minMeff = cms.vdouble( 0.0 ),
    meffSlope = cms.vdouble( 1.0 )
)
process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMuOpenObjectMap" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sSingleMuOpenCandidateL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sSingleMuOpenCandidateL1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered12Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 12.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3crIsoL1sMu12L1f0L2f3QL3f12QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered12Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sMu12L1f0L2f3QL3f12QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3crIsoL1sMu12L1f0L2f3QL3f12QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltMuonTkRelIsolationCut0p3Map = cms.EDProducer( "L3MuonCombinedRelativeIsolationProducer",
    UseRhoCorrectedCaloDeposits = cms.bool( False ),
    UseCaloIso = cms.bool( False ),
    CaloDepositsLabel = cms.InputTag( "notUsed" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonCandidates" ),
    OutputMuIsoDeposits = cms.bool( True ),
    TrackPt_Min = cms.double( -1.0 ),
    printDebug = cms.bool( False ),
    CutsPSet = cms.PSet( 
      applyCutsORmaxNTracks = cms.bool( False ),
      maxNTracks = cms.int32( -1 ),
      Thresholds = cms.vdouble( 0.3 ),
      EtaBounds = cms.vdouble( 2.411 ),
      ComponentName = cms.string( "SimpleCuts" ),
      ConeSizes = cms.vdouble( 0.3 )
    ),
    TrkExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter0L3MuonTrackSelectionHighPurity" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      VetoLeadingTrack = cms.bool( True ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "PXLS" ),
      PtVeto_Min = cms.double( 2.0 ),
      NHits_Min = cms.uint32( 0 ),
      PropagateTracksToRadius = cms.bool( True ),
      ReferenceRadius = cms.double( 6.0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "PixelTrackExtractor" ),
      DR_VetoPt = cms.double( 0.025 )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      Vertex_Constraint_Z = cms.bool( False ),
      DR_Veto_E = cms.double( 0.07 ),
      Weight_H = cms.double( 1.0 ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
      DR_Max = cms.double( 0.3 ),
      DepositLabel = cms.untracked.string( "EcalPlusHcal" ),
      Vertex_Constraint_XY = cms.bool( False ),
      Threshold_H = cms.double( 0.5 ),
      Threshold_E = cms.double( 0.2 ),
      ComponentName = cms.string( "CaloExtractor" ),
      Weight_E = cms.double( 1.0 )
    )
)
process.hltL3crIsoL1sMu12L1f0L2f3QL3f12QL3trkIsoFilteredVVL = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered12Q" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p3Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltPFHT150Jet30 = cms.EDFilter( "HLTHtMhtFilter",
    saveTags = cms.bool( True ),
    htLabels = cms.VInputTag( 'hltPFHTJet30' ),
    mhtLabels = cms.VInputTag( 'hltPFHTJet30' ),
    minHt = cms.vdouble( 150.0 ),
    minMht = cms.vdouble( 0.0 ),
    minMeff = cms.vdouble( 0.0 ),
    meffSlope = cms.vdouble( 1.0 )
)
process.hltVerticesPF = cms.EDProducer( "PrimaryVertexProducer",
    vertexCollections = cms.VPSet( 
      cms.PSet(  chi2cutoff = cms.double( 3.0 ),
        label = cms.string( "" ),
        useBeamConstraint = cms.bool( False ),
        minNdof = cms.double( 0.0 ),
        maxDistanceToBeam = cms.double( 1.0 ),
        algorithm = cms.string( "AdaptiveVertexFitter" )
      ),
      cms.PSet(  chi2cutoff = cms.double( 3.0 ),
        label = cms.string( "WithBS" ),
        useBeamConstraint = cms.bool( True ),
        minNdof = cms.double( 0.0 ),
        maxDistanceToBeam = cms.double( 1.0 ),
        algorithm = cms.string( "AdaptiveVertexFitter" )
      )
    ),
    verbose = cms.untracked.bool( False ),
    TkFilterParameters = cms.PSet( 
      maxEta = cms.double( 100.0 ),
      minPt = cms.double( 0.0 ),
      minSiliconLayersWithHits = cms.int32( 5 ),
      minPixelLayersWithHits = cms.int32( 2 ),
      maxNormalizedChi2 = cms.double( 20.0 ),
      trackQuality = cms.string( "any" ),
      algorithm = cms.string( "filter" ),
      maxD0Significance = cms.double( 999.0 )
    ),
    beamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
    TrackLabel = cms.InputTag( "hltPFMuonMerging" ),
    TrackTimeResosLabel = cms.InputTag( "dummy_default" ),
    TrackTimesLabel = cms.InputTag( "dummy_default" ),
    trackMTDTimeQualityVMapTag = cms.InputTag( "dummy_default" ),
    TkClusParameters = cms.PSet( 
      TkDAClusParameters = cms.PSet( 
        zmerge = cms.double( 0.01 ),
        Tstop = cms.double( 0.5 ),
        d0CutOff = cms.double( 999.0 ),
        dzCutOff = cms.double( 4.0 ),
        vertexSize = cms.double( 0.15 ),
        coolingFactor = cms.double( 0.6 ),
        Tpurge = cms.double( 2.0 ),
        Tmin = cms.double( 2.4 ),
        uniquetrkweight = cms.double( 0.9 )
      ),
      algorithm = cms.string( "DA_vect" )
    ),
    isRecoveryIteration = cms.bool( False ),
    recoveryVtxCollection = cms.InputTag( "" ),
    useMVACut = cms.bool( False ),
    minTrackTimeQuality = cms.double( 0.8 )
)
process.hltVerticesPFSelector = cms.EDFilter( "PrimaryVertexObjectFilter",
    filterParams = cms.PSet( 
      maxZ = cms.double( 24.0 ),
      minNdof = cms.double( 4.0 ),
      maxRho = cms.double( 2.0 ),
      pvSrc = cms.InputTag( "hltVerticesPF" )
    ),
    src = cms.InputTag( "hltVerticesPF" )
)
process.hltVerticesPFFilter = cms.EDFilter( "VertexSelector",
    src = cms.InputTag( "hltVerticesPFSelector" ),
    cut = cms.string( "!isFake" ),
    filter = cms.bool( True )
)
process.hltPFJetForBtagSelector = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4PFJetsCorrected" ),
    triggerType = cms.int32( 86 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.6 ),
    MinN = cms.int32( 1 )
)
process.hltPFJetForBtag = cms.EDProducer( "HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag( "hltPFJetForBtagSelector" ),
    TriggerTypes = cms.vint32( 86 )
)
process.hltDeepBLifetimeTagInfosPF = cms.EDProducer( "CandIPProducer",
    primaryVertex = cms.InputTag( "hltVerticesPFFilter" ),
    computeProbabilities = cms.bool( True ),
    computeGhostTrack = cms.bool( True ),
    ghostTrackPriorDeltaR = cms.double( 0.03 ),
    minimumNumberOfPixelHits = cms.int32( 2 ),
    minimumNumberOfHits = cms.int32( 3 ),
    maximumTransverseImpactParameter = cms.double( 0.2 ),
    minimumTransverseMomentum = cms.double( 1.0 ),
    maximumChiSquared = cms.double( 5.0 ),
    maximumLongitudinalImpactParameter = cms.double( 17.0 ),
    jetDirectionUsingTracks = cms.bool( False ),
    jetDirectionUsingGhostTrack = cms.bool( False ),
    useTrackQuality = cms.bool( False ),
    jets = cms.InputTag( "hltPFJetForBtag" ),
    candidates = cms.InputTag( "hltParticleFlow" ),
    maxDeltaR = cms.double( 0.4 )
)
process.hltDeepInclusiveVertexFinderPF = cms.EDProducer( "InclusiveCandidateVertexFinder",
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    primaryVertices = cms.InputTag( "hltVerticesPFFilter" ),
    tracks = cms.InputTag( "hltParticleFlow" ),
    minHits = cms.uint32( 8 ),
    maximumLongitudinalImpactParameter = cms.double( 0.3 ),
    maximumTimeSignificance = cms.double( 3.0 ),
    minPt = cms.double( 0.8 ),
    maxNTracks = cms.uint32( 30 ),
    clusterizer = cms.PSet( 
      distanceRatio = cms.double( 20.0 ),
      clusterMaxDistance = cms.double( 0.05 ),
      seedMax3DIPSignificance = cms.double( 9999.0 ),
      clusterMaxSignificance = cms.double( 4.5 ),
      seedMin3DIPSignificance = cms.double( 1.2 ),
      clusterMinAngleCosine = cms.double( 0.5 ),
      seedMin3DIPValue = cms.double( 0.005 ),
      seedMax3DIPValue = cms.double( 9999.0 )
    ),
    vertexMinAngleCosine = cms.double( 0.95 ),
    vertexMinDLen2DSig = cms.double( 2.5 ),
    vertexMinDLenSig = cms.double( 0.5 ),
    fitterSigmacut = cms.double( 3.0 ),
    fitterTini = cms.double( 256.0 ),
    fitterRatio = cms.double( 0.25 ),
    useDirectVertexFitter = cms.bool( True ),
    useVertexReco = cms.bool( True ),
    vertexReco = cms.PSet( 
      primcut = cms.double( 1.0 ),
      seccut = cms.double( 3.0 ),
      finder = cms.string( "avr" ),
      smoothing = cms.bool( True )
    )
)
process.hltDeepInclusiveSecondaryVerticesPF = cms.EDProducer( "CandidateVertexMerger",
    secondaryVertices = cms.InputTag( "hltDeepInclusiveVertexFinderPF" ),
    maxFraction = cms.double( 0.7 ),
    minSignificance = cms.double( 2.0 )
)
process.hltDeepTrackVertexArbitratorPF = cms.EDProducer( "CandidateVertexArbitrator",
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    primaryVertices = cms.InputTag( "hltVerticesPFFilter" ),
    tracks = cms.InputTag( "hltParticleFlow" ),
    secondaryVertices = cms.InputTag( "hltDeepInclusiveSecondaryVerticesPF" ),
    dLenFraction = cms.double( 0.333 ),
    dRCut = cms.double( 0.4 ),
    distCut = cms.double( 0.04 ),
    sigCut = cms.double( 5.0 ),
    fitterSigmacut = cms.double( 3.0 ),
    fitterTini = cms.double( 256.0 ),
    fitterRatio = cms.double( 0.25 ),
    trackMinLayers = cms.int32( 4 ),
    trackMinPt = cms.double( 0.4 ),
    trackMinPixels = cms.int32( 1 ),
    maxTimeSignificance = cms.double( 3.5 )
)
process.hltDeepInclusiveMergedVerticesPF = cms.EDProducer( "CandidateVertexMerger",
    secondaryVertices = cms.InputTag( "hltDeepTrackVertexArbitratorPF" ),
    maxFraction = cms.double( 0.2 ),
    minSignificance = cms.double( 10.0 )
)
process.hltPrimaryVertexAssociation = cms.EDProducer( "PFCandidatePrimaryVertexSorter",
    sorting = cms.PSet(  ),
    assignment = cms.PSet( 
      maxDxyForJetAxisAssigment = cms.double( 0.1 ),
      maxDzForJetAxisAssigment = cms.double( 0.1 ),
      useTiming = cms.bool( False ),
      preferHighRanked = cms.bool( False ),
      EtaMinUseDz = cms.double( -1.0 ),
      maxDistanceToJetAxis = cms.double( 0.07 ),
      PtMaxCharged = cms.double( -1.0 ),
      minJetPt = cms.double( 25.0 ),
      maxDzSigForPrimaryAssignment = cms.double( 5.0 ),
      OnlyUseFirstDz = cms.bool( False ),
      maxDzErrorForPrimaryAssignment = cms.double( 0.05 ),
      maxDzForPrimaryAssignment = cms.double( 0.1 ),
      maxJetDeltaR = cms.double( 0.5 ),
      maxDxySigForNotReconstructedPrimary = cms.double( 2.0 ),
      DzCutForChargedFromPUVtxs = cms.double( 0.2 ),
      maxDtSigForPrimaryAssignment = cms.double( 3.0 ),
      maxDxyForNotReconstructedPrimary = cms.double( 0.01 ),
      useVertexFit = cms.bool( True ),
      NumOfPUVtxsForCharged = cms.uint32( 0 )
    ),
    qualityForPrimary = cms.int32( 2 ),
    usePVMET = cms.bool( True ),
    particles = cms.InputTag( "hltParticleFlow" ),
    vertices = cms.InputTag( "hltVerticesPFFilter" ),
    jets = cms.InputTag( "hltPFJetForBtag" ),
    produceAssociationToOriginalVertices = cms.bool( True ),
    produceSortedVertices = cms.bool( False ),
    producePileUpCollection = cms.bool( False ),
    produceNoPileUpCollection = cms.bool( False )
)
process.hltParticleNetJetTagInfos = cms.EDProducer( "DeepBoostedJetTagInfoProducer",
    jet_radius = cms.double( 0.4 ),
    min_jet_pt = cms.double( 30.0 ),
    max_jet_eta = cms.double( 2.5 ),
    min_pt_for_track_properties = cms.double( 0.95 ),
    min_pt_for_pfcandidates = cms.double( 0.1 ),
    use_puppiP4 = cms.bool( False ),
    include_neutrals = cms.bool( True ),
    sort_by_sip2dsig = cms.bool( False ),
    min_puppi_wgt = cms.double( -1.0 ),
    flip_ip_sign = cms.bool( False ),
    sip3dSigMax = cms.double( -1.0 ),
    use_hlt_features = cms.bool( True ),
    vertices = cms.InputTag( "hltVerticesPFFilter" ),
    secondary_vertices = cms.InputTag( "hltDeepInclusiveMergedVerticesPF" ),
    pf_candidates = cms.InputTag( "hltParticleFlow" ),
    jets = cms.InputTag( "hltPFJetForBtag" ),
    unsubjet_map = cms.InputTag( "" ),
    puppi_value_map = cms.InputTag( "" ),
    vertex_associator = cms.InputTag( 'hltPrimaryVertexAssociation','original' ),
    use_scouting_features = cms.bool( False ),
    normchi2_value_map = cms.InputTag( "" ),
    dz_value_map = cms.InputTag( "" ),
    dxy_value_map = cms.InputTag( "" ),
    dzsig_value_map = cms.InputTag( "" ),
    dxysig_value_map = cms.InputTag( "" ),
    lostInnerHits_value_map = cms.InputTag( "" ),
    quality_value_map = cms.InputTag( "" ),
    trkPt_value_map = cms.InputTag( "" ),
    trkEta_value_map = cms.InputTag( "" ),
    trkPhi_value_map = cms.InputTag( "" ),
    covarianceVersion = cms.int32( 1 ),
    covariancePackingSchemas = cms.vint32( 8, 264, 520, 776, 0 )
)
process.hltParticleNetONNXJetTags = cms.EDProducer( "BoostedJetONNXJetTagsProducer",
    src = cms.InputTag( "hltParticleNetJetTagInfos" ),
    preprocess_json = cms.string( "RecoBTag/Combined/data/HLT/ParticleNetAK4/V01/preprocess.json" ),
    preprocessParams = cms.PSet(  ),
    model_path = cms.FileInPath( "RecoBTag/Combined/data/HLT/ParticleNetAK4/V01/particle-net.onnx" ),
    flav_names = cms.vstring( 'probtauhp',
      'probtauhm',
      'probb',
      'probc',
      'probuds',
      'probg',
      'ptcorr' ),
    jets = cms.InputTag( "" ),
    produceValueMap = cms.untracked.bool( False ),
    debugMode = cms.untracked.bool( False )
)
process.hltParticleNetDiscriminatorsJetTags = cms.EDProducer( "BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet( 
      cms.PSet(  name = cms.string( "BvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTags:probb' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTags:probb','hltParticleNetONNXJetTags:probc','hltParticleNetONNXJetTags:probuds','hltParticleNetONNXJetTags:probg' )
      ),
      cms.PSet(  name = cms.string( "CvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTags:probc' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTags:probb','hltParticleNetONNXJetTags:probc','hltParticleNetONNXJetTags:probuds','hltParticleNetONNXJetTags:probg' )
      ),
      cms.PSet(  name = cms.string( "TauhvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTags:probtauhp','hltParticleNetONNXJetTags:probtauhm' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTags:probb','hltParticleNetONNXJetTags:probc','hltParticleNetONNXJetTags:probuds','hltParticleNetONNXJetTags:probg','hltParticleNetONNXJetTags:probtauhp','hltParticleNetONNXJetTags:probtauhm' )
      ),
      cms.PSet(  name = cms.string( "CvsL" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTags:probc' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTags:probc','hltParticleNetONNXJetTags:probuds','hltParticleNetONNXJetTags:probg' )
      )
    )
)
process.hltBTagPFPNet0p53Single = cms.EDFilter( "HLTPFJetTag",
    saveTags = cms.bool( True ),
    Jets = cms.InputTag( "hltPFJetForBtag" ),
    JetTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','BvsAll' ),
    MinTag = cms.double( 0.525 ),
    MaxTag = cms.double( 999999.0 ),
    MinJets = cms.int32( 1 ),
    MatchJetsByDeltaR = cms.bool( False ),
    MaxJetDeltaR = cms.double( 0.1 ),
    TriggerType = cms.int32( 86 )
)
process.hltPreIsoMu24TwoProngs35 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltTauJet5 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4CaloJetsPFEt5" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 5.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltParticleFlowBlockForTaus = cms.EDProducer( "PFBlockProducer",
    verbose = cms.untracked.bool( False ),
    debug = cms.untracked.bool( False ),
    elementImporters = cms.VPSet( 
      cms.PSet(  muonSrc = cms.InputTag( "hltMuons" ),
        cleanBadConvertedBrems = cms.bool( False ),
        muonMaxDPtOPt = cms.double( 1.0 ),
        source = cms.InputTag( "hltLightPFTracks" ),
        NHitCuts_byTrackAlgo = cms.vuint32( 3, 3, 3, 3, 3, 3 ),
        vetoEndcap = cms.bool( False ),
        useIterativeTracking = cms.bool( False ),
        importerName = cms.string( "GeneralTracksImporter" ),
        DPtOverPtCuts_byTrackAlgo = cms.vdouble( 20.0, 20.0, 20.0, 20.0, 20.0, 20.0 ),
        trackQuality = cms.string( "highPurity" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
        importerName = cms.string( "ECALClusterImporter" ),
        BCtoPFCMap = cms.InputTag( "" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterHCAL" ),
        importerName = cms.string( "GenericClusterImporter" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterHF" ),
        importerName = cms.string( "GenericClusterImporter" )
      )
    ),
    linkDefinitions = cms.VPSet( 
      cms.PSet(  linkType = cms.string( "TRACK:ECAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "TrackAndECALLinker" )
      ),
      cms.PSet(  trajectoryLayerExit = cms.string( "HCALExit" ),
        trajectoryLayerEntrance = cms.string( "HCALEntrance" ),
        nMaxHcalLinksPerTrack = cms.int32( 1 ),
        linkType = cms.string( "TRACK:HCAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "TrackAndHCALLinker" )
      ),
      cms.PSet(  minAbsEtaEcal = cms.double( 2.5 ),
        linkType = cms.string( "ECAL:HCAL" ),
        useKDTree = cms.bool( False ),
        linkerName = cms.string( "ECALAndHCALLinker" )
      ),
      cms.PSet(  linkType = cms.string( "HFEM:HFHAD" ),
        useKDTree = cms.bool( False ),
        linkerName = cms.string( "HFEMAndHFHADLinker" )
      )
    )
)
process.hltParticleFlowForTaus = cms.EDProducer( "PFProducer",
    verbose = cms.untracked.bool( False ),
    debug = cms.untracked.bool( False ),
    blocks = cms.InputTag( "hltParticleFlowBlockForTaus" ),
    muons = cms.InputTag( "hltMuons" ),
    postMuonCleaning = cms.bool( True ),
    vetoEndcap = cms.bool( False ),
    vertexCollection = cms.InputTag( "hltPixelVertices" ),
    useVerticesForNeutral = cms.bool( True ),
    useHO = cms.bool( False ),
    PFEGammaCandidates = cms.InputTag( "particleFlowEGamma" ),
    GedElectronValueMap = cms.InputTag( "gedGsfElectronsTmp" ),
    GedPhotonValueMap = cms.InputTag( 'tmpGedPhotons','valMapPFEgammaCandToPhoton' ),
    useEGammaElectrons = cms.bool( False ),
    egammaElectrons = cms.InputTag( "" ),
    useEGammaFilters = cms.bool( False ),
    useProtectionsForJetMET = cms.bool( True ),
    PFEGammaFiltersParameters = cms.PSet( 
      electron_missinghits = cms.uint32( 1 ),
      electron_protectionsForJetMET = cms.PSet( 
        maxEeleOverPoutRes = cms.double( 0.5 ),
        maxEleHcalEOverEcalE = cms.double( 0.1 ),
        maxEcalEOverPRes = cms.double( 0.2 ),
        maxHcalEOverP = cms.double( 1.0 ),
        maxE = cms.double( 50.0 ),
        maxTrackPOverEele = cms.double( 1.0 ),
        maxDPhiIN = cms.double( 0.1 ),
        maxEcalEOverP_2 = cms.double( 0.2 ),
        maxEcalEOverP_1 = cms.double( 0.5 ),
        maxEeleOverPout = cms.double( 0.2 ),
        maxHcalEOverEcalE = cms.double( 0.1 ),
        maxHcalE = cms.double( 10.0 ),
        maxNtracks = cms.double( 3.0 )
      ),
      photon_MinEt = cms.double( 10.0 ),
      electron_ecalDrivenHademPreselCut = cms.double( 0.15 ),
      electron_protectionsForBadHcal = cms.PSet( 
        dEta = cms.vdouble( 0.0064, 0.01264 ),
        dPhi = cms.vdouble( 0.0547, 0.0394 ),
        enableProtections = cms.bool( False ),
        full5x5_sigmaIetaIeta = cms.vdouble( 0.0106, 0.0387 ),
        eInvPInv = cms.vdouble( 0.184, 0.0721 )
      ),
      photon_protectionsForBadHcal = cms.PSet( 
        enableProtections = cms.bool( False ),
        solidConeTrkIsoOffset = cms.double( 10.0 ),
        solidConeTrkIsoSlope = cms.double( 0.3 )
      ),
      electron_iso_mva_barrel = cms.double( -0.1875 ),
      electron_iso_mva_endcap = cms.double( -0.1075 ),
      photon_SigmaiEtaiEta_endcap = cms.double( 0.034 ),
      photon_SigmaiEtaiEta_barrel = cms.double( 0.0125 ),
      photon_HoE = cms.double( 0.05 ),
      electron_iso_combIso_endcap = cms.double( 10.0 ),
      electron_iso_pt = cms.double( 10.0 ),
      photon_protectionsForJetMET = cms.PSet( 
        sumPtTrackIsoSlope = cms.double( 0.001 ),
        sumPtTrackIso = cms.double( 4.0 )
      ),
      electron_iso_combIso_barrel = cms.double( 10.0 ),
      electron_noniso_mvaCut = cms.double( -0.1 ),
      photon_combIso = cms.double( 10.0 ),
      electron_maxElePtForOnlyMVAPresel = cms.double( 50.0 )
    ),
    muon_HCAL = cms.vdouble( 3.0, 3.0 ),
    muon_ECAL = cms.vdouble( 0.5, 0.5 ),
    muon_HO = cms.vdouble( 0.9, 0.9 ),
    PFMuonAlgoParameters = cms.PSet(  ),
    rejectTracks_Bad = cms.bool( False ),
    rejectTracks_Step45 = cms.bool( False ),
    usePFNuclearInteractions = cms.bool( False ),
    usePFConversions = cms.bool( False ),
    usePFDecays = cms.bool( False ),
    dptRel_DispVtx = cms.double( 10.0 ),
    iCfgCandConnector = cms.PSet( 
      nuclCalibFactors = cms.vdouble( 0.8, 0.15, 0.5, 0.5, 0.05 ),
      bCorrect = cms.bool( False ),
      bCalibPrimary = cms.bool( False )
    ),
    nsigma_TRACK = cms.double( 1.0 ),
    pt_Error = cms.double( 1.0 ),
    factors_45 = cms.vdouble( 10.0, 100.0 ),
    goodTrackDeadHcal_ptErrRel = cms.double( 0.2 ),
    goodTrackDeadHcal_chi2n = cms.double( 5.0 ),
    goodTrackDeadHcal_layers = cms.uint32( 4 ),
    goodTrackDeadHcal_validFr = cms.double( 0.5 ),
    goodTrackDeadHcal_dxy = cms.double( 0.5 ),
    goodPixelTrackDeadHcal_minEta = cms.double( 2.3 ),
    goodPixelTrackDeadHcal_maxPt = cms.double( 50.0 ),
    goodPixelTrackDeadHcal_ptErrRel = cms.double( 1.0 ),
    goodPixelTrackDeadHcal_chi2n = cms.double( 2.0 ),
    goodPixelTrackDeadHcal_maxLost3Hit = cms.int32( 0 ),
    goodPixelTrackDeadHcal_maxLost4Hit = cms.int32( 1 ),
    goodPixelTrackDeadHcal_dxy = cms.double( 0.02 ),
    goodPixelTrackDeadHcal_dz = cms.double( 0.05 ),
    pf_nsigma_ECAL = cms.double( 0.0 ),
    pf_nsigma_HCAL = cms.double( 1.0 ),
    pf_nsigma_HFEM = cms.double( 1.0 ),
    pf_nsigma_HFHAD = cms.double( 1.0 ),
    useCalibrationsFromDB = cms.bool( True ),
    calibrationsLabel = cms.string( "HLT" ),
    postHFCleaning = cms.bool( False ),
    PFHFCleaningParameters = cms.PSet( 
      minHFCleaningPt = cms.double( 5.0 ),
      minDeltaMet = cms.double( 0.4 ),
      maxSignificance = cms.double( 2.5 ),
      minSignificance = cms.double( 2.5 ),
      minSignificanceReduction = cms.double( 1.4 ),
      maxDeltaPhiPt = cms.double( 7.0 )
    ),
    cleanedHF = cms.VInputTag( 'hltParticleFlowRecHitHF:Cleaned','hltParticleFlowClusterHF:Cleaned' ),
    calibHF_use = cms.bool( False ),
    calibHF_eta_step = cms.vdouble( 0.0, 2.9, 3.0, 3.2, 4.2, 4.4, 4.6, 4.8, 5.2, 5.4 ),
    calibHF_a_EMonly = cms.vdouble( 0.96945, 0.96701, 0.76309, 0.82268, 0.87583, 0.89718, 0.98674, 1.4681, 1.458, 1.458 ),
    calibHF_a_EMHAD = cms.vdouble( 1.42215, 1.00496, 0.68961, 0.81656, 0.98504, 0.98504, 1.00802, 1.0593, 1.4576, 1.4576 ),
    calibHF_b_HADonly = cms.vdouble( 1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 0.94348, 0.9437, 1.0034, 1.0444, 1.0444 ),
    calibHF_b_EMHAD = cms.vdouble( 1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 0.94348, 0.9437, 1.0034, 1.0444, 1.0444 ),
    resolHF_square = cms.vdouble( 7.834401, 0.012996, 0.0 )
)
process.hltAK4PFJetsForTaus = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 0 ),
    src = cms.InputTag( "hltParticleFlowForTaus" ),
    srcPVs = cms.InputTag( "hltTrimmedPixelVertices" ),
    jetType = cms.string( "PFJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.4 ),
    inputEtMin = cms.double( 0.0 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 0.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( True ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltTauPFJets08Region = cms.EDProducer( "RecoTauJetRegionProducer",
    src = cms.InputTag( "hltAK4PFJetsForTaus" ),
    deltaR = cms.double( 0.8 ),
    pfCandAssocMapSrc = cms.InputTag( "" ),
    verbosity = cms.int32( 0 ),
    maxJetAbsEta = cms.double( 99.0 ),
    minJetPt = cms.double( -1.0 ),
    pfCandSrc = cms.InputTag( "hltParticleFlowForTaus" )
)
process.hltTauPFJetsRecoTauChargedHadrons = cms.EDProducer( "PFRecoTauChargedHadronProducer",
    ranking = cms.VPSet( 
      cms.PSet(  selectionFailValue = cms.double( 1000.0 ),
        plugin = cms.string( "PFRecoTauChargedHadronStringQuality" ),
        selection = cms.string( "algoIs('kChargedPFCandidate')" ),
        name = cms.string( "ChargedPFCandidate" ),
        selectionPassFunction = cms.string( "-pt" )
      )
    ),
    verbosity = cms.int32( 0 ),
    maxJetAbsEta = cms.double( 99.0 ),
    outputSelection = cms.string( "pt > 0.5" ),
    minJetPt = cms.double( -1.0 ),
    jetSrc = cms.InputTag( "hltAK4PFJetsForTaus" ),
    builders = cms.VPSet( 
      cms.PSet(  minBlockElementMatchesNeutralHadron = cms.int32( 2 ),
        dRmergeNeutralHadronWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtOther = cms.double( 0.005 ),
        qualityCuts = cms.PSet( 
          vertexTrackFiltering = cms.bool( False ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            minNeutralHadronEt = cms.double( 30.0 ),
            maxDeltaZ = cms.double( 0.2 ),
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          vxAssocQualityCuts = cms.PSet( 
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" )
        ),
        dRmergeNeutralHadronWrtOther = cms.double( 0.005 ),
        maxUnmatchedBlockElementsNeutralHadron = cms.int32( 1 ),
        dRmergePhotonWrtElectron = cms.double( 0.005 ),
        minMergeGammaEt = cms.double( 0.0 ),
        minBlockElementMatchesPhoton = cms.int32( 2 ),
        dRmergePhotonWrtChargedHadron = cms.double( 0.005 ),
        plugin = cms.string( "PFRecoTauChargedHadronFromPFCandidatePlugin" ),
        dRmergeNeutralHadronWrtChargedHadron = cms.double( 0.005 ),
        minMergeChargedHadronPt = cms.double( 100.0 ),
        maxUnmatchedBlockElementsPhoton = cms.int32( 1 ),
        name = cms.string( "chargedPFCandidates" ),
        dRmergeNeutralHadronWrtElectron = cms.double( 0.05 ),
        chargedHadronCandidatesParticleIds = cms.vint32( 1, 2, 3 ),
        minMergeNeutralHadronEt = cms.double( 0.0 )
      )
    )
)
process.hltPFTauPiZeros = cms.EDProducer( "RecoTauPiZeroProducer",
    massHypothesis = cms.double( 0.136 ),
    ranking = cms.VPSet( 
      cms.PSet(  selectionFailValue = cms.double( 1000.0 ),
        plugin = cms.string( "RecoTauPiZeroStringQuality" ),
        selection = cms.string( "algoIs('kStrips')" ),
        name = cms.string( "InStrip" ),
        selectionPassFunction = cms.string( "abs(mass() - 0.13579)" )
      )
    ),
    verbosity = cms.int32( 0 ),
    maxJetAbsEta = cms.double( 99.0 ),
    outputSelection = cms.string( "pt > 0" ),
    minJetPt = cms.double( -1.0 ),
    jetSrc = cms.InputTag( "hltAK4PFJetsForTaus" ),
    builders = cms.VPSet( 
      cms.PSet(  minGammaEtStripSeed = cms.double( 0.5 ),
        applyElecTrackQcuts = cms.bool( False ),
        stripCandidatesParticleIds = cms.vint32( 2, 4 ),
        makeCombinatoricStrips = cms.bool( False ),
        stripPhiAssociationDistance = cms.double( 0.2 ),
        qualityCuts = cms.PSet( 
          vertexTrackFiltering = cms.bool( False ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            maxDeltaZ = cms.double( 0.2 ),
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" )
        ),
        maxStripBuildIterations = cms.int32( -1 ),
        updateStripAfterEachDaughter = cms.bool( False ),
        stripEtaAssociationDistance = cms.double( 0.05 ),
        minStripEt = cms.double( 1.0 ),
        plugin = cms.string( "RecoTauPiZeroStripPlugin2" ),
        minGammaEtStripAdd = cms.double( 0.0 ),
        name = cms.string( "s" )
      )
    )
)
process.hltPFTausSansRef = cms.EDProducer( "RecoTauProducer",
    piZeroSrc = cms.InputTag( "hltPFTauPiZeros" ),
    jetRegionSrc = cms.InputTag( "hltTauPFJets08Region" ),
    maxJetAbsEta = cms.double( 99.0 ),
    outputSelection = cms.string( "" ),
    chargedHadronSrc = cms.InputTag( "hltTauPFJetsRecoTauChargedHadrons" ),
    minJetPt = cms.double( -1.0 ),
    jetSrc = cms.InputTag( "hltAK4PFJetsForTaus" ),
    builders = cms.VPSet( 
      cms.PSet(  isoConePiZeros = cms.string( "0.4" ),
        leadObjectPt = cms.double( 0.5 ),
        signalConePiZeros = cms.string( "min(max(3.6/pt(),0.08),0.12)" ),
        minAbsPhotonSumPt_insideSignalCone = cms.double( 2.5 ),
        qualityCuts = cms.PSet( 
          vertexTrackFiltering = cms.bool( False ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            maxDeltaZ = cms.double( 0.2 ),
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False ),
            minNeutralHadronEt = cms.double( 1.0 )
          ),
          vxAssocQualityCuts = cms.PSet( 
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" )
        ),
        signalConeChargedHadrons = cms.string( "min(max(3.6/pt(),0.08),0.12)" ),
        matchingCone = cms.string( "0.4" ),
        isoConeChargedHadrons = cms.string( "0.4" ),
        plugin = cms.string( "RecoTauBuilderConePlugin" ),
        usePFLeptons = cms.bool( True ),
        pfCandSrc = cms.InputTag( "hltParticleFlowForTaus" ),
        isoConeNeutralHadrons = cms.string( "0.4" ),
        name = cms.string( "fixedConeTau" ),
        maxSignalConeChargedHadrons = cms.int32( 3 ),
        minRelPhotonSumPt_insideSignalCone = cms.double( 0.1 ),
        signalConeNeutralHadrons = cms.string( "0.1" )
      )
    ),
    buildNullTaus = cms.bool( True ),
    verbosity = cms.int32( 0 ),
    modifiers = cms.VPSet( 
      cms.PSet(  ElectronPreIDProducer = cms.InputTag( "elecpreid" ),
        EcalStripSumE_minClusEnergy = cms.double( 0.1 ),
        ElecPreIDLeadTkMatch_maxDR = cms.double( 0.01 ),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double( -0.1 ),
        plugin = cms.string( "RecoTauElectronRejectionPlugin" ),
        EcalStripSumE_deltaEta = cms.double( 0.03 ),
        name = cms.string( "shrinkingConeElectronRej" ),
        DataType = cms.string( "AOD" ),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double( 0.5 ),
        maximumForElectrionPreIDOutput = cms.double( -0.1 )
      )
    )
)
process.hltPFTaus = cms.EDProducer( "RecoTauPiZeroUnembedder",
    src = cms.InputTag( "hltPFTausSansRef" )
)
process.hltPFTauTrackFindingDiscriminator = cms.EDProducer( "PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double( 0.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    UseOnlyChargedHadrons = cms.bool( True ),
    PFTauProducer = cms.InputTag( "hltPFTaus" )
)
process.hltSelectedPFTausTrackFinding = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltPFTaus" ),
    cut = cms.string( "pt > 0" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltPFTauTrackFindingDiscriminator" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
    )
)
process.hltPFTauTrack = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltSelectedPFTausTrackFinding" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPFTauMediumAbsoluteChargedIsolationDiscriminator = cms.EDProducer( "PFRecoTauDiscriminationByIsolation",
    storeRawFootprintCorrection = cms.bool( False ),
    PFTauProducer = cms.InputTag( "hltPFTaus" ),
    storeRawOccupancy = cms.bool( False ),
    maximumSumPtCut = cms.double( 2.3 ),
    qualityCuts = cms.PSet( 
      vertexTrackFiltering = cms.bool( False ),
      isolationQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.5 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      recoverLeadingTrk = cms.bool( False ),
      signalQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        useTracksInsteadOfPFHadrons = cms.bool( False ),
        minNeutralHadronEt = cms.double( 1.0 )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" )
    ),
    minTauPtForNoIso = cms.double( -99.0 ),
    maxAbsPhotonSumPt_outsideSignalCone = cms.double( 1.0E9 ),
    vertexSrc = cms.InputTag( "NotUsed" ),
    applySumPtCut = cms.bool( True ),
    rhoConeSize = cms.double( 0.5 ),
    ApplyDiscriminationByTrackerIsolation = cms.bool( True ),
    storeRawPhotonSumPt_outsideSignalCone = cms.bool( False ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuons" ),
    enableHGCalWorkaround = cms.bool( False ),
    footprintCorrections = cms.VPSet( 
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 0" )
      ),
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 1 || decayMode() = 2" )
      ),
      cms.PSet(  offset = cms.string( "2.7" ),
        selection = cms.string( "decayMode() = 5" )
      ),
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 6" )
      ),
      cms.PSet(  offset = cms.string( "max(2.0, 0.22*pt() - 2.0)" ),
        selection = cms.string( "decayMode() = 10" )
      )
    ),
    deltaBetaFactor = cms.string( "0.38" ),
    applyFootprintCorrection = cms.bool( False ),
    UseAllPFCandsForWeights = cms.bool( False ),
    relativeSumPtCut = cms.double( 0.03 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    maximumOccupancy = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    applyOccupancyCut = cms.bool( False ),
    applyDeltaBetaCorrection = cms.bool( False ),
    applyRelativeSumPtCut = cms.bool( False ),
    storeRawPUsumPt = cms.bool( False ),
    applyPhotonPtSumOutsideSignalConeCut = cms.bool( False ),
    deltaBetaPUTrackPtCutOverride = cms.bool( True ),
    ApplyDiscriminationByWeightedECALIsolation = cms.bool( False ),
    storeRawSumPt = cms.bool( False ),
    ApplyDiscriminationByECALIsolation = cms.bool( False ),
    applyRhoCorrection = cms.bool( False ),
    WeightECALIsolation = cms.double( 1.0 ),
    rhoUEOffsetCorrection = cms.double( 1.0 ),
    maxRelPhotonSumPt_outsideSignalCone = cms.double( 0.1 ),
    deltaBetaPUTrackPtCutOverride_val = cms.double( 0.5 ),
    isoConeSizeForDeltaBeta = cms.double( 0.3 ),
    relativeSumPtOffset = cms.double( 0.0 ),
    customOuterCone = cms.double( -1.0 ),
    particleFlowSrc = cms.InputTag( "hltParticleFlowForTaus" )
)
process.hltPFTauMediumRelativeChargedIsolationDiscriminator = cms.EDProducer( "PFRecoTauDiscriminationByIsolation",
    storeRawFootprintCorrection = cms.bool( False ),
    PFTauProducer = cms.InputTag( "hltPFTaus" ),
    storeRawOccupancy = cms.bool( False ),
    maximumSumPtCut = cms.double( 3.0 ),
    qualityCuts = cms.PSet( 
      vertexTrackFiltering = cms.bool( False ),
      isolationQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.5 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      recoverLeadingTrk = cms.bool( False ),
      signalQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        useTracksInsteadOfPFHadrons = cms.bool( False ),
        minNeutralHadronEt = cms.double( 1.0 )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" )
    ),
    minTauPtForNoIso = cms.double( -99.0 ),
    maxAbsPhotonSumPt_outsideSignalCone = cms.double( 1.0E9 ),
    vertexSrc = cms.InputTag( "NotUsed" ),
    applySumPtCut = cms.bool( False ),
    rhoConeSize = cms.double( 0.5 ),
    ApplyDiscriminationByTrackerIsolation = cms.bool( True ),
    storeRawPhotonSumPt_outsideSignalCone = cms.bool( False ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAll" ),
    enableHGCalWorkaround = cms.bool( False ),
    footprintCorrections = cms.VPSet( 
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 0" )
      ),
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 1 || decayMode() = 2" )
      ),
      cms.PSet(  offset = cms.string( "2.7" ),
        selection = cms.string( "decayMode() = 5" )
      ),
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 6" )
      ),
      cms.PSet(  offset = cms.string( "max(2.0, 0.22*pt() - 2.0)" ),
        selection = cms.string( "decayMode() = 10" )
      )
    ),
    deltaBetaFactor = cms.string( "0.38" ),
    applyFootprintCorrection = cms.bool( False ),
    UseAllPFCandsForWeights = cms.bool( False ),
    relativeSumPtCut = cms.double( 0.05 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    maximumOccupancy = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    applyOccupancyCut = cms.bool( False ),
    applyDeltaBetaCorrection = cms.bool( False ),
    applyRelativeSumPtCut = cms.bool( True ),
    storeRawPUsumPt = cms.bool( False ),
    applyPhotonPtSumOutsideSignalConeCut = cms.bool( False ),
    deltaBetaPUTrackPtCutOverride = cms.bool( True ),
    ApplyDiscriminationByWeightedECALIsolation = cms.bool( False ),
    storeRawSumPt = cms.bool( False ),
    ApplyDiscriminationByECALIsolation = cms.bool( False ),
    applyRhoCorrection = cms.bool( False ),
    WeightECALIsolation = cms.double( 1.0 ),
    rhoUEOffsetCorrection = cms.double( 1.0 ),
    maxRelPhotonSumPt_outsideSignalCone = cms.double( 0.1 ),
    deltaBetaPUTrackPtCutOverride_val = cms.double( 0.5 ),
    isoConeSizeForDeltaBeta = cms.double( 0.3 ),
    relativeSumPtOffset = cms.double( 60.0 ),
    customOuterCone = cms.double( -1.0 ),
    particleFlowSrc = cms.InputTag( "hltParticleFlowForTaus" )
)
process.hltPFTauMediumAbsOrRelChargedIsolationDiscriminator = cms.EDProducer( "PFTauDiscriminatorLogicalAndProducer",
    Prediscriminants = cms.PSet( 
      BooleanOperator = cms.string( "or" ),
      discr1 = cms.PSet( 
        cut = cms.double( 0.5 ),
        Producer = cms.InputTag( "hltPFTauMediumAbsoluteChargedIsolationDiscriminator" )
      ),
      discr2 = cms.PSet( 
        cut = cms.double( 0.5 ),
        Producer = cms.InputTag( "hltPFTauMediumRelativeChargedIsolationDiscriminator" )
      )
    ),
    PassValue = cms.double( 1.0 ),
    FailValue = cms.double( 0.0 ),
    PFTauProducer = cms.InputTag( "hltPFTaus" )
)
process.hltPFTau35 = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFTaus" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 35.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPFTau35Track = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltSelectedPFTausTrackFinding" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 35.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPFTau2Prongs = cms.EDProducer( "PFRecoTauDiscriminationByNProngs",
    qualityCuts = cms.PSet( 
      vertexTrackFiltering = cms.bool( False ),
      isolationQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.1 ),
        minTrackPt = cms.double( 0.5 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      recoverLeadingTrk = cms.bool( False ),
      signalQualityCuts = cms.PSet( 
        minNeutralHadronEt = cms.double( 30.0 ),
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" )
    ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    BooleanOutput = cms.bool( True ),
    PFTauProducer = cms.InputTag( "hltPFTaus" ),
    MinN = cms.uint32( 2 ),
    MaxN = cms.uint32( 2 )
)
process.hltSelectedPFTausTrackFindingMediumChargedIsolation = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltPFTaus" ),
    cut = cms.string( "pt > 0" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltPFTauTrackFindingDiscriminator" ),
        selectionCut = cms.double( 0.5 )
      ),
      cms.PSet(  discriminator = cms.InputTag( "hltPFTauMediumAbsOrRelChargedIsolationDiscriminator" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
    )
)
process.hltPFTau35TrackMediumChargedIso = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltSelectedPFTausTrackFindingMediumChargedIsolation" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 35.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltL1sTripleMu0IorTripleMu553 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_TripleMu0 OR L1_TripleMu_5_5_3 OR L1_TripleMu_5_3_3 OR L1_TripleMu3_SQ" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreTripleMu533Mass3p8DZ = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1TripleMu553L1TriMuFiltered3 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sTripleMu0IorTripleMu553" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 3.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 3 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL1TripleMu553L2TriMuFiltered3 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L1TriMuFiltered3" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1TripleMu553L1TriMuFiltered3 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L1TriMuFiltered3" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1TripleMu553f0PreFiltered333 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L2TriMuFiltered3" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1TripleMu553L1TriMuFiltered3" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 3 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 3.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1TripleMu553f0Filtered533 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L2TriMuFiltered3" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1TripleMu553L1TriMuFiltered3" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 5.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltTripleMu533TripleDZ0p2 = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    inputTag1 = cms.InputTag( "hltL3fL1TripleMu553f0PreFiltered333" ),
    inputTag2 = cms.InputTag( "hltL3fL1TripleMu553f0PreFiltered333" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    MinN = cms.int32( 3 ),
    MinPixHitsForDZ = cms.int32( 1 ),
    checkSC = cms.bool( False )
)
process.hltTripleMu533Mass3p8toInfFilter = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L2TriMuFiltered3" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1TripleMu553L1TriMuFiltered3" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 3 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 3.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 3.8 ),
    MaxInvMass = cms.vdouble( 999999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreTripleMu1055DZ = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1TripleMu553f0PreFiltered555 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L2TriMuFiltered3" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1TripleMu553L1TriMuFiltered3" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 3 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 5.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1TripleMu553f0Filtered1055 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L2TriMuFiltered3" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1TripleMu553L1TriMuFiltered3" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltTripleMu555TripleDZ0p2 = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    inputTag1 = cms.InputTag( "hltL3fL1TripleMu553f0PreFiltered555" ),
    inputTag2 = cms.InputTag( "hltL3fL1TripleMu553f0PreFiltered555" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    MinN = cms.int32( 3 ),
    MinPixHitsForDZ = cms.int32( 1 ),
    checkSC = cms.bool( False )
)
process.hltPreTripleMu12105 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1TripleMu553f0Filtered10105 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L2TriMuFiltered3" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1TripleMu553L1TriMuFiltered3" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1TripleMu553f0Filtered12105 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L2TriMuFiltered3" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1TripleMu553L1TriMuFiltered3" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 12.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL1sDoubleMu0ETM40IorDoubleMu0ETM55IorDoubleMu0ETM60IorDoubleMu0ETM65IorDoubleMu0ETM70 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleMu3_SQ_ETMHF30_HTT60er OR L1_DoubleMu3_SQ_ETMHF40_HTT60er OR L1_DoubleMu3_SQ_ETMHF50_HTT60er OR L1_DoubleMu3_SQ_ETMHF30_Jet60er2p5_OR_DoubleJet40er2p5 OR L1_DoubleMu3_SQ_ETMHF40_Jet60er2p5_OR_DoubleJet40er2p5 OR L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5_OR_DoubleJet40er2p5 OR L1_DoubleMu3_SQ_ETMHF50_Jet60er2p5 OR L1_DoubleMu3_SQ_ETMHF60_Jet60er2p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDoubleMu3DZPFMET50PFMHT60 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMu0ETM40IorDoubleMu0ETM55IorDoubleMu0ETM60IorDoubleMu0ETM65IorDoubleMu0ETM70" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 2 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1DiMu3SQETM50f0PreFiltered3 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 3.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDoubleMuon3Mass3p8to60Filter = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 3.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 3.8 ),
    MaxInvMass = cms.vdouble( 60.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDoubleMuon3Mass3p8to60DZFilter = cms.EDFilter( "HLT2MuonMuonDZ",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    inputTag1 = cms.InputTag( "hltDoubleMuon3Mass3p8to60Filter" ),
    inputTag2 = cms.InputTag( "hltDoubleMuon3Mass3p8to60Filter" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 83 ),
    MinDR = cms.double( 0.001 ),
    MaxDZ = cms.double( 0.2 ),
    MinN = cms.int32( 1 ),
    MinPixHitsForDZ = cms.int32( 0 ),
    checkSC = cms.bool( False )
)
process.hltMet = cms.EDProducer( "CaloMETProducer",
    src = cms.InputTag( "hltTowerMakerForAll" ),
    alias = cms.string( "RawCaloMET" ),
    noHF = cms.bool( False ),
    globalThreshold = cms.double( 0.3 ),
    calculateSignificance = cms.bool( False )
)
process.hltMET40 = cms.EDFilter( "HLT1CaloMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltMet" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 40.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 999.0 ),
    MinN = cms.int32( 1 )
)
process.hltPFMET50 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPFMHTNoMuTightID = cms.EDProducer( "HLTHtMhtProducer",
    usePt = cms.bool( False ),
    excludePFMuons = cms.bool( True ),
    minNJetHt = cms.int32( 0 ),
    minNJetMht = cms.int32( 0 ),
    minPtJetHt = cms.double( 20.0 ),
    minPtJetMht = cms.double( 20.0 ),
    maxEtaJetHt = cms.double( 5.2 ),
    maxEtaJetMht = cms.double( 5.2 ),
    jetsLabel = cms.InputTag( "hltAK4PFJetsTightIDCorrected" ),
    pfCandidatesLabel = cms.InputTag( "hltParticleFlow" )
)
process.hltPFMHTNoMuTightID60 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltPFMHTNoMuTightID' ),
    minMht = cms.vdouble( 60.0 )
)
process.hltPreDoubleMu3DZPFMET70PFMHT70 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFMET70 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 70.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPFMHTNoMuTightID70 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltPFMHTNoMuTightID' ),
    minMht = cms.vdouble( 70.0 )
)
process.hltPreDoubleMu3DZPFMET90PFMHT90 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFMET90 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 90.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPFMHTNoMuTightID90 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltPFMHTNoMuTightID' ),
    minMht = cms.vdouble( 90.0 )
)
process.hltPreDoubleMu43NoFiltersNoVtx = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fDimuonL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMu125to157" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 2 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fDimuonL1f0L2NoVtxFiltered16 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fDimuonL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 16.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3TrajSeedOIStateNoVtx = cms.EDProducer( "TSGFromL2Muon",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSteppingHelixPropagatorOpposite',
        'hltESPSteppingHelixPropagatorAlong' )
    ),
    MuonTrackingRegionBuilder = cms.PSet(  ),
    TrackerSeedCleaner = cms.PSet(  ),
    TkSeedGenerator = cms.PSet( 
      copyMuonRecHit = cms.bool( False ),
      propagatorName = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
      MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
      errorMatrixPset = cms.PSet( 
        atIP = cms.bool( True ),
        action = cms.string( "use" ),
        errorMatrixValuesPSet = cms.PSet( 
          xAxis = cms.vdouble( 0.0, 13.0, 30.0, 70.0, 1000.0 ),
          zAxis = cms.vdouble( -3.14159, 3.14159 ),
          yAxis = cms.vdouble( 0.0, 1.0, 1.4, 10.0 ),
          pf3_V14 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V25 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V13 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V24 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V35 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V12 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V23 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V34 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V45 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V11 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V22 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V33 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V44 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V55 = cms.PSet( 
            values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
            action = cms.string( "scale" )
          ),
          pf3_V15 = cms.PSet( 
            values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
            action = cms.string( "scale" )
          )
        )
      ),
      ComponentName = cms.string( "TSGForRoadSearch" ),
      maxChi2 = cms.double( 40.0 ),
      manySeeds = cms.bool( False ),
      propagatorCompatibleName = cms.string( "hltESPSteppingHelixPropagatorOpposite" ),
      option = cms.uint32( 3 )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    PtCut = cms.double( 1.0 ),
    PCut = cms.double( 2.5 )
)
process.hltL3TrackCandidateFromL2OIStateNoVtx = cms.EDProducer( "CkfTrajectoryMaker",
    trackCandidateAlso = cms.bool( True ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( True ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltL3TrajSeedOIStateNoVtx" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 0 )
)
process.hltL3TkTracksFromL2OIStateNoVtx = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltL3TrackCandidateFromL2OIStateNoVtx" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltL3NoFiltersNoVtxMuonsOIState = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonTrackingRegionBuilder8356" ) ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "pixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9.0E99 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9.0E99 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltL3TkTracksFromL2OIStateNoVtx" )
    )
)
process.hltL3NoFiltersNoVtxTrajSeedOIHit = cms.EDProducer( "TSGFromL2Muon",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'PropagatorWithMaterial',
        'hltESPSmartPropagatorAnyOpposite' )
    ),
    MuonTrackingRegionBuilder = cms.PSet(  ),
    TrackerSeedCleaner = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      cleanerFromSharedHits = cms.bool( True ),
      directionCleaner = cms.bool( True ),
      ptCleaner = cms.bool( True )
    ),
    TkSeedGenerator = cms.PSet( 
      iterativeTSG = cms.PSet( 
        MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
        beamSpot = cms.InputTag( "unused" ),
        MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
        SelectState = cms.bool( False ),
        ErrorRescaling = cms.double( 3.0 ),
        UseVertexState = cms.bool( True ),
        SigmaZ = cms.double( 25.0 ),
        MaxChi2 = cms.double( 40.0 ),
        errorMatrixPset = cms.PSet( 
          atIP = cms.bool( True ),
          action = cms.string( "use" ),
          errorMatrixValuesPSet = cms.PSet( 
            xAxis = cms.vdouble( 0.0, 13.0, 30.0, 70.0, 1000.0 ),
            zAxis = cms.vdouble( -3.14159, 3.14159 ),
            yAxis = cms.vdouble( 0.0, 1.0, 1.4, 10.0 ),
            pf3_V14 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V25 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V13 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V24 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V35 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V12 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V23 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V34 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V45 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V11 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V22 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V33 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V44 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V55 = cms.PSet( 
              values = cms.vdouble( 3.0, 3.0, 3.0, 5.0, 4.0, 5.0, 10.0, 7.0, 10.0, 10.0, 10.0, 10.0 ),
              action = cms.string( "scale" )
            ),
            pf3_V15 = cms.PSet( 
              values = cms.vdouble( 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 ),
              action = cms.string( "scale" )
            )
          )
        ),
        Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
        ComponentName = cms.string( "TSGFromPropagation" ),
        UpdateState = cms.bool( True ),
        ResetMethod = cms.string( "matrix" )
      ),
      PSetNames = cms.vstring( 'skipTSG',
        'iterativeTSG' ),
      skipTSG = cms.PSet(  ),
      ComponentName = cms.string( "DualByL2TSG" ),
      L3TkCollectionA = cms.InputTag( "hltL3NoFiltersNoVtxMuonsOIState" )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    PtCut = cms.double( 1.0 ),
    PCut = cms.double( 2.5 )
)
process.hltL3NoFiltersTrackCandidateFromL2OIHitNoVtx = cms.EDProducer( "CkfTrajectoryMaker",
    trackCandidateAlso = cms.bool( True ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( True ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltL3NoFiltersNoVtxTrajSeedOIHit" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 0 )
)
process.hltL3NoFiltersTkTracksFromL2OIHitNoVtx = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltL3NoFiltersTrackCandidateFromL2OIHitNoVtx" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltL3NoFiltersNoVtxMuonsOIHit = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonTrackingRegionBuilder8356" ) ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "pixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9.0E99 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9.0E99 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltL3NoFiltersTkTracksFromL2OIHitNoVtx" )
    )
)
process.hltL3NoFiltersNoVtxTkFromL2OICombination = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3NoFiltersNoVtxMuonsOIState','hltL3NoFiltersNoVtxMuonsOIHit' )
)
process.hltL3NoFiltersNoVtxTrajSeedIOHit = cms.EDProducer( "TSGFromL2Muon",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'PropagatorWithMaterial' )
    ),
    MuonTrackingRegionBuilder = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonTrackingRegionBuilder8356" ) ),
    TrackerSeedCleaner = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      cleanerFromSharedHits = cms.bool( True ),
      directionCleaner = cms.bool( True ),
      ptCleaner = cms.bool( True )
    ),
    TkSeedGenerator = cms.PSet( 
      iterativeTSG = cms.PSet( 
        firstTSG = cms.PSet( 
          TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
          OrderedHitsFactoryPSet = cms.PSet( 
            SeedingLayers = cms.InputTag( "hltPixelLayerTriplets" ),
            ComponentName = cms.string( "StandardHitTripletGenerator" ),
            GeneratorPSet = cms.PSet( 
              SeedComparitorPSet = cms.PSet(  ComponentName = cms.string( "none" ) ),
              maxElement = cms.uint32( 0 ),
              useFixedPreFiltering = cms.bool( False ),
              extraHitRZtolerance = cms.double( 0.06 ),
              phiPreFiltering = cms.double( 0.3 ),
              extraHitRPhitolerance = cms.double( 0.06 ),
              useBending = cms.bool( True ),
              ComponentName = cms.string( "PixelTripletHLTGenerator" ),
              useMultScattering = cms.bool( True )
            )
          ),
          SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromConsecutiveHitsCreator" ) ),
          ComponentName = cms.string( "TSGFromOrderedHits" )
        ),
        secondTSG = cms.PSet( 
          TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
          OrderedHitsFactoryPSet = cms.PSet( 
            SeedingLayers = cms.InputTag( "hltPixelLayerPairsLegacy" ),
            maxElement = cms.uint32( 0 ),
            ComponentName = cms.string( "StandardHitPairGenerator" ),
            useOnDemandTracker = cms.untracked.int32( 0 )
          ),
          SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromConsecutiveHitsCreator" ) ),
          ComponentName = cms.string( "TSGFromOrderedHits" )
        ),
        PSetNames = cms.vstring( 'firstTSG',
          'secondTSG' ),
        thirdTSG = cms.PSet( 
          etaSeparation = cms.double( 2.0 ),
          SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromConsecutiveHitsCreator" ) ),
          PSetNames = cms.vstring( 'endcapTSG',
            'barrelTSG' ),
          barrelTSG = cms.PSet(  ),
          ComponentName = cms.string( "DualByEtaTSG" ),
          endcapTSG = cms.PSet( 
            TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
            OrderedHitsFactoryPSet = cms.PSet( 
              SeedingLayers = cms.InputTag( "hltMixedLayerPairs" ),
              maxElement = cms.uint32( 0 ),
              ComponentName = cms.string( "StandardHitPairGenerator" ),
              useOnDemandTracker = cms.untracked.int32( 0 )
            ),
            ComponentName = cms.string( "TSGFromOrderedHits" )
          )
        ),
        ComponentName = cms.string( "CombinedTSG" )
      ),
      PSetNames = cms.vstring( 'skipTSG',
        'iterativeTSG' ),
      skipTSG = cms.PSet(  ),
      ComponentName = cms.string( "DualByL2TSG" ),
      L3TkCollectionA = cms.InputTag( "hltL3NoFiltersNoVtxTkFromL2OICombination" )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    PtCut = cms.double( 1.0 ),
    PCut = cms.double( 2.5 )
)
process.hltL3NoFiltersTrackCandidateFromL2IOHitNoVtx = cms.EDProducer( "CkfTrajectoryMaker",
    trackCandidateAlso = cms.bool( True ),
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltL3NoFiltersNoVtxTrajSeedIOHit" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 0 )
)
process.hltL3NoFiltersTkTracksFromL2IOHitNoVtx = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltL3NoFiltersTrackCandidateFromL2IOHitNoVtx" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltL3NoFiltersNoVtxMuonsIOHit = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonTrackingRegionBuilder8356" ) ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "pixelVertices" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9.0E99 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9.0E99 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltL3NoFiltersTkTracksFromL2IOHitNoVtx" )
    )
)
process.hltL3NoFiltersNoVtxTrajectorySeed = cms.EDProducer( "L3MuonTrajectorySeedCombiner",
    labels = cms.VInputTag( 'hltL3NoFiltersNoVtxTrajSeedIOHit','hltL3TrajSeedOIStateNoVtx','hltL3NoFiltersNoVtxTrajSeedOIHit' )
)
process.hltL3NoFiltersTrackCandidateFromL2NoVtx = cms.EDProducer( "L3TrackCandCombiner",
    labels = cms.VInputTag( 'hltL3NoFiltersTrackCandidateFromL2IOHitNoVtx','hltL3NoFiltersTrackCandidateFromL2OIHitNoVtx','hltL3TrackCandidateFromL2OIStateNoVtx' )
)
process.hltL3NoFiltersNoVtxTkTracksMergeStep1 = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 100.0 ),
    LostHitPenalty = cms.double( 0.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltL3TkTracksFromL2OIStateNoVtx','hltL3NoFiltersTkTracksFromL2OIHitNoVtx' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltL3TkTracksFromL2OIStateNoVtx','hltL3NoFiltersTkTracksFromL2OIHitNoVtx' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltL3NoFiltersTkTracksFromL2Novtx = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 100.0 ),
    LostHitPenalty = cms.double( 0.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltL3NoFiltersNoVtxTkTracksMergeStep1','hltL3NoFiltersTkTracksFromL2IOHitNoVtx' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltL3NoFiltersNoVtxTkTracksMergeStep1','hltL3NoFiltersTkTracksFromL2IOHitNoVtx' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltL3NoFiltersNoVtxMuonsLinksCombination = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3NoFiltersNoVtxMuonsOIState','hltL3NoFiltersNoVtxMuonsOIHit','hltL3NoFiltersNoVtxMuonsIOHit' )
)
process.hltL3NoFiltersNoVtxMuons = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3NoFiltersNoVtxMuonsOIState','hltL3NoFiltersNoVtxMuonsOIHit','hltL3NoFiltersNoVtxMuonsIOHit' )
)
process.hltL3NoFiltersNoVtxMuonCandidates = cms.EDProducer( "L3MuonCandidateProducer",
    InputObjects = cms.InputTag( "hltL3NoFiltersNoVtxMuons" ),
    InputLinksObjects = cms.InputTag( "hltL3NoFiltersNoVtxMuonsLinksCombination" ),
    MuonPtOption = cms.string( "Tracker" )
)
process.hltL3fDimuonL1f0L2NVf16L3NoFiltersNoVtxFiltered43 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fDimuonL1f0L2NoVtxFiltered16" ),
    L1CandTag = cms.InputTag( "" ),
    inputMuonCollection = cms.InputTag( "" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 43.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 0.0 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "" ),
    requireL3MuonTrajectorySeed = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreDoubleMu48NoFiltersNoVtx = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fDimuonL1f0L2NVf16L3NoFiltersNoVtxFiltered48 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fDimuonL1f0L2NoVtxFiltered16" ),
    L1CandTag = cms.InputTag( "" ),
    inputMuonCollection = cms.InputTag( "" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 48.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 0.0 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "" ),
    requireL3MuonTrajectorySeed = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL1sHTT380erIorHTT320er = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_HTT360er OR L1_ETT2000 OR L1_HTT320er" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu15IsoVVVLPFHT450PFMET50 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltHT200Jet30 = cms.EDFilter( "HLTHtMhtFilter",
    saveTags = cms.bool( True ),
    htLabels = cms.VInputTag( 'hltHtMhtJet30' ),
    mhtLabels = cms.VInputTag( 'hltHtMhtJet30' ),
    minHt = cms.vdouble( 200.0 ),
    minMht = cms.vdouble( 0.0 ),
    minMeff = cms.vdouble( 0.0 ),
    meffSlope = cms.vdouble( 1.0 )
)
process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered15Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 15.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltFixedGridRhoFastjetAllCaloForMuonsWithCaloTowers = cms.EDProducer( "FixedGridRhoProducerFastjet",
    pfCandidatesTag = cms.InputTag( "hltTowerMakerForAll" ),
    maxRapidity = cms.double( 2.5 ),
    gridSpacing = cms.double( 0.55 )
)
process.hltL3CaloMuonCorrectedVVVLIsolations = cms.EDProducer( "L2MuonIsolationProducer",
    StandAloneCollectionLabel = cms.InputTag( "hltIterL3MuonCandidates" ),
    ExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      Vertex_Constraint_Z = cms.bool( False ),
      DR_Veto_E = cms.double( 0.07 ),
      Weight_H = cms.double( 1.0 ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "EcalPlusHcal" ),
      Vertex_Constraint_XY = cms.bool( False ),
      Threshold_H = cms.double( 0.5 ),
      Threshold_E = cms.double( 0.2 ),
      ComponentName = cms.string( "CaloExtractor" ),
      Weight_E = cms.double( 1.0 )
    ),
    IsolatorPSet = cms.PSet( 
      Thresholds = cms.vdouble( 9.9999999E7 ),
      ReturnRelativeSum = cms.bool( False ),
      AndOrCuts = cms.bool( True ),
      EtaBounds = cms.vdouble( 2.411 ),
      ConeSizesRel = cms.vdouble( 0.2 ),
      EtaBoundsRel = cms.vdouble( 2.411 ),
      RhoScaleBarrel = cms.double( 0.836 ),
      UseRhoCorrection = cms.bool( True ),
      ReturnAbsoluteSum = cms.bool( True ),
      RhoMax = cms.double( 9.9999999E7 ),
      RhoSrc = cms.InputTag( "hltFixedGridRhoFastjetAllCaloForMuonsWithCaloTowers" ),
      CutRelativeIso = cms.bool( False ),
      CutAbsoluteIso = cms.bool( True ),
      EffAreaSFBarrel = cms.double( 1.0 ),
      ThresholdsRel = cms.vdouble( 9.9999999E7 ),
      ComponentName = cms.string( "CutsIsolatorWithCorrection" ),
      ConeSizes = cms.vdouble( 0.2 ),
      EffAreaSFEndcap = cms.double( 0.883 ),
      RhoScaleEndcap = cms.double( 1.0 )
    ),
    WriteIsolatorFloat = cms.bool( True )
)
process.hltL3MuonCombRelIsolationVVVL = cms.EDProducer( "L3MuonCombinedRelativeIsolationProducer",
    UseRhoCorrectedCaloDeposits = cms.bool( True ),
    UseCaloIso = cms.bool( True ),
    CaloDepositsLabel = cms.InputTag( "hltL3CaloMuonCorrectedVVVLIsolations" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonCandidates" ),
    OutputMuIsoDeposits = cms.bool( True ),
    TrackPt_Min = cms.double( -1.0 ),
    printDebug = cms.bool( False ),
    CutsPSet = cms.PSet( 
      applyCutsORmaxNTracks = cms.bool( False ),
      maxNTracks = cms.int32( -1 ),
      Thresholds = cms.vdouble( 1.2 ),
      EtaBounds = cms.vdouble( 2.411 ),
      ComponentName = cms.string( "SimpleCuts" ),
      ConeSizes = cms.vdouble( 0.2 )
    ),
    TrkExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter0L3MuonTrackSelectionHighPurity" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      VetoLeadingTrack = cms.bool( True ),
      DR_Max = cms.double( 0.2 ),
      DepositLabel = cms.untracked.string( "PXLS" ),
      PtVeto_Min = cms.double( 2.0 ),
      NHits_Min = cms.uint32( 0 ),
      PropagateTracksToRadius = cms.bool( True ),
      ReferenceRadius = cms.double( 6.0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "PixelTrackExtractor" ),
      DR_VetoPt = cms.double( 0.025 )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      Vertex_Constraint_Z = cms.bool( False ),
      DR_Veto_E = cms.double( 0.07 ),
      Weight_H = cms.double( 1.0 ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
      DR_Max = cms.double( 0.2 ),
      DepositLabel = cms.untracked.string( "EcalPlusHcal" ),
      Vertex_Constraint_XY = cms.bool( False ),
      Threshold_H = cms.double( 0.5 ),
      Threshold_E = cms.double( 0.2 ),
      ComponentName = cms.string( "CaloExtractor" ),
      Weight_E = cms.double( 1.0 )
    )
)
process.hltL3MuVVVLIsoFIlter = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered15Q" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltL3MuonCombRelIsolationVVVL' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltPFHT450Jet30 = cms.EDFilter( "HLTHtMhtFilter",
    saveTags = cms.bool( True ),
    htLabels = cms.VInputTag( 'hltPFHTJet30' ),
    mhtLabels = cms.VInputTag( 'hltPFHTJet30' ),
    minHt = cms.vdouble( 450.0 ),
    minMht = cms.vdouble( 0.0 ),
    minMeff = cms.vdouble( 0.0 ),
    meffSlope = cms.vdouble( 1.0 )
)
process.hltPreMu15IsoVVVLPFHT450 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu50IsoVVVLPFHT450 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered50Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3Mu50VVVLIsoFIlter = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered50Q" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltL3MuonCombRelIsolationVVVL' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltPreMu15IsoVVVLPFHT600 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFHT600Jet30 = cms.EDFilter( "HLTHtMhtFilter",
    saveTags = cms.bool( True ),
    htLabels = cms.VInputTag( 'hltPFHTJet30' ),
    mhtLabels = cms.VInputTag( 'hltPFHTJet30' ),
    minHt = cms.vdouble( 600.0 ),
    minMht = cms.vdouble( 0.0 ),
    minMeff = cms.vdouble( 0.0 ),
    meffSlope = cms.vdouble( 1.0 )
)
process.hltL1Mu3er1p5Jet100er2p5ETMHF40ORETMHF50 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_Mu3er1p5_Jet100er2p5_ETMHF30 OR L1_Mu3er1p5_Jet100er2p5_ETMHF40 OR L1_Mu3er1p5_Jet100er2p5_ETMHF50" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu3er1p5PFJet100er2p5PFMET80PFMHT80IDTight = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3MuFiltered3er1p5 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 3.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltMET50 = cms.EDFilter( "HLT1CaloMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltMet" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltSingleAK4CaloJet70 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4CaloJetsCorrectedIDPassed" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 70.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 5.0 ),
    MinN = cms.int32( 1 )
)
process.hltMht = cms.EDProducer( "HLTHtMhtProducer",
    usePt = cms.bool( False ),
    excludePFMuons = cms.bool( False ),
    minNJetHt = cms.int32( 0 ),
    minNJetMht = cms.int32( 0 ),
    minPtJetHt = cms.double( 20.0 ),
    minPtJetMht = cms.double( 20.0 ),
    maxEtaJetHt = cms.double( 5.2 ),
    maxEtaJetMht = cms.double( 5.2 ),
    jetsLabel = cms.InputTag( "hltAK4CaloJetsCorrectedIDPassed" ),
    pfCandidatesLabel = cms.InputTag( "" )
)
process.hltMHT50 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltMht' ),
    minMht = cms.vdouble( 50.0 )
)
process.hltPFJetsCorrectedMatchedToCaloJets70 = cms.EDProducer( "HLTPFJetsMatchedToFilteredCaloJetsProducer",
    src = cms.InputTag( "hltAK4PFJetsCorrected" ),
    triggerJetsFilter = cms.InputTag( "hltSingleAK4CaloJet70" ),
    triggerJetsType = cms.int32( 85 ),
    maxDeltaR = cms.double( 0.5 )
)
process.hltSinglePFJet100er2p5 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFJetsCorrectedMatchedToCaloJets70" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 100.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPFMHTTightID = cms.EDProducer( "HLTHtMhtProducer",
    usePt = cms.bool( False ),
    excludePFMuons = cms.bool( False ),
    minNJetHt = cms.int32( 0 ),
    minNJetMht = cms.int32( 0 ),
    minPtJetHt = cms.double( 20.0 ),
    minPtJetMht = cms.double( 20.0 ),
    maxEtaJetHt = cms.double( 5.2 ),
    maxEtaJetMht = cms.double( 5.2 ),
    jetsLabel = cms.InputTag( "hltAK4PFJetsTightIDCorrected" ),
    pfCandidatesLabel = cms.InputTag( "" )
)
process.hltPFMHTTightID80 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltPFMHTTightID' ),
    minMht = cms.vdouble( 80.0 )
)
process.hltPFMET80 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 80.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreMu3er1p5PFJet100er2p5PFMET90PFMHT90IDTight = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltMET60 = cms.EDFilter( "HLT1CaloMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltMet" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 60.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltMHT60 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltMht' ),
    minMht = cms.vdouble( 60.0 )
)
process.hltPFMHTTightID90 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltPFMHTTightID' ),
    minMht = cms.vdouble( 90.0 )
)
process.hltPreMu3er1p5PFJet100er2p5PFMET100PFMHT100IDTight = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltMET70 = cms.EDFilter( "HLT1CaloMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltMet" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 70.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltMHT70 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltMht' ),
    minMht = cms.vdouble( 70.0 )
)
process.hltPFMHTTightID100 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltPFMHTTightID' ),
    minMht = cms.vdouble( 100.0 )
)
process.hltPFMET100 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 100.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreMu3er1p5PFJet100er2p5PFMETNoMu80PFMHTNoMu80IDTight = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFMHTNoMuTightID80 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltPFMHTNoMuTightID' ),
    minMht = cms.vdouble( 80.0 )
)
process.hltParticleFlowNoMu = cms.EDFilter( "GenericPFCandidateSelector",
    src = cms.InputTag( "hltParticleFlow" ),
    cut = cms.string( "particleId!=3" )
)
process.hltPFMETNoMuProducer = cms.EDProducer( "PFMETProducer",
    src = cms.InputTag( "hltParticleFlowNoMu" ),
    globalThreshold = cms.double( 0.0 ),
    alias = cms.string( "pfMetNoMu" ),
    calculateSignificance = cms.bool( False ),
    parameters = cms.PSet(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" )
)
process.hltPFMETNoMu80 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETNoMuProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 80.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreMu3er1p5PFJet100er2p5PFMETNoMu90PFMHTNoMu90IDTight = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFMETNoMu90 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETNoMuProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 90.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreMu3er1p5PFJet100er2p5PFMETNoMu100PFMHTNoMu100IDTight = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFMHTNoMuTightID100 = cms.EDFilter( "HLTMhtFilter",
    saveTags = cms.bool( True ),
    mhtLabels = cms.VInputTag( 'hltPFMHTNoMuTightID' ),
    minMht = cms.vdouble( 100.0 )
)
process.hltPFMETNoMu100 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETNoMuProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 100.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltL1sDoubleMu125to157ORTripleMu444 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleMu_12_5 OR L1_DoubleMu_15_5_SQ OR L1_DoubleMu_15_7 OR L1_TripleMu_5_3_3" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreTrkMu12DoubleTrkMu5NoFiltersNoVtx = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sDoubleMu155ORTripleMu444L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMu125to157ORTripleMu444" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 2 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2pfL1sDoubleMu155ORTripleMu444L1f0L2PreFiltered0NoVtx = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu155ORTripleMu444L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL2fL1sDoubleMu155ORTripleMu444L1f0L2Filtered10OneMuNoVtx = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu155ORTripleMu444L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3pfL1sDoubleMu155ORTripleMu444L1f0L2pf0TwoMuL3PreFiltered5NoVtx = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu155ORTripleMu444L1f0L2PreFiltered0NoVtx" ),
    L1CandTag = cms.InputTag( "" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonsNoVtx" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 5.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3LinksNoVtx" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sDoubleMu155ORTripleMu444L1f0L2f10OneMuL3Filtered12NoVtx = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu155ORTripleMu444L1f0L2PreFiltered0NoVtx" ),
    L1CandTag = cms.InputTag( "" ),
    inputMuonCollection = cms.InputTag( "hltIterL3MuonsNoVtx" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 12.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3LinksNoVtx" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDiMuonMergingNoVtx = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 100.0 ),
    LostHitPenalty = cms.double( 0.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3MuonAndMuonFromL1MergedNoVtx','hltMuCtfTracks' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3MuonAndMuonFromL1MergedNoVtx','hltMuCtfTracks' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltDiMuonLinksNoVtx = cms.EDProducer( "MuonLinksProducerForHLT",
    InclusiveTrackerTrackCollection = cms.InputTag( "hltDiMuonMergingNoVtx" ),
    LinkCollection = cms.InputTag( "hltIterL3MuonsFromL2LinksCombinationNoVtx" ),
    ptMin = cms.double( 2.5 ),
    pMin = cms.double( 2.5 ),
    shareHitFraction = cms.double( 0.8 )
)
process.hltGlbTrkMuonsNoVtx = cms.EDProducer( "MuonIdProducer",
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( False ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( False ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( False ),
      HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltPFMuonMerging" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "" ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "hltAntiKT4CaloJetsPFEt5" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForPF" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    trackDepositName = cms.string( "tracker" ),
    ecalDepositName = cms.string( "ecal" ),
    hcalDepositName = cms.string( "hcal" ),
    hoDepositName = cms.string( "ho" ),
    jetDepositName = cms.string( "jets" ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    ShowerDigiFillerParameters = cms.PSet( 
      cscDigiCollectionLabel = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
      dtDigiCollectionLabel = cms.InputTag( "hltMuonDTDigis" ),
      digiMaxDistanceX = cms.double( 25.0 )
    ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    fillEnergy = cms.bool( False ),
    storeCrossedHcalRecHits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsEta = cms.double( 3.0 ),
    minPt = cms.double( 8.0 ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links' ),
    addExtraSoftMuons = cms.bool( False ),
    fillGlobalTrackRefits = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    inputCollectionLabels = cms.VInputTag( 'hltDiMuonMergingNoVtx','hltDiMuonLinksNoVtx' ),
    fillCaloCompatibility = cms.bool( False ),
    maxAbsPullY = cms.double( 9999.0 ),
    maxAbsDy = cms.double( 9999.0 ),
    minP = cms.double( 0.0 ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDx = cms.double( 3.0 ),
    fillIsolation = cms.bool( False ),
    writeIsoDeposits = cms.bool( False ),
    minNumberOfMatches = cms.int32( 1 ),
    fillMatching = cms.bool( True ),
    fillShowerDigis = cms.bool( False ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    fillGlobalTrackQuality = cms.bool( False ),
    globalTrackQualityInputTag = cms.InputTag( "" ),
    selectHighPurity = cms.bool( False ),
    pvInputTag = cms.InputTag( "" ),
    fillTrackerKink = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    runArbitrationCleaner = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    arbitrateTrackerMuons = cms.bool( False )
)
process.hltGlbTrkMuonCandsNoVtx = cms.EDProducer( "L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag( "hltGlbTrkMuonsNoVtx" ),
    DisplacedReconstruction = cms.bool( False )
)
process.hltTripleTrkMuFiltered5NoVtx = cms.EDFilter( "HLTMuonTrkL1TFilter",
    saveTags = cms.bool( True ),
    inputMuonCollection = cms.InputTag( "hltGlbTrkMuonsNoVtx" ),
    inputCandCollection = cms.InputTag( "hltGlbTrkMuonCandsNoVtx" ),
    previousCandTag = cms.InputTag( "" ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    minMuonStations = cms.int32( 2 ),
    maxNormalizedChi2 = cms.double( 1.0E99 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 4 ),
    trkMuonId = cms.uint32( 0 ),
    minPt = cms.double( 5.0 ),
    minN = cms.uint32( 3 ),
    maxAbsEta = cms.double( 2.5 ),
    L1MatchingdR = cms.double( 0.3 ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltSingleTrkMuFiltered12NoVtx = cms.EDFilter( "HLTMuonTrkL1TFilter",
    saveTags = cms.bool( True ),
    inputMuonCollection = cms.InputTag( "hltGlbTrkMuonsNoVtx" ),
    inputCandCollection = cms.InputTag( "hltGlbTrkMuonCandsNoVtx" ),
    previousCandTag = cms.InputTag( "" ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    minMuonStations = cms.int32( 2 ),
    maxNormalizedChi2 = cms.double( 1.0E99 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 4 ),
    trkMuonId = cms.uint32( 0 ),
    minPt = cms.double( 12.0 ),
    minN = cms.uint32( 1 ),
    maxAbsEta = cms.double( 2.5 ),
    L1MatchingdR = cms.double( 0.3 ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreMu8 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu17 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu19 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreMu18Mu9SameSign = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sDoubleMu157L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sDoubleMu125to157" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 2 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2pfL1sDoubleMu157L1f0L2PreFiltered0 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu157L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL2fL1sDoubleMu157L1f0L2Filtered10OneMu = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu157L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMu157L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1DoubleMu157fFiltered9 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu157L1f0L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 9.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1DoubleMu157fFiltered18 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sDoubleMu157L1f0L2Filtered10OneMu" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 18.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDiMuon189SameSignFiltered = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2pfL1sDoubleMu157L1f0L2PreFiltered0" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( True ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 99999.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 1 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 18.0 ),
    MinPtMin = cms.vdouble( 9.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 0.0 ),
    MaxInvMass = cms.vdouble( 999999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 3.15 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 99999.9 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreDoubleMu3DCAPFMET50PFMHT60 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1DiMu3SQETM50noDrf0PreFiltered3 = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 3.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDoubleMuon3Mass3p8DCAFilter = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 3.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( -1.0 ),
    MaxInvMass = cms.vdouble( 999999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 0.5 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltDoubleMuon3Mass3p8DCAnoDrFilter = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 3.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 3.8 ),
    MaxInvMass = cms.vdouble( 999999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 0.5 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPFMETNoMu50 = cms.EDFilter( "HLT1PFMET",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFMETNoMuProducer" ),
    triggerType = cms.int32( 87 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreDoubleMu3DCAPFMET50PFMHT60Mass2p0 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDoubleMuon3Mass2p0DCAnoDrFilter = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 3.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 2.0 ),
    MaxInvMass = cms.vdouble( 999999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 0.5 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreDoubleMu3DCAPFMET50PFMHT60Mass2p0noDCA = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDoubleMuon3Mass2p0noDrFilter = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 3.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 2.0 ),
    MaxInvMass = cms.vdouble( 999999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 999999.0 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreTripleMu533Mass3p8DCA = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltTripleMu533Mass3p8DCAFilter = cms.EDFilter( "HLTMuonDimuonL3Filter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1TripleMu553L2TriMuFiltered3" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1TripleMu553L1TriMuFiltered3" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    PreviousCandIsL2 = cms.bool( True ),
    FastAccept = cms.bool( False ),
    MinN = cms.int32( 3 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.vdouble( 0.0 ),
    MaxPtPair = cms.vdouble( 1.0E125 ),
    MinPtMax = cms.vdouble( 0.0 ),
    MinPtMin = cms.vdouble( 3.0 ),
    MaxPtMin = cms.vdouble( 1.0E125 ),
    MinInvMass = cms.vdouble( 3.8 ),
    MaxInvMass = cms.vdouble( 999999.0 ),
    MinDiMuonDeltaR = cms.double( -1.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxDCAMuMu = cms.double( 0.5 ),
    MaxRapidityPair = cms.double( 999999.0 ),
    CutCowboys = cms.bool( False ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL1sBigORMu18erTauXXer2p1 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_Mu18er2p1_Tau24er2p1 OR L1_Mu18er2p1_Tau26er2p1" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreIsoMu20eta2p1LooseDeepTauPFTauHPS27eta2p1CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    MaxEta = cms.double( 2.1 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.16 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.1 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 20.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fBigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3fBigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fBigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fBigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltStripTrackerHVOn = cms.EDFilter( "DetectorStateFilter",
    DebugOn = cms.untracked.bool( False ),
    DetectorType = cms.untracked.string( "sistrip" ),
    DcsStatusLabel = cms.untracked.InputTag( "" ),
    DCSRecordLabel = cms.untracked.InputTag( "hltOnlineMetaDataDigis" )
)
process.hltPixelTrackerHVOn = cms.EDFilter( "DetectorStateFilter",
    DebugOn = cms.untracked.bool( False ),
    DetectorType = cms.untracked.string( "pixel" ),
    DcsStatusLabel = cms.untracked.InputTag( "" ),
    DCSRecordLabel = cms.untracked.InputTag( "hltOnlineMetaDataDigis" )
)
process.hltHpsTauPFJetsRecoTauChargedHadronsWithNeutrals = cms.EDProducer( "PFRecoTauChargedHadronProducer",
    ranking = cms.VPSet( 
      cms.PSet(  selectionFailValue = cms.double( 1000.0 ),
        plugin = cms.string( "PFRecoTauChargedHadronStringQuality" ),
        selection = cms.string( "algoIs('kChargedPFCandidate')" ),
        name = cms.string( "ChargedPFCandidate" ),
        selectionPassFunction = cms.string( "-pt" )
      ),
      cms.PSet(  selectionFailValue = cms.double( 1000.0 ),
        plugin = cms.string( "PFRecoTauChargedHadronStringQuality" ),
        selection = cms.string( "algoIs('kPFNeutralHadron')" ),
        name = cms.string( "ChargedPFCandidate" ),
        selectionPassFunction = cms.string( "-pt" )
      )
    ),
    verbosity = cms.int32( 0 ),
    maxJetAbsEta = cms.double( 99.0 ),
    outputSelection = cms.string( "pt > 0.5" ),
    minJetPt = cms.double( -1.0 ),
    jetSrc = cms.InputTag( "hltAK4PFJetsForTaus" ),
    builders = cms.VPSet( 
      cms.PSet(  minBlockElementMatchesNeutralHadron = cms.int32( 2 ),
        dRmergeNeutralHadronWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtOther = cms.double( 0.005 ),
        qualityCuts = cms.PSet( 
          vertexTrackFiltering = cms.bool( False ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            minNeutralHadronEt = cms.double( 30.0 ),
            maxDeltaZ = cms.double( 0.2 ),
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          vxAssocQualityCuts = cms.PSet( 
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" )
        ),
        dRmergeNeutralHadronWrtOther = cms.double( 0.005 ),
        maxUnmatchedBlockElementsNeutralHadron = cms.int32( 1 ),
        dRmergePhotonWrtElectron = cms.double( 0.005 ),
        minMergeGammaEt = cms.double( 0.0 ),
        minBlockElementMatchesPhoton = cms.int32( 2 ),
        dRmergePhotonWrtChargedHadron = cms.double( 0.005 ),
        plugin = cms.string( "PFRecoTauChargedHadronFromPFCandidatePlugin" ),
        dRmergeNeutralHadronWrtChargedHadron = cms.double( 0.005 ),
        minMergeChargedHadronPt = cms.double( 100.0 ),
        maxUnmatchedBlockElementsPhoton = cms.int32( 1 ),
        name = cms.string( "chargedPFCandidates" ),
        dRmergeNeutralHadronWrtElectron = cms.double( 0.05 ),
        chargedHadronCandidatesParticleIds = cms.vint32( 1, 2, 3 ),
        minMergeNeutralHadronEt = cms.double( 0.0 )
      ),
      cms.PSet(  minBlockElementMatchesNeutralHadron = cms.int32( 2 ),
        dRmergeNeutralHadronWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtOther = cms.double( 0.005 ),
        qualityCuts = cms.PSet( 
          vertexTrackFiltering = cms.bool( False ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            minNeutralHadronEt = cms.double( 30.0 ),
            maxDeltaZ = cms.double( 0.2 ),
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          vxAssocQualityCuts = cms.PSet( 
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" )
        ),
        dRmergeNeutralHadronWrtOther = cms.double( 0.005 ),
        maxUnmatchedBlockElementsNeutralHadron = cms.int32( 1 ),
        dRmergePhotonWrtElectron = cms.double( 0.005 ),
        minMergeGammaEt = cms.double( 0.0 ),
        minBlockElementMatchesPhoton = cms.int32( 2 ),
        dRmergePhotonWrtChargedHadron = cms.double( 0.005 ),
        plugin = cms.string( "PFRecoTauChargedHadronFromPFCandidatePlugin" ),
        dRmergeNeutralHadronWrtChargedHadron = cms.double( 0.005 ),
        minMergeChargedHadronPt = cms.double( 0.0 ),
        maxUnmatchedBlockElementsPhoton = cms.int32( 1 ),
        name = cms.string( "PFNeutralHadrons" ),
        dRmergeNeutralHadronWrtElectron = cms.double( 0.05 ),
        chargedHadronCandidatesParticleIds = cms.vint32( 5 ),
        minMergeNeutralHadronEt = cms.double( 0.0 )
      )
    )
)
process.hltHpsCombinatoricRecoTaus = cms.EDProducer( "RecoTauProducer",
    piZeroSrc = cms.InputTag( "hltPFTauPiZeros" ),
    jetRegionSrc = cms.InputTag( "hltTauPFJets08Region" ),
    maxJetAbsEta = cms.double( 2.5 ),
    outputSelection = cms.string( "leadPFChargedHadrCand().isNonnull()" ),
    chargedHadronSrc = cms.InputTag( "hltHpsTauPFJetsRecoTauChargedHadronsWithNeutrals" ),
    minJetPt = cms.double( 14.0 ),
    jetSrc = cms.InputTag( "hltAK4PFJetsForTaus" ),
    builders = cms.VPSet( 
      cms.PSet(  decayModes = cms.VPSet( 
  cms.PSet(  maxPiZeros = cms.uint32( 0 ),
    maxTracks = cms.uint32( 6 ),
    nPiZeros = cms.uint32( 0 ),
    nCharged = cms.uint32( 1 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 6 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 1 ),
    nPiZeros = cms.uint32( 1 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 5 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 1 ),
    nPiZeros = cms.uint32( 2 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 0 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 2 ),
    nPiZeros = cms.uint32( 0 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 3 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 2 ),
    nPiZeros = cms.uint32( 1 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 0 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 3 ),
    nPiZeros = cms.uint32( 0 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 3 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 3 ),
    nPiZeros = cms.uint32( 1 )
  )
),
        isolationConeSize = cms.double( 0.5 ),
        minAbsPhotonSumPt_insideSignalCone = cms.double( 2.5 ),
        minAbsPhotonSumPt_outsideSignalCone = cms.double( 1.0E9 ),
        minRelPhotonSumPt_insideSignalCone = cms.double( 0.1 ),
        minRelPhotonSumPt_outsideSignalCone = cms.double( 1.0E9 ),
        name = cms.string( "combinatoric" ),
        pfCandSrc = cms.InputTag( "hltParticleFlowForTaus" ),
        plugin = cms.string( "RecoTauBuilderCombinatoricPlugin" ),
        qualityCuts = cms.PSet( 
          isolationQualityCuts = cms.PSet( 
            maxDeltaZ = cms.double( 0.2 ),
            maxTrackChi2 = cms.double( 100.0 ),
            maxTransverseImpactParameter = cms.double( 0.03 ),
            minGammaEt = cms.double( 1.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            minTrackPt = cms.double( 1.0 ),
            minTrackVertexWeight = cms.double( -1.0 )
          ),
          leadingTrkOrPFCandOption = cms.string( "leadPFCand" ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            maxDeltaZ = cms.double( 0.4 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            minGammaEt = cms.double( 0.5 ),
            minNeutralHadronEt = cms.double( 30.0 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            minTrackPt = cms.double( 0.5 ),
            minTrackVertexWeight = cms.double( -1.0 )
          ),
          vertexTrackFiltering = cms.bool( False ),
          vxAssocQualityCuts = cms.PSet( 
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 0.2 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            minTrackPt = cms.double( 0.5 ),
            minTrackVertexWeight = cms.double( -1.0 )
          )
        ),
        signalConeSize = cms.string( "max(min(0.1, 3.0/pt()), 0.05)" )
      )
    ),
    buildNullTaus = cms.bool( False ),
    verbosity = cms.int32( 0 ),
    modifiers = cms.VPSet( 
      cms.PSet(  DataType = cms.string( "AOD" ),
        EcalStripSumE_deltaEta = cms.double( 0.03 ),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double( 0.5 ),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double( -0.1 ),
        EcalStripSumE_minClusEnergy = cms.double( 0.1 ),
        ElectronPreIDProducer = cms.InputTag( "elecpreid" ),
        maximumForElectrionPreIDOutput = cms.double( -0.1 ),
        name = cms.string( "elec_rej" ),
        plugin = cms.string( "RecoTauElectronRejectionPlugin" ),
        ElecPreIDLeadTkMatch_maxDR = cms.double( 0.01 )
      ),
      cms.PSet(  name = cms.string( "tau_mass" ),
        plugin = cms.string( "PFRecoTauMassPlugin" ),
        verbosity = cms.int32( 0 )
      )
    )
)
process.hltHpsSelectionDiscriminator = cms.EDProducer( "PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag( "hltHpsCombinatoricRecoTaus" ),
    verbosity = cms.int32( 0 ),
    minTauPt = cms.double( 0.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    decayModes = cms.VPSet( 
      cms.PSet(  maxMass = cms.string( "1." ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( -1000.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.2))" ),
        nPiZeros = cms.uint32( 1 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.1349 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  minPi0Mass = cms.double( 0.0 ),
        maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.0))" ),
        maxPi0Mass = cms.double( 0.8 ),
        nPiZeros = cms.uint32( 2 ),
        minMass = cms.double( 0.4 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.0 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.2" ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        nCharged = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( False ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.6, min(1.6*sqrt(pt/100.), 4.0))" ),
        minMass = cms.double( 0.0 ),
        nCharged = cms.uint32( 2 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.6" ),
        minMass = cms.double( 0.7 ),
        nCharged = cms.uint32( 3 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 0 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  nCharged = cms.uint32( 3 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        minMass = cms.double( 0.9 ),
        maxMass = cms.string( "1.6" ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( False ),
          mass = cms.bool( False )
        ),
        nChargedPFCandsMin = cms.uint32( 1 )
      )
    ),
    matchingCone = cms.double( 0.5 ),
    minPixelHits = cms.int32( 0 ),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool( False )
)
process.hltHpsPFTauProducerSansRefs = cms.EDProducer( "RecoTauCleaner",
    outputSelection = cms.string( "" ),
    cleaners = cms.VPSet( 
      cms.PSet(  name = cms.string( "HPS_Select" ),
        plugin = cms.string( "RecoTauDiscriminantCleanerPlugin" ),
        src = cms.InputTag( "hltHpsSelectionDiscriminator" )
      ),
      cms.PSet(  name = cms.string( "killSoftTwoProngTaus" ),
        plugin = cms.string( "RecoTauSoftTwoProngTausCleanerPlugin" ),
        minTrackPt = cms.double( 5.0 )
      ),
      cms.PSet(  name = cms.string( "ChargedHadronMultiplicity" ),
        plugin = cms.string( "RecoTauChargedHadronMultiplicityCleanerPlugin" )
      ),
      cms.PSet(  name = cms.string( "Pt" ),
        plugin = cms.string( "RecoTauStringCleanerPlugin" ),
        selection = cms.string( "leadPFCand().isNonnull()" ),
        selectionFailValue = cms.double( 1000.0 ),
        selectionPassFunction = cms.string( "-pt()" ),
        tolerance = cms.double( 0.01 )
      ),
      cms.PSet(  name = cms.string( "StripMultiplicity" ),
        plugin = cms.string( "RecoTauStringCleanerPlugin" ),
        selection = cms.string( "leadPFCand().isNonnull()" ),
        selectionFailValue = cms.double( 1000.0 ),
        selectionPassFunction = cms.string( "-signalPiZeroCandidates().size()" )
      ),
      cms.PSet(  name = cms.string( "CombinedIsolation" ),
        plugin = cms.string( "RecoTauStringCleanerPlugin" ),
        selection = cms.string( "leadPFCand().isNonnull()" ),
        selectionFailValue = cms.double( 1000.0 ),
        selectionPassFunction = cms.string( "isolationPFChargedHadrCandsPtSum() + isolationPFGammaCandsEtSum()" )
      )
    ),
    verbosity = cms.int32( 0 ),
    src = cms.InputTag( "hltHpsCombinatoricRecoTaus" )
)
process.hltHpsPFTauProducer = cms.EDProducer( "RecoTauPiZeroUnembedder",
    src = cms.InputTag( "hltHpsPFTauProducerSansRefs" )
)
process.hltHpsPFTauDiscriminationByDecayModeFindingNewDMs = cms.EDProducer( "PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducer" ),
    verbosity = cms.int32( 0 ),
    minTauPt = cms.double( 18.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    decayModes = cms.VPSet( 
      cms.PSet(  maxMass = cms.string( "1." ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( -1000.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.2))" ),
        nPiZeros = cms.uint32( 1 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.1349 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  minPi0Mass = cms.double( 0.0 ),
        maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.0))" ),
        maxPi0Mass = cms.double( 0.8 ),
        nPiZeros = cms.uint32( 2 ),
        minMass = cms.double( 0.4 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.0 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.2" ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        nCharged = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( False ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.6, min(1.6*sqrt(pt/100.), 4.0))" ),
        minMass = cms.double( 0.0 ),
        nCharged = cms.uint32( 2 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.6" ),
        minMass = cms.double( 0.7 ),
        nCharged = cms.uint32( 3 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 0 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  nCharged = cms.uint32( 3 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        minMass = cms.double( 0.9 ),
        maxMass = cms.string( "1.6" ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( False ),
          mass = cms.bool( False )
        ),
        nChargedPFCandsMin = cms.uint32( 1 )
      )
    ),
    matchingCone = cms.double( 0.5 ),
    minPixelHits = cms.int32( 0 ),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool( False )
)
process.hltHpsPFTauTrackFindingDiscriminator = cms.EDProducer( "PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double( 0.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    UseOnlyChargedHadrons = cms.bool( True ),
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducer" )
)
process.hltHpsSelectedPFTausTrackFinding = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsPFTauProducer" ),
    cut = cms.string( "pt > 0" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauTrackFindingDiscriminator" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
    )
)
process.hltHpsPFTauTrack = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsPFTauProducer" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltL1sTauVeryBigOR = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_LooseIsoEG22er2p1_IsoTau26er2p1_dR_Min0p3 OR L1_LooseIsoEG24er2p1_IsoTau27er2p1_dR_Min0p3 OR L1_LooseIsoEG22er2p1_Tau70er2p1_dR_Min0p3 OR L1_SingleTau120er2p1 OR L1_SingleTau130er2p1 OR L1_DoubleTau70er2p1 OR L1_DoubleIsoTau28er2p1 OR L1_DoubleIsoTau30er2p1 OR L1_DoubleIsoTau32er2p1 OR L1_DoubleIsoTau34er2p1 OR L1_DoubleIsoTau35er2p1 OR L1_DoubleIsoTau36er2p1 OR L1_Mu18er2p1_Tau24er2p1 OR L1_Mu18er2p1_Tau26er2p1 OR L1_Mu22er2p1_IsoTau30er2p1 OR L1_Mu22er2p1_IsoTau32er2p1 OR L1_Mu22er2p1_IsoTau34er2p1 OR L1_Mu22er2p1_IsoTau40er2p1 OR L1_Mu22er2p1_Tau70er2p1 OR L1_IsoTau52er2p1_QuadJet36er2p5 OR L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltHpsL1JetsHLTForDeepTauInput = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sTauVeryBigOR" ),
    JetSrc = cms.InputTag( "hltHpsPFTauProducer" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( False ),
    KeepOriginalVertex = cms.bool( True )
)
process.hltHpsPFTauDiscriminationByDecayModeFindingNewDMsL1matched = cms.EDProducer( "PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    verbosity = cms.int32( 0 ),
    minTauPt = cms.double( 18.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    decayModes = cms.VPSet( 
      cms.PSet(  maxMass = cms.string( "1." ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( -1000.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.2))" ),
        nPiZeros = cms.uint32( 1 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.1349 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  minPi0Mass = cms.double( 0.0 ),
        maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.0))" ),
        maxPi0Mass = cms.double( 0.8 ),
        nPiZeros = cms.uint32( 2 ),
        minMass = cms.double( 0.4 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.0 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.2" ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        nCharged = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( False ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.6, min(1.6*sqrt(pt/100.), 4.0))" ),
        minMass = cms.double( 0.0 ),
        nCharged = cms.uint32( 2 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.6" ),
        minMass = cms.double( 0.7 ),
        nCharged = cms.uint32( 3 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 0 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  nCharged = cms.uint32( 3 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        minMass = cms.double( 0.9 ),
        maxMass = cms.string( "1.6" ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( False ),
          mass = cms.bool( False )
        ),
        nChargedPFCandsMin = cms.uint32( 1 )
      )
    ),
    matchingCone = cms.double( 0.5 ),
    minPixelHits = cms.int32( 0 ),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool( False )
)
process.hltHpsPFTauPrimaryVertexProducerForDeepTau = cms.EDProducer( "PFTauPrimaryVertexProducer",
    qualityCuts = cms.PSet( 
      signalQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        maxDeltaZ = cms.double( 0.4 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 ),
        minNeutralHadronEt = cms.double( 30.0 )
      ),
      isolationQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 1.0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.03 ),
        maxDeltaZ = cms.double( 0.2 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 8 ),
        minGammaEt = cms.double( 1.5 )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" ),
      vertexTrackFiltering = cms.bool( False ),
      recoverLeadingTrk = cms.bool( False ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" )
    ),
    cut = cms.string( "pt > 18.0 & abs(eta)<2.4" ),
    Algorithm = cms.int32( 0 ),
    RemoveElectronTracks = cms.bool( False ),
    RemoveMuonTracks = cms.bool( False ),
    useBeamSpot = cms.bool( True ),
    useSelectedTaus = cms.bool( False ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    ElectronTag = cms.InputTag( "hltEgammaCandidates" ),
    PFTauTag = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    MuonTag = cms.InputTag( "hltMuons" ),
    PVTag = cms.InputTag( "hltPixelVertices" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauDiscriminationByDecayModeFindingNewDMsL1matched" ),
        selectionCut = cms.double( 0.5 )
      )
    )
)
process.hltHpsPFTauSecondaryVertexProducerForDeepTau = cms.EDProducer( "PFTauSecondaryVertexProducer",
    PFTauTag = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" )
)
process.hltHpsPFTauTransverseImpactParametersForDeepTau = cms.EDProducer( "PFTauTransverseImpactParameters",
    PFTauPVATag = cms.InputTag( "hltHpsPFTauPrimaryVertexProducerForDeepTau" ),
    useFullCalculation = cms.bool( True ),
    PFTauTag = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    PFTauSVATag = cms.InputTag( "hltHpsPFTauSecondaryVertexProducerForDeepTau" )
)
process.hltFixedGridRhoProducerFastjetAllTau = cms.EDProducer( "FixedGridRhoProducerFastjet",
    pfCandidatesTag = cms.InputTag( "hltParticleFlowForTaus" ),
    maxRapidity = cms.double( 5.0 ),
    gridSpacing = cms.double( 0.55 )
)
process.hltHpsPFTauBasicDiscriminatorsForDeepTau = cms.EDProducer( "PFRecoTauDiscriminationByIsolationContainer",
    PFTauProducer = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    qualityCuts = cms.PSet( 
      signalQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        maxDeltaZ = cms.double( 0.4 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 ),
        minNeutralHadronEt = cms.double( 30.0 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      isolationQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 1.0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.03 ),
        maxDeltaZ = cms.double( 0.2 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 8 ),
        minGammaEt = cms.double( 1.5 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" ),
      vertexTrackFiltering = cms.bool( False ),
      recoverLeadingTrk = cms.bool( False ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" )
    ),
    minTauPtForNoIso = cms.double( -99.0 ),
    vertexSrc = cms.InputTag( "hltPixelVertices" ),
    rhoConeSize = cms.double( 0.5 ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoProducerFastjetAllTau" ),
    footprintCorrections = cms.VPSet( 
      cms.PSet(  selection = cms.string( "decayMode() = 0" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 1 || decayMode() = 2" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 5" ),
        offset = cms.string( "2.7" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 6" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 10" ),
        offset = cms.string( "max(2.0, 0.22*pt() - 2.0)" )
      )
    ),
    deltaBetaFactor = cms.string( "0.2000" ),
    applyFootprintCorrection = cms.bool( False ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    verbosity = cms.int32( 0 ),
    deltaBetaPUTrackPtCutOverride = cms.bool( True ),
    applyRhoCorrection = cms.bool( False ),
    WeightECALIsolation = cms.double( 1.0 ),
    rhoUEOffsetCorrection = cms.double( 1.0 ),
    deltaBetaPUTrackPtCutOverride_val = cms.double( 0.5 ),
    isoConeSizeForDeltaBeta = cms.double( 0.8 ),
    customOuterCone = cms.double( 0.5 ),
    particleFlowSrc = cms.InputTag( "hltParticleFlowForTaus" ),
    IDdefinitions = cms.VPSet( 
      cms.PSet(  IDname = cms.string( "ChargedIsoPtSum" ),
        ApplyDiscriminationByTrackerIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "NeutralIsoPtSum" ),
        ApplyDiscriminationByECALIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "NeutralIsoPtSumWeight" ),
        ApplyDiscriminationByWeightedECALIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True ),
        UseAllPFCandsForWeights = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "TauFootprintCorrection" ),
        storeRawFootprintCorrection = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "PhotonPtSumOutsideSignalCone" ),
        storeRawPhotonSumPt_outsideSignalCone = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "PUcorrPtSum" ),
        applyDeltaBetaCorrection = cms.bool( True ),
        storeRawPUsumPt = cms.bool( True )
      )
    ),
    IDWPdefinitions = cms.VPSet( 
    )
)
process.hltHpsPFTauBasicDiscriminatorsdR03ForDeepTau = cms.EDProducer( "PFRecoTauDiscriminationByIsolationContainer",
    PFTauProducer = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    qualityCuts = cms.PSet( 
      signalQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        maxDeltaZ = cms.double( 0.4 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 ),
        minNeutralHadronEt = cms.double( 30.0 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      isolationQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 1.0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.03 ),
        maxDeltaZ = cms.double( 0.2 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 8 ),
        minGammaEt = cms.double( 1.5 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" ),
      vertexTrackFiltering = cms.bool( False ),
      recoverLeadingTrk = cms.bool( False ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" )
    ),
    minTauPtForNoIso = cms.double( -99.0 ),
    vertexSrc = cms.InputTag( "hltPixelVertices" ),
    rhoConeSize = cms.double( 0.5 ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoProducerFastjetAllTau" ),
    footprintCorrections = cms.VPSet( 
      cms.PSet(  selection = cms.string( "decayMode() = 0" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 1 || decayMode() = 2" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 5" ),
        offset = cms.string( "2.7" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 6" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 10" ),
        offset = cms.string( "max(2.0, 0.22*pt() - 2.0)" )
      )
    ),
    deltaBetaFactor = cms.string( "0.2000" ),
    applyFootprintCorrection = cms.bool( False ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    verbosity = cms.int32( 0 ),
    deltaBetaPUTrackPtCutOverride = cms.bool( True ),
    applyRhoCorrection = cms.bool( False ),
    WeightECALIsolation = cms.double( 1.0 ),
    rhoUEOffsetCorrection = cms.double( 1.0 ),
    deltaBetaPUTrackPtCutOverride_val = cms.double( 0.5 ),
    isoConeSizeForDeltaBeta = cms.double( 0.8 ),
    customOuterCone = cms.double( 0.3 ),
    particleFlowSrc = cms.InputTag( "hltParticleFlowForTaus" ),
    IDdefinitions = cms.VPSet( 
      cms.PSet(  IDname = cms.string( "ChargedIsoPtSum" ),
        ApplyDiscriminationByTrackerIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "NeutralIsoPtSum" ),
        ApplyDiscriminationByECALIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "NeutralIsoPtSumWeight" ),
        ApplyDiscriminationByWeightedECALIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True ),
        UseAllPFCandsForWeights = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "TauFootprintCorrection" ),
        storeRawFootprintCorrection = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "PhotonPtSumOutsideSignalCone" ),
        storeRawPhotonSumPt_outsideSignalCone = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "PUcorrPtSum" ),
        applyDeltaBetaCorrection = cms.bool( True ),
        storeRawPUsumPt = cms.bool( True )
      )
    ),
    IDWPdefinitions = cms.VPSet( 
    )
)
process.hltHpsPFTauDeepTauProducer = cms.EDProducer( "DeepTauId",
    electrons = cms.InputTag( "default" ),
    muons = cms.InputTag( "default" ),
    taus = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    pfcands = cms.InputTag( "hltParticleFlowForTaus" ),
    vertices = cms.InputTag( "hltPixelVertices" ),
    rho = cms.InputTag( "hltFixedGridRhoProducerFastjetAllTau" ),
    mem_mapped = cms.bool( False ),
    year = cms.uint32( 2017 ),
    version = cms.uint32( 2 ),
    sub_version = cms.uint32( 1 ),
    debug_level = cms.int32( 0 ),
    disable_dxy_pca = cms.bool( True ),
    disable_hcalFraction_workaround = cms.bool( False ),
    disable_CellIndex_workaround = cms.bool( False ),
    save_inputs = cms.bool( False ),
    is_online = cms.bool( True ),
    VSeWP = cms.vstring( '-1.' ),
    VSmuWP = cms.vstring( '-1.' ),
    VSjetWP = cms.vstring( 'double t1 = 0.649, t2 = 0.441, t3 = 0.05, x1 = 35, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;',
      'double t1 = 0.7045, t2 = 0.7029, t3 = 0.05, x1 = 30, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;',
      'double t1 = 0.5419, t2 = 0.4837, t3 = 0.050, x1 = 27, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;',
      'double t1 = 0.6072, t2 = 0.125, x1 = 180, x2 = 500; if (pt <= x1) return t1; if (pt >= x2) return t2; return (t2 - t1) / (x2 - x1) * (pt - x1) + t1;' ),
    basicTauDiscriminators = cms.untracked.InputTag( "hltHpsPFTauBasicDiscriminatorsForDeepTau" ),
    basicTauDiscriminatorsdR03 = cms.untracked.InputTag( "hltHpsPFTauBasicDiscriminatorsdR03ForDeepTau" ),
    pfTauTransverseImpactParameters = cms.InputTag( "hltHpsPFTauTransverseImpactParametersForDeepTau" ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    graph_file = cms.vstring( 'core:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_core.pb',
      'inner:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_inner.pb',
      'outer:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_outer.pb' )
)
process.hltHpsPFTauAgainstMuonDiscriminatorBigL1matched = cms.EDProducer( "PFRecoTauDiscriminationAgainstMuon2",
    maskHitsRPC = cms.vint32( 0, 0, 0, 0 ),
    maxNumberOfHitsLast2Stations = cms.int32( -1 ),
    maskMatchesRPC = cms.vint32( 0, 0, 0, 0 ),
    maskMatchesCSC = cms.vint32( 1, 0, 0, 0 ),
    maskHitsCSC = cms.vint32( 0, 0, 0, 0 ),
    PFTauProducer = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    verbosity = cms.int32( 0 ),
    maskMatchesDT = cms.vint32( 0, 0, 0, 0 ),
    minPtMatchedMuon = cms.double( 5.0 ),
    dRmuonMatchLimitedToJetArea = cms.bool( False ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    maskHitsDT = cms.vint32( 0, 0, 0, 0 ),
    HoPMin = cms.double( -1.0 ),
    maxNumberOfMatches = cms.int32( 1 ),
    discriminatorOption = cms.string( "custom" ),
    dRmuonMatch = cms.double( 0.3 ),
    srcMuons = cms.InputTag( "" ),
    doCaloMuonVeto = cms.bool( False )
)
process.hltHpsSelectedPFTausLooseMuTauWPDeepTauVsJetsAgainstMuon = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    cut = cms.string( "pt > 27 && abs(eta) < 2.5" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauAgainstMuonDiscriminatorBigL1matched" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauDeepTauProducer", "VSjet" ),
        rawValues = cms.vstring(  ),
        selectionCuts = cms.vdouble(  ),
        workingPoints = cms.vstring( 'double t1 = 0.5419, t2 = 0.4837, t3 = 0.050, x1 = 27, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;' )
      )
    )
)
process.hltHpsL1JetsHLTPFTauLooseMutauWPDeepTauVsJetsAgainstMuonMatch = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    JetSrc = cms.InputTag( "hltHpsSelectedPFTausLooseMuTauWPDeepTauVsJetsAgainstMuon" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( True ),
    KeepOriginalVertex = cms.bool( False )
)
process.hltHpsSelectedPFTau27LooseMuTauWPDeepTauVsJetsAgainstMuonL1HLTMatched = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsL1JetsHLTPFTauLooseMutauWPDeepTauVsJetsAgainstMuonMatch" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 27.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu20LooseMuTauWPDeepTauPFTau27L1Seeded = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausLooseMuTauWPDeepTauVsJetsAgainstMuon' ),
    inputTag1 = cms.InputTag( "hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSelectedPFTau27LooseMuTauWPDeepTauVsJetsAgainstMuonL1HLTMatched" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltL1sMu22erIsoTau40er = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_Mu22er2p1_IsoTau40er2p1" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreIsoMu24eta2p1LooseDeepTauPFTauHPS180eta2p1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sMu22erIsoTau40erL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sMu22erIsoTau40er" ),
    MaxEta = cms.double( 2.1 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMu22erIsoTau40erL1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22erIsoTau40erL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.16 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sMu22erIsoTau40erL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sMu22erIsoTau40erL1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sMu22erIsoTau40erL1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sMu22erIsoTau40erL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.1 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3fL1sMu22IsoTau40erL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sMu22IsoTau40erL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltL1sDoubleTauBigOR = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleIsoTau32er2p1 OR L1_DoubleIsoTau34er2p1 OR L1_DoubleIsoTau35er2p1 OR L1_DoubleIsoTau36er2p1 OR L1_DoubleTau70er2p1" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltL1sSingleTau = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleTau120er2p1 OR L1_SingleTau130er2p1" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltL1sBigOrMuXXerIsoTauYYer = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_Mu22er2p1_IsoTau32er2p1 OR L1_Mu22er2p1_IsoTau34er2p1 OR L1_Mu22er2p1_Tau70er2p1" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltL1sBigORDoubleTauJet = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleIsoTau26er2p1_Jet55_RmOvlp_dR0p5 OR L1_DoubleIsoTau26er2p1_Jet70_RmOvlp_dR0p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltL1VBFDiJetIsoTau = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleJet45_Mass_Min550_IsoTau45er2p1_RmOvlp_dR0p5 OR L1_DoubleJet45_Mass_Min600_IsoTau45er2p1_RmOvlp_dR0p5" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltL1sVeryBigORMu18erTauXXer2p1 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_Mu18er2p1_Tau24er2p1 OR L1_Mu18er2p1_Tau26er2p1 OR L1_Mu18er2p1_Tau26er2p1_Jet55 OR L1_Mu18er2p1_Tau26er2p1_Jet70" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltL1sDoubleTauBigORWithLowMass = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_DoubleIsoTau32er2p1 OR L1_DoubleIsoTau34er2p1 OR L1_DoubleIsoTau35er2p1 OR L1_DoubleIsoTau36er2p1 OR L1_DoubleTau70er2p1 OR L1_DoubleIsoTau32er2p1_Mass_Max80" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltL2TauTagNNProducer = cms.EDProducer( "L2TauNNProducerAlpaka",
    debugLevel = cms.int32( 0 ),
    L1Taus = cms.VPSet( 
      cms.PSet(  L1TauTrigger = cms.InputTag( "hltL1sDoubleTauBigOR" ),
        L1CollectionName = cms.string( "DoubleTau" )
      ),
      cms.PSet(  L1TauTrigger = cms.InputTag( "hltL1sSingleTau" ),
        L1CollectionName = cms.string( "SingleTau" )
      ),
      cms.PSet(  L1TauTrigger = cms.InputTag( "hltL1sBigOrMuXXerIsoTauYYer" ),
        L1CollectionName = cms.string( "MuXXTauYY" )
      ),
      cms.PSet(  L1TauTrigger = cms.InputTag( "hltL1sMu22erIsoTau40er" ),
        L1CollectionName = cms.string( "Mu22Tau40" )
      ),
      cms.PSet(  L1TauTrigger = cms.InputTag( "hltL1sBigORDoubleTauJet" ),
        L1CollectionName = cms.string( "DoubleTauJet" )
      ),
      cms.PSet(  L1TauTrigger = cms.InputTag( "hltL1VBFDiJetIsoTau" ),
        L1CollectionName = cms.string( "VBFIsoTau" )
      ),
      cms.PSet(  L1TauTrigger = cms.InputTag( "hltL1sVeryBigORMu18erTauXXer2p1" ),
        L1CollectionName = cms.string( "Mu18TauXX" )
      ),
      cms.PSet(  L1TauTrigger = cms.InputTag( "hltL1sDoubleTauBigORWithLowMass" ),
        L1CollectionName = cms.string( "DoubleTauLowMass" )
      )
    ),
    hbheInput = cms.InputTag( "hltHbhereco" ),
    hoInput = cms.InputTag( "hltHoreco" ),
    ebInput = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
    eeInput = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
    pataVertices = cms.InputTag( "hltPixelVerticesSoA" ),
    pataTracks = cms.InputTag( "hltPixelTracksSoA" ),
    BeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    maxVtx = cms.uint32( 100 ),
    fractionSumPt2 = cms.double( 0.3 ),
    minSumPt2 = cms.double( 0.0 ),
    track_pt_min = cms.double( 1.0 ),
    track_pt_max = cms.double( 10.0 ),
    track_chi2_max = cms.double( 99999.0 ),
    graphPath = cms.string( "RecoTauTag/TrainingFiles/data/L2TauNNTag/L2TauTag_Run3v1.pb" ),
    normalizationDict = cms.string( "RecoTauTag/TrainingFiles/data/L2TauNNTag/NormalizationDict.json" )
)
process.hltL2Mu22Tau40TagNNFilterSingleTauWP = cms.EDFilter( "L2TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    L1TauSrc = cms.InputTag( "hltL1sMu22erIsoTau40er" ),
    L2Outcomes = cms.InputTag( 'hltL2TauTagNNProducer','Mu22Tau40' ),
    DiscrWP = cms.double( 0.8517 ),
    l1TauPtThreshold = cms.double( 250.0 )
)
process.hltHpsSelectedPFTausLooseSingleTauWPDeepTau = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    cut = cms.string( "pt > 180 && abs(eta) < 2.1" ),
    discriminators = cms.VPSet( 
    ),
    discriminatorContainers = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauDeepTauProducer", "VSjet" ),
        rawValues = cms.vstring(  ),
        selectionCuts = cms.vdouble(  ),
        workingPoints = cms.vstring( 'double t1 = 0.6072, t2 = 0.125, x1 = 180, x2 = 500; if (pt <= x1) return t1; if (pt >= x2) return t2; return (t2 - t1) / (x2 - x1) * (pt - x1) + t1;' )
      )
    )
)
process.hltL1JetsHLTPFTau180LooseSingleTauWPDeepTauMatchMu22IsoTau40 = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sMu22erIsoTau40er" ),
    JetSrc = cms.InputTag( "hltHpsSelectedPFTausLooseSingleTauWPDeepTau" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( True ),
    KeepOriginalVertex = cms.bool( False )
)
process.hltSelectedPFTau180LooseSingleTauWPDeepTauMatchedMu22IsoTau40 = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL1JetsHLTPFTau180LooseSingleTauWPDeepTauMatchMu22IsoTau40" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 180.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu24LooseSingleTauWPDeepTauPFTau180L1Seeded = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausLooseSingleTauWPDeepTau' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSelectedPFTau180LooseSingleTauWPDeepTauMatchedMu22IsoTau40" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1LooseDeepTauPFTauHPS30eta2p1CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltIsoMu24FilterEle24Tau30Monitoring = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.1 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltHpsSelectedPFTausLooseETauWPDeepTauFilter = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    cut = cms.string( "pt > 30 && abs(eta) < 2.5" ),
    discriminators = cms.VPSet( 
    ),
    discriminatorContainers = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( 'hltHpsPFTauDeepTauProducer','VSjet' ),
        rawValues = cms.vstring(  ),
        selectionCuts = cms.vdouble(  ),
        workingPoints = cms.vstring( 'double t1 = 0.7045, t2 = 0.7029, t3 = 0.05, x1 = 30, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;' )
      )
    )
)
process.hltHpsL1JetsHLTPFTauLooseEtauWPDeepTauMatchMonitoring = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    JetSrc = cms.InputTag( "hltHpsSelectedPFTausLooseETauWPDeepTauFilter" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( True ),
    KeepOriginalVertex = cms.bool( False )
)
process.hltHpsSelectedPFTau30LooseETauWPDeepTauL1HLTMatchedMonitoring = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsL1JetsHLTPFTauLooseEtauWPDeepTauMatchMonitoring" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu24LooseETauWPDeepTauPFTau30L1Seeded = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausLooseETauWPDeepTauFilter' ),
    inputTag1 = cms.InputTag( "hltIsoMu24FilterEle24Tau30Monitoring" ),
    inputTag2 = cms.InputTag( "hltHpsSelectedPFTau30LooseETauWPDeepTauL1HLTMatchedMonitoring" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS35L2NNeta2p1CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sBigOrMuXXerIsoTauYYerL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sBigOrMuXXerIsoTauYYer" ),
    MaxEta = cms.double( 2.1 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sBigOrMuXXerIsoTauYYerL1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sBigOrMuXXerIsoTauYYerL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.16 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sBigOrMuXXerIsoTauYYerL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sBigOrMuXXerIsoTauYYerL1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sBigOrMuXXerIsoTauYYerL1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sBigOrMuXXerIsoTauYYerL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.1 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3fL1sBigOrMuXXIsoTauYYerL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sBigOrMuXXIsoTauYYerL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltL2TauTagNNFilterMuXXerIsoTauYY = cms.EDFilter( "L2TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    L1TauSrc = cms.InputTag( "hltL1sBigOrMuXXerIsoTauYYer" ),
    L2Outcomes = cms.InputTag( 'hltL2TauTagNNProducer','MuXXTauYY' ),
    DiscrWP = cms.double( 0.386 ),
    l1TauPtThreshold = cms.double( 250.0 )
)
process.hltHpsSinglePFTau35 = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsPFTauProducer" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 35.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsPFTauTrackPt1Discriminator = cms.EDProducer( "PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double( 1.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    UseOnlyChargedHadrons = cms.bool( True ),
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducer" )
)
process.hltHpsSelectedPFTausTrackPt1 = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsPFTauProducer" ),
    cut = cms.string( "pt > 0" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauTrackPt1Discriminator" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
    )
)
process.hltHpsSinglePFTau35TrackPt1 = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsSelectedPFTausTrackPt1" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 35.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsSelectedPFTausMediumDitauWPDeepTau = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    cut = cms.string( "pt > 35 && abs(eta) < 2.1" ),
    discriminators = cms.VPSet( 
    ),
    discriminatorContainers = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauDeepTauProducer", "VSjet" ),
        rawValues = cms.vstring(  ),
        selectionCuts = cms.vdouble(  ),
        workingPoints = cms.vstring( 'double t1 = 0.649, t2 = 0.441, t3 = 0.05, x1 = 35, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;' )
      )
    )
)
process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauBigOrMuXXerIsoTauYYerMatch = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sBigOrMuXXerIsoTauYYer" ),
    JetSrc = cms.InputTag( "hltHpsSelectedPFTausMediumDitauWPDeepTau" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( True ),
    KeepOriginalVertex = cms.bool( False )
)
process.hltHpsSelectedPFTau35MediumDitauWPDeepTauL1HLTBigOrMuXXerIsoTauYYerMatched = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauBigOrMuXXerIsoTauYYerMatch" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 35.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau35Monitoring = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausMediumDitauWPDeepTau' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSelectedPFTau35MediumDitauWPDeepTauL1HLTBigOrMuXXerIsoTauYYerMatched" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu50AK8PFJet220SoftDropMass40 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f50QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltAK8SingleCaloJet200 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK8CaloJetsCorrectedIDPassed" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 200.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltAK8PFJetsCorrectedMatchedToCaloJets200 = cms.EDProducer( "HLTPFJetsMatchedToFilteredCaloJetsProducer",
    src = cms.InputTag( "hltAK8PFJetsCorrected" ),
    triggerJetsFilter = cms.InputTag( "hltAK8SingleCaloJet200" ),
    triggerJetsType = cms.int32( 85 ),
    maxDeltaR = cms.double( 0.5 )
)
process.hltSingleAK8PFJet220 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK8PFJetsCorrectedMatchedToCaloJets200" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 220.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltAK8PFJets220Constituents = cms.EDProducer( "PFJetConstituentSelector",
    src = cms.InputTag( "hltAK8PFJetsCorrected" ),
    cut = cms.string( "pt > 220 && abs(eta) < 2.5" )
)
process.hltAK8PFSoftDropJets220 = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( True ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( 0.1 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( 0.0 ),
    R0 = cms.double( 0.8 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 0 ),
    src = cms.InputTag( 'hltAK8PFJets220Constituents','constituents' ),
    srcPVs = cms.InputTag( "hltPixelVertices" ),
    jetType = cms.string( "PFJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.8 ),
    inputEtMin = cms.double( 0.0 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 0.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.8 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( True ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK8SinglePFJets220SoftDropMass40 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK8PFSoftDropJets220" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( -1.0 ),
    MinMass = cms.double( 40.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu50AK8PFJet220SoftDropMass40PNetBB0p06 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltAK8PFJets220SoftDropMass40 = cms.EDProducer( "HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag( "hltAK8SinglePFJets220SoftDropMass40" ),
    TriggerTypes = cms.vint32( 85 )
)
process.hltPFJetForPNetSelectorAK8 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK8PFJetsCorrected" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 200.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.6 ),
    MinN = cms.int32( 1 )
)
process.hltPFJetForPNetAK8 = cms.EDProducer( "HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag( "hltPFJetForPNetSelectorAK8" ),
    TriggerTypes = cms.vint32( 85 )
)
process.hltParticleNetJetTagsInfosAK8 = cms.EDProducer( "DeepBoostedJetTagInfoProducer",
    jet_radius = cms.double( 0.8 ),
    min_jet_pt = cms.double( 200.0 ),
    max_jet_eta = cms.double( 2.5 ),
    min_pt_for_track_properties = cms.double( 0.95 ),
    min_pt_for_pfcandidates = cms.double( 0.1 ),
    use_puppiP4 = cms.bool( False ),
    include_neutrals = cms.bool( True ),
    sort_by_sip2dsig = cms.bool( False ),
    min_puppi_wgt = cms.double( -1.0 ),
    flip_ip_sign = cms.bool( False ),
    sip3dSigMax = cms.double( -1.0 ),
    use_hlt_features = cms.bool( True ),
    vertices = cms.InputTag( "hltVerticesPFFilter" ),
    secondary_vertices = cms.InputTag( "hltDeepInclusiveMergedVerticesPF" ),
    pf_candidates = cms.InputTag( "hltParticleFlow" ),
    jets = cms.InputTag( "hltPFJetForPNetAK8" ),
    unsubjet_map = cms.InputTag( "" ),
    puppi_value_map = cms.InputTag( "" ),
    vertex_associator = cms.InputTag( 'hltPrimaryVertexAssociation','original' ),
    use_scouting_features = cms.bool( False ),
    normchi2_value_map = cms.InputTag( "" ),
    dz_value_map = cms.InputTag( "" ),
    dxy_value_map = cms.InputTag( "" ),
    dzsig_value_map = cms.InputTag( "" ),
    dxysig_value_map = cms.InputTag( "" ),
    lostInnerHits_value_map = cms.InputTag( "" ),
    quality_value_map = cms.InputTag( "" ),
    trkPt_value_map = cms.InputTag( "" ),
    trkEta_value_map = cms.InputTag( "" ),
    trkPhi_value_map = cms.InputTag( "" ),
    covarianceVersion = cms.int32( 1 ),
    covariancePackingSchemas = cms.vint32( 8, 264, 520, 776, 0 )
)
process.hltParticleNetONNXJetTagsAK8 = cms.EDProducer( "BoostedJetONNXJetTagsProducer",
    src = cms.InputTag( "hltParticleNetJetTagsInfosAK8" ),
    preprocess_json = cms.string( "RecoBTag/Combined/data/HLT/ParticleNetAK8/V01/preprocess.json" ),
    preprocessParams = cms.PSet(  ),
    model_path = cms.FileInPath( "RecoBTag/Combined/data/HLT/ParticleNetAK8/V01/particle-net.onnx" ),
    flav_names = cms.vstring( 'probHtt',
      'probHtm',
      'probHte',
      'probHbb',
      'probHcc',
      'probHqq',
      'probHgg',
      'probQCD2hf',
      'probQCD1hf',
      'probQCD0hf' ),
    jets = cms.InputTag( "" ),
    produceValueMap = cms.untracked.bool( False ),
    debugMode = cms.untracked.bool( False )
)
process.hltParticleNetDiscriminatorsJetTagsAK8 = cms.EDProducer( "BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet( 
      cms.PSet(  name = cms.string( "HbbVsQCD" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsAK8:probHbb' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsAK8:probHbb','hltParticleNetONNXJetTagsAK8:probQCD2hf','hltParticleNetONNXJetTagsAK8:probQCD1hf','hltParticleNetONNXJetTagsAK8:probQCD0hf' )
      ),
      cms.PSet(  name = cms.string( "HccVsQCD" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsAK8:probHcc' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsAK8:probHcc','hltParticleNetONNXJetTagsAK8:probQCD2hf','hltParticleNetONNXJetTagsAK8:probQCD1hf','hltParticleNetONNXJetTagsAK8:probQCD0hf' )
      ),
      cms.PSet(  name = cms.string( "HttVsQCD" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsAK8:probHtt' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsAK8:probHtt','hltParticleNetONNXJetTagsAK8:probQCD2hf','hltParticleNetONNXJetTagsAK8:probQCD1hf','hltParticleNetONNXJetTagsAK8:probQCD0hf' )
      )
    )
)
process.hltAK8SinglePFJets220SoftDropMass40PNetBBTag0p06 = cms.EDFilter( "HLTPFJetTag",
    saveTags = cms.bool( True ),
    Jets = cms.InputTag( "hltAK8PFJets220SoftDropMass40" ),
    JetTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTagsAK8','HbbVsQCD' ),
    MinTag = cms.double( 0.06 ),
    MaxTag = cms.double( 999999.0 ),
    MinJets = cms.int32( 1 ),
    MatchJetsByDeltaR = cms.bool( True ),
    MaxJetDeltaR = cms.double( 0.8 ),
    TriggerType = cms.int32( 85 )
)
process.hltPreIsoMu50AK8PFJet230SoftDropMass40 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSingleAK8PFJet230 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK8PFJetsCorrectedMatchedToCaloJets200" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 230.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltAK8PFJets230Constituents = cms.EDProducer( "PFJetConstituentSelector",
    src = cms.InputTag( "hltAK8PFJetsCorrected" ),
    cut = cms.string( "pt > 230 && abs(eta) < 2.5" )
)
process.hltAK8PFSoftDropJets230 = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( True ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( 0.1 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( 0.0 ),
    R0 = cms.double( 0.8 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 0 ),
    src = cms.InputTag( 'hltAK8PFJets230Constituents','constituents' ),
    srcPVs = cms.InputTag( "hltPixelVertices" ),
    jetType = cms.string( "PFJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.8 ),
    inputEtMin = cms.double( 0.0 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 0.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.8 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( True ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltAK8SinglePFJets230SoftDropMass40 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK8PFSoftDropJets230" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( -1.0 ),
    MinMass = cms.double( 40.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu50AK8PFJet230SoftDropMass40PNetBB0p06 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltAK8PFJets230SoftDropMass40 = cms.EDProducer( "HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag( "hltAK8SinglePFJets230SoftDropMass40" ),
    TriggerTypes = cms.vint32( 85 )
)
process.hltAK8SinglePFJets230SoftDropMass40PNetBBTag0p06 = cms.EDFilter( "HLTPFJetTag",
    saveTags = cms.bool( True ),
    Jets = cms.InputTag( "hltAK8PFJets230SoftDropMass40" ),
    JetTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTagsAK8','HbbVsQCD' ),
    MinTag = cms.double( 0.06 ),
    MaxTag = cms.double( 999999.0 ),
    MinJets = cms.int32( 1 ),
    MatchJetsByDeltaR = cms.bool( True ),
    MaxJetDeltaR = cms.double( 0.8 ),
    TriggerType = cms.int32( 85 )
)
process.hltPreIsoMu50AK8PFJet230SoftDropMass40PNetBB0p10 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltAK8SinglePFJets230SoftDropMass40PNetBBTag0p10 = cms.EDFilter( "HLTPFJetTag",
    saveTags = cms.bool( True ),
    Jets = cms.InputTag( "hltAK8PFJets230SoftDropMass40" ),
    JetTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTagsAK8','HbbVsQCD' ),
    MinTag = cms.double( 0.1 ),
    MaxTag = cms.double( 999999.0 ),
    MinJets = cms.int32( 1 ),
    MatchJetsByDeltaR = cms.bool( True ),
    MaxJetDeltaR = cms.double( 0.8 ),
    TriggerType = cms.int32( 85 )
)
process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS30L2NNeta2p1CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sVeryBigORMu18erTauXXer2p1" ),
    MaxEta = cms.double( 2.1 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 0 ),
    MaxEta = cms.double( 2.16 ),
    AbsEtaBins = cms.vdouble( 0.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltL1MuonsPt0" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.1 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q" ),
    varTag = cms.InputTag( "hltMuonEcalMFPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.14 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3fL1sVeryBigOrMu18IsoTauXXerL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered = cms.EDFilter( "HLTMuonGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered" ),
    varTag = cms.InputTag( "hltMuonHcalRegPFClusterIsoForMuons" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( True ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.177 ),
    thrOverEEE = cms.vdouble( 0.24 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltIterL3MuonCandidates" )
)
process.hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered = cms.EDFilter( "HLTMuonIsoFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL3fL1sVeryBigOrMu18IsoTauXXerL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered" ),
    MinN = cms.int32( 1 ),
    DepTag = cms.VInputTag( 'hltMuonTkRelIsolationCut0p08Map' ),
    IsolatorPSet = cms.PSet(  )
)
process.hltL2TauTagNNFilterMu18erTauXX = cms.EDFilter( "L2TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    L1TauSrc = cms.InputTag( "hltL1sVeryBigORMu18erTauXXer2p1" ),
    L2Outcomes = cms.InputTag( 'hltL2TauTagNNProducer','Mu18TauXX' ),
    DiscrWP = cms.double( 0.339 ),
    l1TauPtThreshold = cms.double( 250.0 )
)
process.hltHpsSelectedPFTausMediumDitauWPDeepTauDoubleTauJet = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    cut = cms.string( "pt > 30 && abs(eta) < 2.1" ),
    discriminators = cms.VPSet( 
    ),
    discriminatorContainers = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauDeepTauProducer", "VSjet" ),
        rawValues = cms.vstring(  ),
        selectionCuts = cms.vdouble(  ),
        workingPoints = cms.vstring( 'double t1 = 0.649, t2 = 0.441, t3 = 0.05, x1 = 35, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;' )
      )
    )
)
process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauVeryBigOrMu18erTauXXerMatch = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sVeryBigORMu18erTauXXer2p1" ),
    JetSrc = cms.InputTag( "hltHpsSelectedPFTausMediumDitauWPDeepTauDoubleTauJet" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( True ),
    KeepOriginalVertex = cms.bool( False )
)
process.hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatched = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauVeryBigOrMu18erTauXXerMatch" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau30Monitoring = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausMediumDitauWPDeepTauDoubleTauJet' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatched" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltL1sMu18erTau26er2p1Jet55 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_Mu18er2p1_Tau26er2p1_Jet55" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS30L2NNeta2p1PFJet60CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFJetsCorrectedMatchedToL1 = cms.EDProducer( "HLTPFJetL1TMatchProducer",
    jetsInput = cms.InputTag( "hltAK4PFJetsCorrected" ),
    L1Jets = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    DeltaR = cms.double( 0.5 )
)
process.hlt1PFJet60L1HLTMatched = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFJetsCorrectedMatchedToL1" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 60.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterDeepTauPFTau30VeryBigOrMu18erTauXXPFJet60 = cms.EDFilter( "HLT3MuonPFTauPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausMediumDitauWPDeepTauDoubleTauJet' ),
    originTag3 = cms.VInputTag( 'hltPFJetsCorrectedMatchedToL1' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatched" ),
    inputTag3 = cms.InputTag( "hlt1PFJet60L1HLTMatched" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    triggerType3 = cms.int32( 85 ),
    MinDphi = cms.double( 1.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinMinv = cms.double( 1.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinDelR = cms.double( 0.5 ),
    MaxDelR = cms.double( 9999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltL1sMu18erTau26er2p1Jet70 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_Mu18er2p1_Tau26er2p1_Jet70" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS30L2NNeta2p1PFJet75CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hlt1PFJet75L1HLTMatched = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFJetsCorrectedMatchedToL1" ),
    triggerType = cms.int32( 85 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 75.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterDeepTauPFTau30VeryBigOrMu18erTauXXPFJet75 = cms.EDFilter( "HLT3MuonPFTauPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausMediumDitauWPDeepTauDoubleTauJet' ),
    originTag3 = cms.VInputTag( 'hltPFJetsCorrectedMatchedToL1' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatched" ),
    inputTag3 = cms.InputTag( "hlt1PFJet75L1HLTMatched" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    triggerType3 = cms.int32( 85 ),
    MinDphi = cms.double( 1.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinMinv = cms.double( 1.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinDelR = cms.double( 0.5 ),
    MaxDelR = cms.double( 9999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS20eta2p1SingleL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltHpsPFTauDiscriminationByDecayModeFindingNewDMsForVBFIsoTau = cms.EDProducer( "PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducer" ),
    verbosity = cms.int32( 0 ),
    minTauPt = cms.double( 18.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    decayModes = cms.VPSet( 
      cms.PSet(  maxMass = cms.string( "1." ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( -1000.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.2))" ),
        nPiZeros = cms.uint32( 1 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.1349 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  minPi0Mass = cms.double( 0.0 ),
        maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.0))" ),
        maxPi0Mass = cms.double( 0.8 ),
        nPiZeros = cms.uint32( 2 ),
        minMass = cms.double( 0.4 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.0 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.2" ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        nCharged = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( False ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.6, min(1.6*sqrt(pt/100.), 4.0))" ),
        minMass = cms.double( 0.0 ),
        nCharged = cms.uint32( 2 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.6" ),
        minMass = cms.double( 0.7 ),
        nCharged = cms.uint32( 3 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 0 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  nCharged = cms.uint32( 3 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        minMass = cms.double( 0.9 ),
        maxMass = cms.string( "1.6" ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( False ),
          mass = cms.bool( False )
        ),
        nChargedPFCandsMin = cms.uint32( 1 )
      )
    ),
    matchingCone = cms.double( 0.5 ),
    minPixelHits = cms.int32( 0 ),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool( False )
)
process.hltHpsPFTauPrimaryVertexProducerForDeepTauForVBFIsoTau = cms.EDProducer( "PFTauPrimaryVertexProducer",
    qualityCuts = cms.PSet( 
      signalQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        maxDeltaZ = cms.double( 0.4 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 ),
        minNeutralHadronEt = cms.double( 30.0 )
      ),
      isolationQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 1.0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.03 ),
        maxDeltaZ = cms.double( 0.2 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 8 ),
        minGammaEt = cms.double( 1.5 )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" ),
      vertexTrackFiltering = cms.bool( False ),
      recoverLeadingTrk = cms.bool( False ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" )
    ),
    cut = cms.string( "pt > 18.0 & abs(eta)<2.4" ),
    Algorithm = cms.int32( 0 ),
    RemoveElectronTracks = cms.bool( False ),
    RemoveMuonTracks = cms.bool( False ),
    useBeamSpot = cms.bool( True ),
    useSelectedTaus = cms.bool( False ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    ElectronTag = cms.InputTag( "hltEgammaCandidates" ),
    PFTauTag = cms.InputTag( "hltHpsPFTauProducer" ),
    MuonTag = cms.InputTag( "hltMuons" ),
    PVTag = cms.InputTag( "hltPixelVertices" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauDiscriminationByDecayModeFindingNewDMsForVBFIsoTau" ),
        selectionCut = cms.double( 0.5 )
      )
    )
)
process.hltHpsPFTauSecondaryVertexProducerForDeepTauForVBFIsoTau = cms.EDProducer( "PFTauSecondaryVertexProducer",
    PFTauTag = cms.InputTag( "hltHpsPFTauProducer" )
)
process.hltHpsPFTauTransverseImpactParametersForDeepTauForVBFIsoTau = cms.EDProducer( "PFTauTransverseImpactParameters",
    PFTauPVATag = cms.InputTag( "hltHpsPFTauPrimaryVertexProducerForDeepTauForVBFIsoTau" ),
    useFullCalculation = cms.bool( True ),
    PFTauTag = cms.InputTag( "hltHpsPFTauProducer" ),
    PFTauSVATag = cms.InputTag( "hltHpsPFTauSecondaryVertexProducerForDeepTauForVBFIsoTau" )
)
process.hltHpsPFTauBasicDiscriminatorsForDeepTauForVBFIsoTau = cms.EDProducer( "PFRecoTauDiscriminationByIsolationContainer",
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducer" ),
    qualityCuts = cms.PSet( 
      signalQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        maxDeltaZ = cms.double( 0.4 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 ),
        minNeutralHadronEt = cms.double( 30.0 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      isolationQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 1.0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.03 ),
        maxDeltaZ = cms.double( 0.2 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 8 ),
        minGammaEt = cms.double( 1.5 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" ),
      vertexTrackFiltering = cms.bool( False ),
      recoverLeadingTrk = cms.bool( False ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" )
    ),
    minTauPtForNoIso = cms.double( -99.0 ),
    vertexSrc = cms.InputTag( "hltPixelVertices" ),
    rhoConeSize = cms.double( 0.5 ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoProducerFastjetAllTau" ),
    footprintCorrections = cms.VPSet( 
      cms.PSet(  selection = cms.string( "decayMode() = 0" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 1 || decayMode() = 2" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 5" ),
        offset = cms.string( "2.7" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 6" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 10" ),
        offset = cms.string( "max(2.0, 0.22*pt() - 2.0)" )
      )
    ),
    deltaBetaFactor = cms.string( "0.2000" ),
    applyFootprintCorrection = cms.bool( False ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    verbosity = cms.int32( 0 ),
    deltaBetaPUTrackPtCutOverride = cms.bool( True ),
    applyRhoCorrection = cms.bool( False ),
    WeightECALIsolation = cms.double( 1.0 ),
    rhoUEOffsetCorrection = cms.double( 1.0 ),
    deltaBetaPUTrackPtCutOverride_val = cms.double( 0.5 ),
    isoConeSizeForDeltaBeta = cms.double( 0.8 ),
    customOuterCone = cms.double( 0.5 ),
    particleFlowSrc = cms.InputTag( "hltParticleFlowForTaus" ),
    IDdefinitions = cms.VPSet( 
      cms.PSet(  IDname = cms.string( "ChargedIsoPtSum" ),
        ApplyDiscriminationByTrackerIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "NeutralIsoPtSum" ),
        ApplyDiscriminationByECALIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "NeutralIsoPtSumWeight" ),
        ApplyDiscriminationByWeightedECALIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True ),
        UseAllPFCandsForWeights = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "TauFootprintCorrection" ),
        storeRawFootprintCorrection = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "PhotonPtSumOutsideSignalCone" ),
        storeRawPhotonSumPt_outsideSignalCone = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "PUcorrPtSum" ),
        applyDeltaBetaCorrection = cms.bool( True ),
        storeRawPUsumPt = cms.bool( True )
      )
    ),
    IDWPdefinitions = cms.VPSet( 
    )
)
process.hltHpsPFTauBasicDiscriminatorsdR03ForDeepTauForVBFIsoTau = cms.EDProducer( "PFRecoTauDiscriminationByIsolationContainer",
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducer" ),
    qualityCuts = cms.PSet( 
      signalQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        maxDeltaZ = cms.double( 0.4 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 ),
        minNeutralHadronEt = cms.double( 30.0 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      isolationQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 1.0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.03 ),
        maxDeltaZ = cms.double( 0.2 ),
        maxDeltaZToLeadTrack = cms.double( -1.0 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 8 ),
        minGammaEt = cms.double( 1.5 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.5 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 ),
        minTrackPixelHits = cms.uint32( 0 ),
        minTrackHits = cms.uint32( 3 ),
        minGammaEt = cms.double( 1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" ),
      vertexTrackFiltering = cms.bool( False ),
      recoverLeadingTrk = cms.bool( False ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" )
    ),
    minTauPtForNoIso = cms.double( -99.0 ),
    vertexSrc = cms.InputTag( "hltPixelVertices" ),
    rhoConeSize = cms.double( 0.5 ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoProducerFastjetAllTau" ),
    footprintCorrections = cms.VPSet( 
      cms.PSet(  selection = cms.string( "decayMode() = 0" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 1 || decayMode() = 2" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 5" ),
        offset = cms.string( "2.7" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 6" ),
        offset = cms.string( "0.0" )
      ),
      cms.PSet(  selection = cms.string( "decayMode() = 10" ),
        offset = cms.string( "max(2.0, 0.22*pt() - 2.0)" )
      )
    ),
    deltaBetaFactor = cms.string( "0.2000" ),
    applyFootprintCorrection = cms.bool( False ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    verbosity = cms.int32( 0 ),
    deltaBetaPUTrackPtCutOverride = cms.bool( True ),
    applyRhoCorrection = cms.bool( False ),
    WeightECALIsolation = cms.double( 1.0 ),
    rhoUEOffsetCorrection = cms.double( 1.0 ),
    deltaBetaPUTrackPtCutOverride_val = cms.double( 0.5 ),
    isoConeSizeForDeltaBeta = cms.double( 0.8 ),
    customOuterCone = cms.double( 0.3 ),
    particleFlowSrc = cms.InputTag( "hltParticleFlowForTaus" ),
    IDdefinitions = cms.VPSet( 
      cms.PSet(  IDname = cms.string( "ChargedIsoPtSum" ),
        ApplyDiscriminationByTrackerIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "NeutralIsoPtSum" ),
        ApplyDiscriminationByECALIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "NeutralIsoPtSumWeight" ),
        ApplyDiscriminationByWeightedECALIsolation = cms.bool( True ),
        storeRawSumPt = cms.bool( True ),
        UseAllPFCandsForWeights = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "TauFootprintCorrection" ),
        storeRawFootprintCorrection = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "PhotonPtSumOutsideSignalCone" ),
        storeRawPhotonSumPt_outsideSignalCone = cms.bool( True )
      ),
      cms.PSet(  IDname = cms.string( "PUcorrPtSum" ),
        applyDeltaBetaCorrection = cms.bool( True ),
        storeRawPUsumPt = cms.bool( True )
      )
    ),
    IDWPdefinitions = cms.VPSet( 
    )
)
process.hltHpsPFTauDeepTauProducerForVBFIsoTau = cms.EDProducer( "DeepTauId",
    electrons = cms.InputTag( "default" ),
    muons = cms.InputTag( "default" ),
    taus = cms.InputTag( "hltHpsPFTauProducer" ),
    pfcands = cms.InputTag( "hltParticleFlowForTaus" ),
    vertices = cms.InputTag( "hltPixelVertices" ),
    rho = cms.InputTag( "hltFixedGridRhoProducerFastjetAllTau" ),
    mem_mapped = cms.bool( False ),
    year = cms.uint32( 2017 ),
    version = cms.uint32( 2 ),
    sub_version = cms.uint32( 1 ),
    debug_level = cms.int32( 0 ),
    disable_dxy_pca = cms.bool( True ),
    disable_hcalFraction_workaround = cms.bool( False ),
    disable_CellIndex_workaround = cms.bool( False ),
    save_inputs = cms.bool( False ),
    is_online = cms.bool( True ),
    VSeWP = cms.vstring( '-1.' ),
    VSmuWP = cms.vstring( '-1.' ),
    VSjetWP = cms.vstring( 'double t1 = 0.5890, t2 = 0.3310, t3 = 0.050, x1 = 27, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;',
      'double t1 = 0.5701, t2 = 0.4610, t3 = 0.125, x1 = 35, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;',
      'double t1 = 0.844, t2 = 0.8457, t3 = 0.125, x1 = 30, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;',
      'double t1 = 0.5890, t2 = 0.3310, t3 = 0.050, x1 = 27, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;',
      'double t1 = 0.9619, t2 = 0.9269, t3 = 0.5, x1 = 50, x2 = 300, x3 = 500; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;',
      'double t1 = 0.6072, t2 = 0.125, x1 = 180, x2 = 500; if (pt <= x1) return t1; if (pt >= x2) return t2; return (t2 - t1) / (x2 - x1) * (pt - x1) + t1;' ),
    basicTauDiscriminators = cms.untracked.InputTag( "hltHpsPFTauBasicDiscriminatorsForDeepTauForVBFIsoTau" ),
    basicTauDiscriminatorsdR03 = cms.untracked.InputTag( "hltHpsPFTauBasicDiscriminatorsdR03ForDeepTauForVBFIsoTau" ),
    pfTauTransverseImpactParameters = cms.InputTag( "hltHpsPFTauTransverseImpactParametersForDeepTauForVBFIsoTau" ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    graph_file = cms.vstring( 'core:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_core.pb',
      'inner:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_inner.pb',
      'outer:RecoTauTag/TrainingFiles/data/DeepTauId/deepTau_2017v2p6_e6_outer.pb' )
)
process.hltHpsSelectedPFTausMediumDitauWPDeepTauForVBFIsoTau = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsPFTauProducer" ),
    cut = cms.string( "pt > 20 && abs(eta) < 2.1" ),
    discriminators = cms.VPSet( 
    ),
    discriminatorContainers = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauDeepTauProducerForVBFIsoTau", "VSjet" ),
        rawValues = cms.vstring(  ),
        selectionCuts = cms.vdouble(  ),
        workingPoints = cms.vstring( 'double t1 = 0.5701, t2 = 0.4610, t3 = 0.125, x1 = 35, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;' )
      )
    )
)
process.hltHpsSinglePFTau20MediumDitauWPDeepTauNoMatchForVBFIsoTau = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsSelectedPFTausMediumDitauWPDeepTauForVBFIsoTau" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 20.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu24MediumDeepTauPFTau20 = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausMediumDitauWPDeepTauForVBFIsoTau' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSinglePFTau20MediumDitauWPDeepTauNoMatchForVBFIsoTau" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS45L2NNeta2p1CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2TauTagNNFilterMuXXerIsoTauYYForVBFTauTau = cms.EDFilter( "L2TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    L1TauSrc = cms.InputTag( "hltL1sBigOrMuXXerIsoTauYYer" ),
    L2Outcomes = cms.InputTag( 'hltL2TauTagNNProducer','MuXXTauYY' ),
    DiscrWP = cms.double( 0.4327 ),
    l1TauPtThreshold = cms.double( 250.0 )
)
process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauBigOrMuXXerIsoTauYYerMatchForVBFIsoTau = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sBigOrMuXXerIsoTauYYer" ),
    JetSrc = cms.InputTag( "hltHpsSelectedPFTausMediumDitauWPDeepTauForVBFIsoTau" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( True ),
    KeepOriginalVertex = cms.bool( False )
)
process.hltHpsSelectedPFTau45MediumDitauWPDeepTauL1HLTBigOrMuXXerIsoTauYYerMatchedForVBFIsoTau = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauBigOrMuXXerIsoTauYYerMatchForVBFIsoTau" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 35.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau45MonitoringForVBFIsoTau = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausMediumDitauWPDeepTauForVBFIsoTau' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSelectedPFTau45MediumDitauWPDeepTauL1HLTBigOrMuXXerIsoTauYYerMatchedForVBFIsoTau" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet30MediumL2NNeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJet30PNetTauhTagMediumWPL2MuXXTauYY = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL2TauTagNNFilterMuXXerIsoTauYY" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.56, t2 = 0.47, t3 = 0.001, t4 = 0, x1 = 30, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 30.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24SinglePFJet30PNetTauhTagMediumWP = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet30PNetTauhTagMediumWPL2MuXXTauYY" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet30TightL2NNeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJet30PNetTauhTagTightWPL2MuXXTauYY = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL2TauTagNNFilterMuXXerIsoTauYY" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.60, t2 = 0.50, t3 = 0.001, t4 = 0, x1 = 30, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 30.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24SinglePFJet30PNetTauhTagTightWP = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet30PNetTauhTagTightWPL2MuXXTauYY" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet26L2NNeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJet26PNetTauhTagL2Mu18TauYY = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL2TauTagNNFilterMu18erTauXX" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.64, t2 = 0.46, t3 = 0.001, t4 = 0, x1 = 26, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 26.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24SinglePFJet26PNetTauhTag = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet26PNetTauhTagL2Mu18TauYY" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet26L2NNeta2p3CrossL1PFJet60 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltHpsOverlapFilterIsoMu24SinglePFJet26PNetTauhTagPFJet60 = cms.EDFilter( "HLT3MuonDoublePFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    originTag3 = cms.VInputTag( 'hltPFJetsCorrectedMatchedToL1' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet26PNetTauhTagL2Mu18TauYY" ),
    inputTag3 = cms.InputTag( "hlt1PFJet60L1HLTMatched" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    triggerType3 = cms.int32( 85 ),
    MinDphi = cms.double( 1.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinMinv = cms.double( 1.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinDelR = cms.double( 0.5 ),
    MaxDelR = cms.double( 9999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet26L2NNeta2p3CrossL1PFJet75 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltHpsOverlapFilterIsoMu24SinglePFJet26PNetTauhTagPFJet75 = cms.EDFilter( "HLT3MuonDoublePFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    originTag3 = cms.VInputTag( 'hltPFJetsCorrectedMatchedToL1' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet26PNetTauhTagL2Mu18TauYY" ),
    inputTag3 = cms.InputTag( "hlt1PFJet75L1HLTMatched" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    triggerType3 = cms.int32( 85 ),
    MinDphi = cms.double( 1.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinMinv = cms.double( 1.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinDelR = cms.double( 0.5 ),
    MaxDelR = cms.double( 9999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet30Tighteta2p3CrossL1ETauMonitoring = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJets30PNetTauhTagTightWPMatchMonitoringMuTauL1 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.90, t2 = 0.80, t3 = 0.001, t4 = 0, x1 = 30, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 30.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24TightETauWPPNetTauhTagJet30L1Seeded = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJets30PNetTauhTagTightWPMatchMonitoringMuTauL1" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet30Mediumeta2p3CrossL1ETauMonitoring = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJets30PNetTauhTagMediumWPMatchMonitoringMuTauL1 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.80, t2 = 0.60, t3 = 0.001, t4 = 0, x1 = 30, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 30.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24MediumETauWPPNetTauhTagJet30L1Seeded = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJets30PNetTauhTagMediumWPMatchMonitoringMuTauL1" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet30Looseeta2p3CrossL1ETauMonitoring = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJets30PNetTauhTagLooseWPMatchMonitoringMuTauL1 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.70, t2 = 0.50, t3 = 0.001, t4 = 0, x1 = 30, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 30.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24LooseETauWPPNetTauhTagJet30L1Seeded = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJets30PNetTauhTagLooseWPMatchMonitoringMuTauL1" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu20eta2p1PNetTauhPFJet27Tighteta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJets27PNetTauhTagTightWPMatchMuTauL1 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.56, t2 = 0.47, t3 = 0.001, t4 = 0, x1 = 27, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 27.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu20TightMuTauWPPNetPFJet27 = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJets27PNetTauhTagTightWPMatchMuTauL1" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu20eta2p1PNetTauhPFJet27Mediumeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJets27PNetTauhTagMediumWPMatchMuTauL1 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.52, t2 = 0.42, t3 = 0.001, t4 = 0, x1 = 27, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 27.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu20MediumMuTauWPPNetPFJet27 = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJets27PNetTauhTagMediumWPMatchMuTauL1" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu20eta2p1PNetTauhPFJet27Looseeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJets27PNetTauhTagLooseWPMatchMuTauL1 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.48, t2 = 0.4, t3 = 0.001, t4 = 0, x1 = 27, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 27.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu20LooseMuTauWPPNetPFJet27 = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJets27PNetTauhTagLooseWPMatchMuTauL1" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet20eta2p2SingleL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltCaloTowersIsoTau1Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 0 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau1Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau1Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau2Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 1 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau2Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau2Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau3Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 2 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau3Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau3Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau4Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 3 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau4Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau4Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau5Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 4 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau5Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau5Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau6Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 5 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau6Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau6Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau7Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 6 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau7Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau7Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau8Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 7 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau8Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau8Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau9Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 8 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau9Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau9Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau10Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 9 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau10Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau10Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau11Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 10 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau11Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau11Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltCaloTowersIsoTau12Regional = cms.EDProducer( "CaloTowerFromL1TCreatorForTauHLT",
    TauTrigger = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    TauId = cms.int32( 11 ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    BX = cms.int32( 0 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTau12Regional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowersIsoTau12Regional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltL2TauJets = cms.EDProducer( "L2TauJetsMerger",
    JetSrc = cms.VInputTag( 'hltAkIsoTau1Regional','hltAkIsoTau2Regional','hltAkIsoTau3Regional','hltAkIsoTau4Regional','hltAkIsoTau5Regional','hltAkIsoTau6Regional','hltAkIsoTau7Regional','hltAkIsoTau8Regional','hltAkIsoTau9Regional','hltAkIsoTau10Regional','hltAkIsoTau11Regional','hltAkIsoTau12Regional' ),
    EtMin = cms.double( 20.0 )
)
process.hltSingleL2Tau20eta2p2 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL2TauJets" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 20.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.2 ),
    MinN = cms.int32( 1 )
)
process.hltL2TausForPixelIsolation = cms.EDFilter( "CaloJetSelector",
    src = cms.InputTag( "hltL2TauJets" ),
    filter = cms.bool( False ),
    cut = cms.string( "pt > 20 & abs(eta) < 2.5" )
)
process.hltL2TauPixelIsoTagProducerGlob = cms.EDProducer( "L2TauPixelIsoTagProducer",
    JetSrc = cms.InputTag( "hltL2TausForPixelIsolation" ),
    BeamSpotSrc = cms.InputTag( "hltOnlineBeamSpot" ),
    VertexSrc = cms.InputTag( "hltTrimmedPixelVertices" ),
    MaxNumberPV = cms.int32( 1 ),
    IsoConeMax = cms.double( 0.4 ),
    IsoConeMin = cms.double( 0.15 ),
    TrackMinPt = cms.double( 0.9 ),
    TrackMinNHits = cms.int32( 3 ),
    TrackMaxNChi2 = cms.double( 1000.0 ),
    TrackPVMaxDZ = cms.double( 0.1 ),
    TrackMaxDxy = cms.double( 0.2 ),
    TrackSrc = cms.InputTag( "" )
)
process.hltL2TauIsoFilterGlob = cms.EDFilter( "HLTCaloJetTag",
    saveTags = cms.bool( True ),
    Jets = cms.InputTag( "hltL2TausForPixelIsolation" ),
    JetTags = cms.InputTag( "hltL2TauPixelIsoTagProducerGlob" ),
    MinTag = cms.double( 0.0 ),
    MaxTag = cms.double( 3.0 ),
    MinJets = cms.int32( 1 ),
    MatchJetsByDeltaR = cms.bool( False ),
    MaxJetDeltaR = cms.double( 0.1 ),
    TriggerType = cms.int32( 84 )
)
process.hltL2TauJetsIsoGlob = cms.EDProducer( "HLTCaloJetCollectionProducer",
    HLTObject = cms.InputTag( "hltL2TauIsoFilterGlob" ),
    TriggerTypes = cms.vint32( 84 )
)
process.hltSingleL2GlobIsoTau20eta2p2 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL2TauJetsIsoGlob" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 20.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.2 ),
    MinN = cms.int32( 1 )
)
process.hltPFJetForBtagSelectorMinPt20 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4PFJetsCorrected" ),
    triggerType = cms.int32( 86 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 20.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.6 ),
    MinN = cms.int32( 1 )
)
process.hltPFJetForBtagMinPt20 = cms.EDProducer( "HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag( "hltPFJetForBtagSelectorMinPt20" ),
    TriggerTypes = cms.vint32( 86 )
)
process.hltDeepBLifetimeTagInfosPFMinPt20 = cms.EDProducer( "CandIPProducer",
    primaryVertex = cms.InputTag( "hltVerticesPFFilter" ),
    computeProbabilities = cms.bool( True ),
    computeGhostTrack = cms.bool( True ),
    ghostTrackPriorDeltaR = cms.double( 0.03 ),
    minimumNumberOfPixelHits = cms.int32( 2 ),
    minimumNumberOfHits = cms.int32( 3 ),
    maximumTransverseImpactParameter = cms.double( 0.2 ),
    minimumTransverseMomentum = cms.double( 1.0 ),
    maximumChiSquared = cms.double( 5.0 ),
    maximumLongitudinalImpactParameter = cms.double( 17.0 ),
    jetDirectionUsingTracks = cms.bool( False ),
    jetDirectionUsingGhostTrack = cms.bool( False ),
    useTrackQuality = cms.bool( False ),
    jets = cms.InputTag( "hltPFJetForBtagMinPt20" ),
    candidates = cms.InputTag( "hltParticleFlow" ),
    maxDeltaR = cms.double( 0.4 )
)
process.hltPrimaryVertexAssociationMinPt20 = cms.EDProducer( "PFCandidatePrimaryVertexSorter",
    sorting = cms.PSet(  ),
    assignment = cms.PSet( 
      maxDxyForJetAxisAssigment = cms.double( 0.1 ),
      maxDzForJetAxisAssigment = cms.double( 0.1 ),
      useTiming = cms.bool( False ),
      preferHighRanked = cms.bool( False ),
      EtaMinUseDz = cms.double( -1.0 ),
      maxDistanceToJetAxis = cms.double( 0.07 ),
      PtMaxCharged = cms.double( -1.0 ),
      minJetPt = cms.double( 20.0 ),
      maxDzSigForPrimaryAssignment = cms.double( 5.0 ),
      OnlyUseFirstDz = cms.bool( False ),
      maxDzErrorForPrimaryAssignment = cms.double( 0.05 ),
      maxDzForPrimaryAssignment = cms.double( 0.1 ),
      maxJetDeltaR = cms.double( 0.5 ),
      maxDxySigForNotReconstructedPrimary = cms.double( 2.0 ),
      DzCutForChargedFromPUVtxs = cms.double( 0.2 ),
      maxDtSigForPrimaryAssignment = cms.double( 3.0 ),
      maxDxyForNotReconstructedPrimary = cms.double( 0.01 ),
      useVertexFit = cms.bool( True ),
      NumOfPUVtxsForCharged = cms.uint32( 0 )
    ),
    qualityForPrimary = cms.int32( 2 ),
    usePVMET = cms.bool( True ),
    particles = cms.InputTag( "hltParticleFlow" ),
    vertices = cms.InputTag( "hltVerticesPFFilter" ),
    jets = cms.InputTag( "hltPFJetForBtagMinPt20" ),
    produceAssociationToOriginalVertices = cms.bool( True ),
    produceSortedVertices = cms.bool( False ),
    producePileUpCollection = cms.bool( False ),
    produceNoPileUpCollection = cms.bool( False )
)
process.hltParticleNetJetTagInfosMinPt20 = cms.EDProducer( "DeepBoostedJetTagInfoProducer",
    jet_radius = cms.double( 0.4 ),
    min_jet_pt = cms.double( 20.0 ),
    max_jet_eta = cms.double( 2.5 ),
    min_pt_for_track_properties = cms.double( 0.95 ),
    min_pt_for_pfcandidates = cms.double( 0.1 ),
    use_puppiP4 = cms.bool( False ),
    include_neutrals = cms.bool( True ),
    sort_by_sip2dsig = cms.bool( False ),
    min_puppi_wgt = cms.double( -1.0 ),
    flip_ip_sign = cms.bool( False ),
    sip3dSigMax = cms.double( -1.0 ),
    use_hlt_features = cms.bool( True ),
    vertices = cms.InputTag( "hltVerticesPFFilter" ),
    secondary_vertices = cms.InputTag( "hltDeepInclusiveMergedVerticesPF" ),
    pf_candidates = cms.InputTag( "hltParticleFlow" ),
    jets = cms.InputTag( "hltPFJetForBtagMinPt20" ),
    unsubjet_map = cms.InputTag( "" ),
    puppi_value_map = cms.InputTag( "" ),
    vertex_associator = cms.InputTag( 'hltPrimaryVertexAssociationMinPt20','original' ),
    use_scouting_features = cms.bool( False ),
    normchi2_value_map = cms.InputTag( "" ),
    dz_value_map = cms.InputTag( "" ),
    dxy_value_map = cms.InputTag( "" ),
    dzsig_value_map = cms.InputTag( "" ),
    dxysig_value_map = cms.InputTag( "" ),
    lostInnerHits_value_map = cms.InputTag( "" ),
    quality_value_map = cms.InputTag( "" ),
    trkPt_value_map = cms.InputTag( "" ),
    trkEta_value_map = cms.InputTag( "" ),
    trkPhi_value_map = cms.InputTag( "" ),
    covarianceVersion = cms.int32( 1 ),
    covariancePackingSchemas = cms.vint32( 8, 264, 520, 776, 0 )
)
process.hltParticleNetONNXJetTagsMinPt20 = cms.EDProducer( "BoostedJetONNXJetTagsProducer",
    src = cms.InputTag( "hltParticleNetJetTagInfosMinPt20" ),
    preprocess_json = cms.string( "RecoBTag/Combined/data/HLT/ParticleNetAK4/V01/preprocess.json" ),
    preprocessParams = cms.PSet(  ),
    model_path = cms.FileInPath( "RecoBTag/Combined/data/HLT/ParticleNetAK4/V01/particle-net.onnx" ),
    flav_names = cms.vstring( 'probtauhp',
      'probtauhm',
      'probb',
      'probc',
      'probuds',
      'probg',
      'ptcorr' ),
    jets = cms.InputTag( "" ),
    produceValueMap = cms.untracked.bool( False ),
    debugMode = cms.untracked.bool( False )
)
process.hltParticleNetDiscriminatorsJetTagsMinPt20 = cms.EDProducer( "BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet( 
      cms.PSet(  name = cms.string( "BvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt20:probb' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt20:probb','hltParticleNetONNXJetTagsMinPt20:probc','hltParticleNetONNXJetTagsMinPt20:probuds','hltParticleNetONNXJetTagsMinPt20:probg' )
      ),
      cms.PSet(  name = cms.string( "CvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt20:probc' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt20:probb','hltParticleNetONNXJetTagsMinPt20:probc','hltParticleNetONNXJetTagsMinPt20:probuds','hltParticleNetONNXJetTagsMinPt20:probg' )
      ),
      cms.PSet(  name = cms.string( "TauhvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt20:probtauhp','hltParticleNetONNXJetTagsMinPt20:probtauhm' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt20:probb','hltParticleNetONNXJetTagsMinPt20:probc','hltParticleNetONNXJetTagsMinPt20:probuds','hltParticleNetONNXJetTagsMinPt20:probg','hltParticleNetONNXJetTagsMinPt20:probtauhp','hltParticleNetONNXJetTagsMinPt20:probtauhm' )
      ),
      cms.PSet(  name = cms.string( "CvsL" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt20:probc' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt20:probc','hltParticleNetONNXJetTagsMinPt20:probuds','hltParticleNetONNXJetTagsMinPt20:probg' )
      )
    )
)
process.hltSinglePFJet20PNetTauhTagVBFDiTauL2Tau = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtagMinPt20" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTagsMinPt20','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTagsMinPt20','ptcorr' ),
    seeds = cms.InputTag( "hltSingleL2Tau20eta2p2" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.40, t2 = 0.25, t3 = 0.001, t4 = 0, x1 = 20, x2 = 100, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 20.0 ),
    maxEta = cms.double( 2.2 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( False ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24VBFDiTauPNetPFJet20 = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtagMinPt20' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet20PNetTauhTagVBFDiTauL2Tau" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet45L2NNeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJet45PNetTauhTagL2VBFIsoTauMonitoring = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL2TauTagNNFilterMuXXerIsoTauYYForVBFTauTau" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.40, t2 = 0.30, t3 = 0.001, t4 = 0, x1 = 45, x2 = 150, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 45.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24SVBFSingleTauPNetPFJet45 = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet45PNetTauhTagL2VBFIsoTauMonitoring" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PFHT250 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFHTJet25 = cms.EDProducer( "HLTHtMhtProducer",
    usePt = cms.bool( True ),
    excludePFMuons = cms.bool( False ),
    minNJetHt = cms.int32( 0 ),
    minNJetMht = cms.int32( 0 ),
    minPtJetHt = cms.double( 25.0 ),
    minPtJetMht = cms.double( 0.0 ),
    maxEtaJetHt = cms.double( 2.5 ),
    maxEtaJetMht = cms.double( 999.0 ),
    jetsLabel = cms.InputTag( "hltAK4PFJetsCorrected" ),
    pfCandidatesLabel = cms.InputTag( "hltParticleFlow" )
)
process.hltPFHT250Jet25 = cms.EDFilter( "HLTHtMhtFilter",
    saveTags = cms.bool( True ),
    htLabels = cms.VInputTag( 'hltPFHTJet25' ),
    mhtLabels = cms.VInputTag( 'hltPFHTJet25' ),
    minHt = cms.vdouble( 250.0 ),
    minMht = cms.vdouble( 0.0 ),
    minMeff = cms.vdouble( 0.0 ),
    meffSlope = cms.vdouble( 1.0 )
)
process.hltPreIsoMu24eta2p1PFHT250QuadPFJet25 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hlt4PFCentralJetTightIDPt25 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4PFJetsTightIDCorrected" ),
    triggerType = cms.int32( 86 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 25.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 4 )
)
process.hltPreIsoMu24eta2p1PFHT250QuadPFJet25PNet1Tauh0p50 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hlt4PFCentralJetPt25 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4PFJetsCorrected" ),
    triggerType = cms.int32( 86 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 25.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 4 )
)
process.hltPFCentralJetPt25 = cms.EDProducer( "HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag( "hlt4PFCentralJetPt25" ),
    TriggerTypes = cms.vint32( 86 )
)
process.hltPFCentralJetNoIDPt25PNet1TauHTag0p50 = cms.EDFilter( "HLTSumPFJetTag",
    saveTags = cms.bool( True ),
    Jets = cms.InputTag( "hltPFCentralJetPt25" ),
    JetTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    MinTag = cms.double( 0.5 ),
    MaxTag = cms.double( 999999.0 ),
    MinJetToSum = cms.int32( 1 ),
    MaxJetToSum = cms.int32( 1 ),
    UseMeanValue = cms.bool( True ),
    MatchByDeltaR = cms.bool( True ),
    MaxDeltaR = cms.double( 0.4 ),
    TriggerType = cms.int32( 86 )
)
process.hltPreIsoMu24eta2p1SinglePFJet25PNet1Tauh0p50 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hlt1PFCentralJetPt25 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4PFJetsCorrected" ),
    triggerType = cms.int32( 86 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 25.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltSinglePFCentralJetPt25 = cms.EDProducer( "HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag( "hlt1PFCentralJetPt25" ),
    TriggerTypes = cms.vint32( 86 )
)
process.hltSinglePFCentralJetNoIDPt25PNet1TauHTag0p50 = cms.EDFilter( "HLTSumPFJetTag",
    saveTags = cms.bool( True ),
    Jets = cms.InputTag( "hltSinglePFCentralJetPt25" ),
    JetTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    MinTag = cms.double( 0.5 ),
    MaxTag = cms.double( 999999.0 ),
    MinJetToSum = cms.int32( 1 ),
    MaxJetToSum = cms.int32( 1 ),
    UseMeanValue = cms.bool( True ),
    MatchByDeltaR = cms.bool( True ),
    MaxDeltaR = cms.double( 0.4 ),
    TriggerType = cms.int32( 86 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet130LooseL2NNeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJet130PNetTauhTagLooseWPL2Mu22Tau40 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL2Mu22Tau40TagNNFilterSingleTauWP" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.94, t2 = 0.90, t3 = 0.001, t4 = 0, x1 = 130, x2 = 200, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 130.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24SinglePFJet130PNetTauhTagLooseWPL1Seeded = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet130PNetTauhTagLooseWPL2Mu22Tau40" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet130MediumL2NNeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJet130PNetTauhTagMediumWPL2Mu22Tau40 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL2Mu22Tau40TagNNFilterSingleTauWP" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 1.0, t2 = 0.95, t3 = 0.001, t4 = 0, x1 = 130, x2 = 200, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 130.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24SinglePFJet130PNetTauhTagMediumWPL1Seeded = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet130PNetTauhTagMediumWPL2Mu22Tau40" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1PNetTauhPFJet130TightL2NNeta2p3CrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltSinglePFJet130PNetTauhTagTightWPL2Mu22Tau40 = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtag" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTags','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTags','ptcorr' ),
    seeds = cms.InputTag( "hltL2Mu22Tau40TagNNFilterSingleTauWP" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 1.0, t2 = 0.99, t3 = 0.001, t4 = 0, x1 = 130, x2 = 200, x3 = 500, x4 = 1000; if (pt <= x1) return t1; if ((pt > x1) && (pt <= x2)) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; if ((pt > x2) && (pt <= x3)) return (t3 - t2) / (x3 - x2) * (pt - x2) + t2; if ((pt > x3) && (pt <= x4)) return (t4 - t3) / (x4 - x3) * (pt - x3) + t3; return t4;" ),
    minPt = cms.double( 130.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( True ),
    matchingdR = cms.double( 0.5 )
)
process.hltHpsOverlapFilterIsoMu24SinglePFJet130PNetTauhTagTightWPL1Seeded = cms.EDFilter( "HLT2MuonPFJet",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltPFJetForBtag' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltSinglePFJet130PNetTauhTagTightWPL2Mu22Tau40" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreDoubleL2Mu10NoVtx2ChaVetoL3Mu0DxyMax1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1fMuf0DoubleL2MuNoVtx10Q = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 0.9, 1.5, 2.1, 5.0 ),
    MinNstations = cms.vint32( 0, 2, 0, 2 ),
    MinNhits = cms.vint32( 0, 1, 0, 1 ),
    CutOnChambers = cms.bool( False ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL2fDoubleMu10NoVertexL2Filtered = cms.EDFilter( "HLTMuonDimuonL2FromL1TFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    FastAccept = cms.bool( False ),
    MaxEta = cms.double( 2.0 ),
    MinNhits = cms.int32( 0 ),
    MinNstations = cms.int32( 0 ),
    MinNchambers = cms.int32( 2 ),
    MaxDr = cms.double( 100.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.double( 0.0 ),
    MinPtMax = cms.double( 10.0 ),
    MinPtMin = cms.double( 10.0 ),
    MinInvMass = cms.double( -9999.0 ),
    MaxInvMass = cms.double( 9999.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 3.15 ),
    MinAngle = cms.double( -999.0 ),
    MaxAngle = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 )
)
process.hltL3fDimuonL1f0ppL2NV2Chaf10L3NVf0Veto1Prompt = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1fMuf0DoubleL2MuNoVtx10Q" ),
    L1CandTag = cms.InputTag( "" ),
    inputMuonCollection = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 1.0 ),
    MinDXYBeamSpot = cms.double( 0.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 0.0 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3LinksNoVtx" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreDoubleL2Mu12NoVtx2ChaVetoL3Mu0DxyMax1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fDoubleMu12NoVertexL2Filtered = cms.EDFilter( "HLTMuonDimuonL2FromL1TFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    FastAccept = cms.bool( False ),
    MaxEta = cms.double( 2.0 ),
    MinNhits = cms.int32( 0 ),
    MinNstations = cms.int32( 0 ),
    MinNchambers = cms.int32( 2 ),
    MaxDr = cms.double( 100.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.double( 0.0 ),
    MinPtMax = cms.double( 12.0 ),
    MinPtMin = cms.double( 12.0 ),
    MinInvMass = cms.double( -9999.0 ),
    MaxInvMass = cms.double( 9999.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 3.15 ),
    MinAngle = cms.double( -999.0 ),
    MaxAngle = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 )
)
process.hltPreDoubleL2Mu14NoVtx2ChaVetoL3Mu0DxyMax1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fDoubleMu14NoVertexL2Filtered = cms.EDFilter( "HLTMuonDimuonL2FromL1TFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    FastAccept = cms.bool( False ),
    MaxEta = cms.double( 2.0 ),
    MinNhits = cms.int32( 0 ),
    MinNstations = cms.int32( 0 ),
    MinNchambers = cms.int32( 2 ),
    MaxDr = cms.double( 100.0 ),
    MaxDz = cms.double( 9999.0 ),
    ChargeOpt = cms.int32( 0 ),
    MinPtPair = cms.double( 0.0 ),
    MinPtMax = cms.double( 14.0 ),
    MinPtMin = cms.double( 14.0 ),
    MinInvMass = cms.double( -9999.0 ),
    MaxInvMass = cms.double( 9999.0 ),
    MinAcop = cms.double( -1.0 ),
    MaxAcop = cms.double( 3.15 ),
    MinAngle = cms.double( -999.0 ),
    MaxAngle = cms.double( 9999.0 ),
    MinPtBalance = cms.double( -1.0 ),
    MaxPtBalance = cms.double( 999999.0 ),
    NSigmaPt = cms.double( 0.0 )
)
process.hltPreDoubleL3Mu1610NoVtxDxyMin0p01cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1DoubleMuf0L2DoubleMuNoVtxFiltered7 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 7.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL2fL1DoubleMuf0L2SingleMuNoVtxFiltered15 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 15.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3fL1DoubleMuf0L2NVf15f7L3DoubleMuNVf10Displaced = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf16Displaced = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 16.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL3Mu1810NoVtxDxyMin0p01cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf18Displaced = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 18.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL3Mu2010NoVtxDxyMin0p01cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf20Displaced = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 20.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2MuL3Mu16NoVtxVetoL3Mu0DxyMax0p1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1DoubleMuf0L2DoubleMuNoVtx2ChaFiltered7 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.0 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 2 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 7.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL2fL1DoubleMuf0L2SingleMuNoVtx2ChaFiltered15 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.0 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 2 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 15.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf16DisplacedHybDxy0p1cm = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 16.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.1 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf0VetoDxy0p1cm = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 0.1 ),
    MinDXYBeamSpot = cms.double( 0.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2MuL3Mu18NoVtxVetoL3Mu0DxyMax0p1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf18DisplacedHybDxy0p1cm = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 18.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.1 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2Mu10NoVtx2ChaCosmicSeedVetoL3Mu0DxyMax1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx10Q2ChaCosmicSeed = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2CosmicMuons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.0 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 2 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL3fDimuonL1f0CosmicL2NV2Chaf10L3NVf0Veto1PromptSimple = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 1.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL2Mu12NoVtx2ChaCosmicSeedVetoL3Mu0DxyMax1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sMuORL1f0DoubleL2NoVtx12Q2ChaCosmicSeed = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2CosmicMuons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.0 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 2 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 12.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDoubleL3dTksMu1610NoVtxDxyMin0p01cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1DoubleMuf0L2DoubleMuDisplacedFiltered7 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 12 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 7.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL2fL1DoubleMuf0L2SingleMuDisplacedFiltered15 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 12 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 15.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltIterL3OIGblDisplacedSeedsFromL2Muons = cms.EDProducer( "TSGForOIFromL2",
    src = cms.InputTag( "hltL2Muons" ),
    layersToTry = cms.int32( 8 ),
    fixedErrorRescaleFactorForHitless = cms.double( 2.0 ),
    hitsToTry = cms.int32( 8 ),
    adjustErrorsDynamicallyForHits = cms.bool( False ),
    adjustErrorsDynamicallyForHitless = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    UseHitLessSeeds = cms.bool( True ),
    estimator = cms.string( "hltESPChi2MeasurementEstimator100" ),
    maxEtaForTOB = cms.double( 1.8 ),
    minEtaForTEC = cms.double( 0.7 ),
    debug = cms.untracked.bool( False ),
    fixedErrorRescaleFactorForHits = cms.double( 1.0 ),
    maxSeeds = cms.uint32( 16 ),
    maxHitlessSeeds = cms.uint32( 5 ),
    maxHitSeeds = cms.uint32( 7 ),
    numL2ValidHitsCutAllEta = cms.uint32( 20 ),
    numL2ValidHitsCutAllEndcap = cms.uint32( 30 ),
    pT1 = cms.double( 13.0 ),
    pT2 = cms.double( 30.0 ),
    pT3 = cms.double( 70.0 ),
    eta1 = cms.double( 0.2 ),
    eta2 = cms.double( 0.3 ),
    eta3 = cms.double( 1.0 ),
    eta4 = cms.double( 1.2 ),
    eta5 = cms.double( 1.6 ),
    eta6 = cms.double( 1.4 ),
    eta7 = cms.double( 2.1 ),
    SF1 = cms.double( 3.0 ),
    SF2 = cms.double( 4.0 ),
    SF3 = cms.double( 5.0 ),
    SF4 = cms.double( 7.0 ),
    SF5 = cms.double( 10.0 ),
    SF6 = cms.double( 2.0 ),
    SFHld = cms.double( 2.0 ),
    SFHd = cms.double( 12.0 ),
    tsosDiff1 = cms.double( 0.2 ),
    tsosDiff2 = cms.double( 0.02 ),
    displacedReco = cms.bool( True ),
    propagatorName = cms.string( "PropagatorWithMaterialParabolicMf" )
)
process.hltIterL3OIGlbDisplacedTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( True ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIterL3OIGblDisplacedSeedsFromL2Muons" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryBuilder" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterial" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 500000 ),
    maxSeedsBeforeCleaning = cms.uint32( 0 )
)
process.hltIterL3OIGlbDisplacedMuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( False ),
    SimpleMagneticField = cms.string( "" ),
    src = cms.InputTag( "hltIterL3OIGlbDisplacedTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPKFFittingSmoother" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "iter10" ),
    Propagator = cms.string( "PropagatorWithMaterial" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIterL3OIDisplacedMuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIterL3OIGlbDisplacedMuonCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "Notused" ),
    ignoreVertices = cms.bool( True ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.9 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 4, 3, 2 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 10.0, 1.0, 0.2 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 5, 5 )
    )
)
process.hltIterL3OIDisplacedMuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIterL3OIGlbDisplacedMuonCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIterL3OIDisplacedMuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIterL3OIDisplacedMuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltL3GlbDisplacedMuonsIterL3OI = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( False ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( False ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.2 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( "hltL2Muons" ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "Notused" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltIterL3OIGlbDisplacedMuonCtfWithMaterialTracks" )
    )
)
process.hltIterL3OIL3GlbDisplacedMuonsLinksCombination = cms.EDProducer( "L3TrackLinksCombiner",
    labels = cms.VInputTag( 'hltL3GlbDisplacedMuonsIterL3OI' )
)
process.hltIterL3OIL3GlbDisplacedMuons = cms.EDProducer( "L3TrackCombiner",
    labels = cms.VInputTag( 'hltL3GlbDisplacedMuonsIterL3OI' )
)
process.hltIterL3OIGlbDisplacedMuonCandidates = cms.EDProducer( "L3MuonCandidateProducer",
    InputObjects = cms.InputTag( "hltIterL3OIL3GlbDisplacedMuons" ),
    InputLinksObjects = cms.InputTag( "hltIterL3OIL3GlbDisplacedMuonsLinksCombination" ),
    MuonPtOption = cms.string( "Global" )
)
process.hltL2SelectorForL3IOForGlbDisplaced = cms.EDProducer( "HLTMuonL2SelectorForL3IO",
    l2Src = cms.InputTag( "hltL2Muons" ),
    l3OISrc = cms.InputTag( "hltIterL3OIGlbDisplacedMuonCandidates" ),
    InputLinks = cms.InputTag( "hltIterL3OIL3GlbDisplacedMuonsLinksCombination" ),
    applyL3Filters = cms.bool( False ),
    MinNhits = cms.int32( 1 ),
    MaxNormalizedChi2 = cms.double( 20.0 ),
    MinNmuonHits = cms.int32( 1 ),
    MaxPtDifference = cms.double( 0.3 )
)
process.hltIterL3DisplacedMuonPixelTracksTrackingRegions = cms.EDProducer( "MuonTrackingRegionEDProducer",
    EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
    DeltaR = cms.double( 0.3 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    OnDemand = cms.int32( -1 ),
    vertexCollection = cms.InputTag( "notUsed" ),
    Rescale_phi = cms.double( 3.0 ),
    Eta_fixed = cms.bool( True ),
    Rescale_eta = cms.double( 3.0 ),
    PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
    Eta_min = cms.double( 0.0 ),
    Phi_fixed = cms.bool( True ),
    Phi_min = cms.double( 0.0 ),
    PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
    EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
    MeasurementTrackerName = cms.InputTag( "" ),
    UseVertex = cms.bool( False ),
    Rescale_Dz = cms.double( 4.0 ),
    Pt_fixed = cms.bool( True ),
    Z_fixed = cms.bool( True ),
    Pt_min = cms.double( 0.0 ),
    DeltaZ = cms.double( 24.2 ),
    DeltaEta = cms.double( 0.3 ),
    DeltaPhi = cms.double( 0.225 ),
    maxRegions = cms.int32( 5 ),
    precise = cms.bool( True ),
    input = cms.InputTag( "hltL2SelectorForL3IOForGlbDisplaced" )
)
process.hltPixelTracksInDisplacedRegionL2 = cms.EDProducer( "TrackSelectorByRegion",
    tracks = cms.InputTag( "hltPixelTracks" ),
    regions = cms.InputTag( "hltIterL3DisplacedMuonPixelTracksTrackingRegions" ),
    produceTrackCollection = cms.bool( True ),
    produceMask = cms.bool( False )
)
process.hltIter0IterL3DisplacedMuonPixelSeedsFromPixelTracks = cms.EDProducer( "SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag( "hltPixelTracksInDisplacedRegionL2" ),
    InputVertexCollection = cms.InputTag( "" ),
    originHalfLength = cms.double( 0.3 ),
    originRadius = cms.double( 0.3 ),
    useProtoTrackKinematics = cms.bool( False ),
    useEventsWithNoVertex = cms.bool( True ),
    TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
    usePV = cms.bool( False ),
    includeFourthHit = cms.bool( True ),
    produceComplement = cms.bool( False ),
    SeedCreatorPSet = cms.PSet(  refToPSet_ = cms.string( "HLTSeedFromProtoTracks" ) )
)
process.hltIter0IterL3DisplacedMuonCkfTrackCandidates = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( True ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( True ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" ),
    src = cms.InputTag( "hltIter0IterL3DisplacedMuonPixelSeedsFromPixelTracks" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "none" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltIter0IterL3DisplacedMuonCtfWithMaterialTracks = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltIter0IterL3DisplacedMuonCkfTrackCandidates" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIter0" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltMeasurementTrackerEvent" )
)
process.hltIter0IterL3DisplacedMuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltIter0IterL3DisplacedMuonCtfWithMaterialTracks" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    ignoreVertices = cms.bool( False ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    )
)
process.hltIter0IterL3DisplacedMuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltIter0IterL3DisplacedMuonCtfWithMaterialTracks" ),
    originalMVAVals = cms.InputTag( 'hltIter0IterL3DisplacedMuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter0IterL3DisplacedMuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltIter0IterL3DisplacedMuonTrackSelectionHighPurity" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
process.hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedGblMuons = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    OnDemand = cms.bool( False ),
    clustersToSkip = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons" )
)
process.hltDisplacedhltIter4PixelLessLayerTripletsForGlbDisplacedMuons = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'TIB1+TIB2+MTIB3',
      'TIB1+TIB2+MTID1_pos',
      'TIB1+TIB2+MTID1_neg',
      'TID1_pos+TID2_pos+TID3_pos',
      'TID1_neg+TID2_neg+TID3_neg',
      'TID1_pos+TID2_pos+MTID3_pos',
      'TID1_neg+TID2_neg+MTID3_neg' ),
    BPix = cms.PSet(  ),
    FPix = cms.PSet(  ),
    TIB = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons" ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
    ),
    TID = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 1 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 2 )
    ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 1 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 2 )
    ),
    MTIB = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons" ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
    ),
    MTID = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 3 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 3 )
    ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 3 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 3 )
    )
)
process.hltDisplacedhltIter4PixelLessTrackingRegionsForGlbDisplacedMuons = cms.EDProducer( "MuonTrackingRegionEDProducer",
    EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
    DeltaR = cms.double( 0.1 ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    OnDemand = cms.int32( 0 ),
    vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
    Rescale_phi = cms.double( 3.0 ),
    Eta_fixed = cms.bool( True ),
    Rescale_eta = cms.double( 3.0 ),
    PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
    Eta_min = cms.double( 0.0 ),
    Phi_fixed = cms.bool( True ),
    Phi_min = cms.double( 0.0 ),
    PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
    EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
    MeasurementTrackerName = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedGblMuons" ),
    UseVertex = cms.bool( True ),
    Rescale_Dz = cms.double( 4.0 ),
    Pt_fixed = cms.bool( True ),
    Z_fixed = cms.bool( True ),
    Pt_min = cms.double( 2.0 ),
    DeltaZ = cms.double( 24.2 ),
    DeltaEta = cms.double( 0.3 ),
    DeltaPhi = cms.double( 0.3 ),
    maxRegions = cms.int32( 5 ),
    precise = cms.bool( True ),
    input = cms.InputTag( "hltL2SelectorForL3IOForGlbDisplaced" )
)
process.hltDisplacedhltIter4PixelLessClusterCheckForGlbDisplacedMuons = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 800000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False )
)
process.hltDisplacedhltIter4PixelLessHitDoubletsForGlbDisplacedMuons = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltDisplacedhltIter4PixelLessLayerTripletsForGlbDisplacedMuons" ),
    trackingRegions = cms.InputTag( "hltDisplacedhltIter4PixelLessTrackingRegionsForGlbDisplacedMuons" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "hltDisplacedhltIter4PixelLessClusterCheckForGlbDisplacedMuons" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltDisplacedhltIter4PixelLessHitTripletsForGlbDisplacedMuons = cms.EDProducer( "MultiHitFromChi2EDProducer",
    doublets = cms.InputTag( "hltDisplacedhltIter4PixelLessHitDoubletsForGlbDisplacedMuons" ),
    maxElement = cms.uint32( 100000 ),
    useFixedPreFiltering = cms.bool( False ),
    phiPreFiltering = cms.double( 0.3 ),
    extraHitRPhitolerance = cms.double( 0.0 ),
    extraHitRZtolerance = cms.double( 0.0 ),
    extraZKDBox = cms.double( 0.2 ),
    extraRKDBox = cms.double( 0.2 ),
    extraPhiKDBox = cms.double( 0.005 ),
    fnSigmaRZ = cms.double( 2.0 ),
    refitHits = cms.bool( True ),
    ClusterShapeHitFilterName = cms.string( "ClusterShapeHitFilter" ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    maxChi2 = cms.double( 5.0 ),
    chi2VsPtCut = cms.bool( True ),
    pt_interv = cms.vdouble( 0.4, 0.7, 1.0, 2.0 ),
    chi2_cuts = cms.vdouble( 3.0, 4.0, 5.0, 5.0 ),
    detIdsToDebug = cms.vint32( 0, 0, 0 )
)
process.hltDisplacedhltIter4PixelLessSeedsForGlbDisplacedMuons = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    seedingHitSets = cms.InputTag( "hltDisplacedhltIter4PixelLessHitTripletsForGlbDisplacedMuons" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet( 
      FilterStripHits = cms.bool( False ),
      FilterPixelHits = cms.bool( False ),
      ClusterShapeHitFilterName = cms.string( "ClusterShapeHitFilter" ),
      FilterAtHelixStage = cms.bool( True ),
      ComponentName = cms.string( "PixelClusterShapeSeedComparitor" )
    )
)
process.hltDisplacedhltIter4CkfTrackCandidatesForGlbDisplacedMuons = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedGblMuons" ),
    src = cms.InputTag( "hltDisplacedhltIter4PixelLessSeedsForGlbDisplacedMuons" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltDisplacedhltIter4CtfWithMaterialTracksForGlbDisplacedMuons = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltDisplacedhltIter4CkfTrackCandidatesForGlbDisplacedMuons" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedGblMuons" )
)
process.hltIter4IterL3FromL2MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltDisplacedhltIter4CtfWithMaterialTracksForGlbDisplacedMuons" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "Notused" ),
    ignoreVertices = cms.bool( True ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    )
)
process.hltIter4IterL3FromL2MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltDisplacedhltIter4CtfWithMaterialTracksForGlbDisplacedMuons" ),
    originalMVAVals = cms.InputTag( 'hltIter4IterL3FromL2MuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter4IterL3FromL2MuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltL1MuonNoL2SelectorNoVtx = cms.EDProducer( "HLTL1MuonNoL2Selector",
    InputObjects = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L2CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    L1MinPt = cms.double( 1.0 ),
    L1MaxEta = cms.double( 5.0 ),
    L1MinQuality = cms.uint32( 7 ),
    CentralBxOnly = cms.bool( True )
)
process.hltDisplacedhltIter4ClustersRefRemovalForDisplacedTkMuons = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltIter4IterL3FromL2MuonTrackSelectionHighPurity" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
process.hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedTkMuons = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    OnDemand = cms.bool( False ),
    clustersToSkip = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedTkMuons" )
)
process.hltDisplacedhltIter4PixelLessLayerTripletsForDisplacedTkMuons = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'TIB1+TIB2+MTIB3',
      'TIB1+TIB2+MTID1_pos',
      'TIB1+TIB2+MTID1_neg',
      'TID1_pos+TID2_pos+TID3_pos',
      'TID1_neg+TID2_neg+TID3_neg',
      'TID1_pos+TID2_pos+MTID3_pos',
      'TID1_neg+TID2_neg+MTID3_neg' ),
    BPix = cms.PSet(  ),
    FPix = cms.PSet(  ),
    TIB = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForGlbDisplacedMuons" ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
    ),
    TID = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 1 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForGlbDisplacedMuons" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 2 )
    ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 1 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedTkMuons" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 2 )
    ),
    MTIB = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedTkMuons" ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
    ),
    MTID = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 3 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForDisplacedTkMuons" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 3 )
    ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 3 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForGlbDisplacedMuons" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 3 )
    )
)
process.hltDisplacedhltIter4PixelLessTrackingRegionsForDisplacedTkMuons = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltL1MuonNoL2SelectorNoVtx" ),
      maxNRegions = cms.int32( 100 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      maxNVertices = cms.int32( 10 ),
      ptMin = cms.double( 3.0 ),
      originRadius = cms.double( 1.0 ),
      zErrorBeamSpot = cms.double( 24.2 ),
      deltaEta = cms.double( 0.5 ),
      deltaPhi = cms.double( 0.5 ),
      precise = cms.bool( True ),
      nSigmaZVertex = cms.double( 3.0 ),
      zErrorVetex = cms.double( 12.0 ),
      nSigmaZBeamSpot = cms.double( 4.0 ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      measurementTrackerName = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedTkMuons" ),
      searchOpt = cms.bool( True )
    )
)
process.hltDisplacedhltIter4PixelLessClusterCheckForDisplacedTkMuons = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 800000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False )
)
process.hltDisplacedhltIter4PixelLessHitDoubletsForDisplacedTkMuons = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltDisplacedhltIter4PixelLessLayerTripletsForDisplacedTkMuons" ),
    trackingRegions = cms.InputTag( "hltDisplacedhltIter4PixelLessTrackingRegionsForDisplacedTkMuons" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "hltDisplacedhltIter4PixelLessClusterCheckForDisplacedTkMuons" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltDisplacedhltIter4PixelLessHitTripletsForDisplacedTkMuons = cms.EDProducer( "MultiHitFromChi2EDProducer",
    doublets = cms.InputTag( "hltDisplacedhltIter4PixelLessHitDoubletsForDisplacedTkMuons" ),
    maxElement = cms.uint32( 100000 ),
    useFixedPreFiltering = cms.bool( False ),
    phiPreFiltering = cms.double( 0.3 ),
    extraHitRPhitolerance = cms.double( 0.0 ),
    extraHitRZtolerance = cms.double( 0.0 ),
    extraZKDBox = cms.double( 0.2 ),
    extraRKDBox = cms.double( 0.2 ),
    extraPhiKDBox = cms.double( 0.005 ),
    fnSigmaRZ = cms.double( 2.0 ),
    refitHits = cms.bool( True ),
    ClusterShapeHitFilterName = cms.string( "ClusterShapeHitFilter" ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    maxChi2 = cms.double( 5.0 ),
    chi2VsPtCut = cms.bool( True ),
    pt_interv = cms.vdouble( 0.4, 0.7, 1.0, 2.0 ),
    chi2_cuts = cms.vdouble( 3.0, 4.0, 5.0, 5.0 ),
    detIdsToDebug = cms.vint32( 0, 0, 0 )
)
process.hltDisplacedhltIter4PixelLessSeedsForDisplacedTkMuons = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    seedingHitSets = cms.InputTag( "hltDisplacedhltIter4PixelLessHitTripletsForDisplacedTkMuons" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet( 
      FilterStripHits = cms.bool( False ),
      FilterPixelHits = cms.bool( False ),
      ClusterShapeHitFilterName = cms.string( "ClusterShapeHitFilter" ),
      FilterAtHelixStage = cms.bool( True ),
      ComponentName = cms.string( "PixelClusterShapeSeedComparitor" )
    )
)
process.hltDisplacedhltIter4CkfTrackCandidatesForDisplacedTkMuons = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedTkMuons" ),
    src = cms.InputTag( "hltDisplacedhltIter4PixelLessSeedsForDisplacedTkMuons" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltDisplacedhltIter4CtfWithMaterialTracksForDisplacedTkMuons = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltDisplacedhltIter4CkfTrackCandidatesForDisplacedTkMuons" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedTkMuons" )
)
process.hltIter4IterL3FromL1MuonTrackCutClassifier = cms.EDProducer( "TrackCutClassifier",
    src = cms.InputTag( "hltDisplacedhltIter4CtfWithMaterialTracksForDisplacedTkMuons" ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    vertices = cms.InputTag( "Notused" ),
    ignoreVertices = cms.bool( True ),
    qualityCuts = cms.vdouble( -0.7, 0.1, 0.7 ),
    mva = cms.PSet( 
      minPixelHits = cms.vint32( 0, 0, 0 ),
      maxDzWrtBS = cms.vdouble( 3.40282346639E38, 24.0, 100.0 ),
      dr_par = cms.PSet( 
        d0err = cms.vdouble( 0.003, 0.003, 3.40282346639E38 ),
        dr_par2 = cms.vdouble( 0.3, 0.3, 3.40282346639E38 ),
        dr_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dr_exp = cms.vint32( 4, 4, 2147483647 ),
        d0err_par = cms.vdouble( 0.001, 0.001, 3.40282346639E38 )
      ),
      maxLostLayers = cms.vint32( 1, 1, 1 ),
      min3DLayers = cms.vint32( 0, 0, 0 ),
      dz_par = cms.PSet( 
        dz_par1 = cms.vdouble( 0.4, 0.4, 3.40282346639E38 ),
        dz_par2 = cms.vdouble( 0.35, 0.35, 3.40282346639E38 ),
        dz_exp = cms.vint32( 4, 4, 2147483647 )
      ),
      minNVtxTrk = cms.int32( 3 ),
      maxDz = cms.vdouble( 0.5, 0.2, 3.40282346639E38 ),
      minNdof = cms.vdouble( 1.0E-5, 1.0E-5, 1.0E-5 ),
      maxChi2 = cms.vdouble( 3.40282346639E38, 3.40282346639E38, 3.40282346639E38 ),
      maxChi2n = cms.vdouble( 1.2, 1.0, 0.7 ),
      maxDr = cms.vdouble( 0.5, 0.03, 3.40282346639E38 ),
      minLayers = cms.vint32( 3, 3, 4 )
    )
)
process.hltIter4IterL3FromL1MuonTrackSelectionHighPurity = cms.EDProducer( "TrackCollectionFilterCloner",
    originalSource = cms.InputTag( "hltDisplacedhltIter4CtfWithMaterialTracksForDisplacedTkMuons" ),
    originalMVAVals = cms.InputTag( 'hltIter4IterL3FromL1MuonTrackCutClassifier','MVAValues' ),
    originalQualVals = cms.InputTag( 'hltIter4IterL3FromL1MuonTrackCutClassifier','QualityMasks' ),
    minQuality = cms.string( "highPurity" ),
    copyExtras = cms.untracked.bool( True ),
    copyTrajectories = cms.untracked.bool( False )
)
process.hltIter0MergedWithIter4GlbDisplacedMuons = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIter0IterL3DisplacedMuonTrackSelectionHighPurity','hltDisplacedhltIter4CtfWithMaterialTracksForGlbDisplacedMuons' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0IterL3DisplacedMuonTrackSelectionHighPurity','hltDisplacedhltIter4CtfWithMaterialTracksForGlbDisplacedMuons' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltIter4FromL1MergedWithIter04GlbDisplacedMuons = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIter0MergedWithIter4GlbDisplacedMuons','hltDisplacedhltIter4CtfWithMaterialTracksForDisplacedTkMuons' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIter0MergedWithIter4GlbDisplacedMuons','hltDisplacedhltIter4CtfWithMaterialTracksForDisplacedTkMuons' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltdTksMergedWithOIGlbDisplacedMuons = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3OIGlbDisplacedMuonCtfWithMaterialTracks','hltIter4FromL1MergedWithIter04GlbDisplacedMuons' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3OIGlbDisplacedMuonCtfWithMaterialTracks','hltIter4FromL1MergedWithIter04GlbDisplacedMuons' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltdTksMergedWithOIGlbDisplacedMuonsHighPurity = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3OIDisplacedMuonTrackSelectionHighPurity','hltIter4FromL1MergedWithIter04GlbDisplacedMuons' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3OIDisplacedMuonTrackSelectionHighPurity','hltIter4FromL1MergedWithIter04GlbDisplacedMuons' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltIterL3GlbdTksDisplacedMuons = cms.EDProducer( "L3MuonProducer",
    ServiceParameters = cms.PSet( 
      RPCLayers = cms.bool( True ),
      UseMuonNavigation = cms.untracked.bool( True ),
      Propagators = cms.untracked.vstring( 'hltESPSmartPropagatorAny',
        'SteppingHelixPropagatorAny',
        'hltESPSmartPropagator',
        'hltESPSteppingHelixPropagatorOpposite' )
    ),
    MuonCollectionLabel = cms.InputTag( "hltL2Muons" ),
    TrackLoaderParameters = cms.PSet( 
      MuonSeededTracksInstance = cms.untracked.string( "L2Seeded" ),
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      DoSmoothing = cms.bool( True ),
      SmoothTkTrack = cms.untracked.bool( False ),
      VertexConstraint = cms.bool( False ),
      MuonUpdatorAtVertexParameters = cms.PSet( 
        MaxChi2 = cms.double( 1000000.0 ),
        BeamSpotPositionErrors = cms.vdouble( 0.1, 0.1, 5.3 ),
        Propagator = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
      ),
      PutTkTrackIntoEvent = cms.untracked.bool( False ),
      Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
    ),
    L3TrajBuilderParameters = cms.PSet( 
      PtCut = cms.double( 1.0 ),
      TrackerPropagator = cms.string( "SteppingHelixPropagatorAny" ),
      GlobalMuonTrackMatcher = cms.PSet( 
        Chi2Cut_3 = cms.double( 200.0 ),
        DeltaDCut_2 = cms.double( 10.0 ),
        Eta_threshold = cms.double( 1.2 ),
        Quality_2 = cms.double( 15.0 ),
        DeltaDCut_1 = cms.double( 40.0 ),
        Quality_3 = cms.double( 7.0 ),
        DeltaDCut_3 = cms.double( 15.0 ),
        Quality_1 = cms.double( 20.0 ),
        Pt_threshold1 = cms.double( 0.0 ),
        DeltaRCut_2 = cms.double( 0.2 ),
        DeltaRCut_1 = cms.double( 0.1 ),
        Pt_threshold2 = cms.double( 9.99999999E8 ),
        Chi2Cut_1 = cms.double( 50.0 ),
        Chi2Cut_2 = cms.double( 50.0 ),
        DeltaRCut_3 = cms.double( 1.0 ),
        LocChi2Cut = cms.double( 0.001 ),
        Propagator = cms.string( "hltESPSmartPropagator" ),
        MinPt = cms.double( 1.0 ),
        MinP = cms.double( 2.5 )
      ),
      ScaleTECxFactor = cms.double( -1.0 ),
      tkTrajUseVertex = cms.bool( False ),
      MuonTrackingRegionBuilder = cms.PSet( 
        Rescale_Dz = cms.double( 4.0 ),
        Pt_fixed = cms.bool( False ),
        Eta_fixed = cms.bool( True ),
        Eta_min = cms.double( 0.1 ),
        DeltaZ = cms.double( 24.2 ),
        maxRegions = cms.int32( 2 ),
        EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
        UseVertex = cms.bool( False ),
        Z_fixed = cms.bool( False ),
        PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
        PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
        Rescale_phi = cms.double( 3.0 ),
        DeltaEta = cms.double( 0.2 ),
        precise = cms.bool( True ),
        OnDemand = cms.int32( -1 ),
        EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
        MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
        vertexCollection = cms.InputTag( "pixelVertices" ),
        Pt_min = cms.double( 3.0 ),
        beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
        Phi_fixed = cms.bool( True ),
        DeltaR = cms.double( 0.025 ),
        input = cms.InputTag( "hltL2Muons" ),
        DeltaPhi = cms.double( 0.15 ),
        Phi_min = cms.double( 0.1 ),
        Rescale_eta = cms.double( 3.0 )
      ),
      TrackTransformer = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        RefitDirection = cms.string( "insideOut" ),
        RefitRPCHits = cms.bool( True ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
        Smoother = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" )
      ),
      tkTrajBeamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      RefitRPCHits = cms.bool( True ),
      tkTrajVertex = cms.InputTag( "Notused" ),
      GlbRefitterParameters = cms.PSet( 
        Fitter = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
        DTRecSegmentLabel = cms.InputTag( "hltDt4DSegments" ),
        RefitFlag = cms.bool( True ),
        SkipStation = cms.int32( -1 ),
        Chi2CutRPC = cms.double( 1.0 ),
        PropDirForCosmics = cms.bool( False ),
        CSCRecSegmentLabel = cms.InputTag( "hltCscSegments" ),
        HitThreshold = cms.int32( 1 ),
        DYTthrs = cms.vint32( 30, 15 ),
        TrackerSkipSystem = cms.int32( -1 ),
        RefitDirection = cms.string( "insideOut" ),
        Chi2CutCSC = cms.double( 150.0 ),
        Chi2CutDT = cms.double( 10.0 ),
        RefitRPCHits = cms.bool( True ),
        TrackerSkipSection = cms.int32( -1 ),
        Propagator = cms.string( "hltESPSmartPropagatorAny" ),
        DoPredictionsOnly = cms.bool( False ),
        TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
        MuonHitsOption = cms.int32( 1 ),
        MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
      ),
      PCut = cms.double( 2.5 ),
      tkTrajMaxDXYBeamSpot = cms.double( 9999.0 ),
      TrackerRecHitBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      tkTrajMaxChi2 = cms.double( 9999.0 ),
      MuonRecHitBuilder = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" ),
      ScaleTECyFactor = cms.double( -1.0 ),
      tkTrajLabel = cms.InputTag( "hltdTksMergedWithOIGlbDisplacedMuons" )
    )
)
process.hltIterL3DisplacedMuons = cms.EDProducer( "MuonIdProducer",
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( False ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
      CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( False ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( False ),
      HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( "Notused" ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "Notused" )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
        CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( "Notused" ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "Notused" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltIter4FromL1MergedWithIter04GlbDisplacedMuons" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "Notused" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( "Notused" ),
        CaloTowerCollectionLabel = cms.InputTag( "Notused" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "Notused" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( "Notused" ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "Notused" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    trackDepositName = cms.string( "tracker" ),
    ecalDepositName = cms.string( "ecal" ),
    hcalDepositName = cms.string( "hcal" ),
    hoDepositName = cms.string( "ho" ),
    jetDepositName = cms.string( "jets" ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    ShowerDigiFillerParameters = cms.PSet( 
      cscDigiCollectionLabel = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
      dtDigiCollectionLabel = cms.InputTag( "hltMuonDTDigis" ),
      digiMaxDistanceX = cms.double( 25.0 )
    ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    fillEnergy = cms.bool( False ),
    storeCrossedHcalRecHits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsEta = cms.double( 3.0 ),
    minPt = cms.double( 2.0 ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links' ),
    addExtraSoftMuons = cms.bool( False ),
    fillGlobalTrackRefits = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    inputCollectionLabels = cms.VInputTag( 'hltIter4FromL1MergedWithIter04GlbDisplacedMuons','hltIterL3GlbdTksDisplacedMuons' ),
    fillCaloCompatibility = cms.bool( False ),
    maxAbsPullY = cms.double( 9999.0 ),
    maxAbsDy = cms.double( 9999.0 ),
    minP = cms.double( 0.0 ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDx = cms.double( 3.0 ),
    fillIsolation = cms.bool( False ),
    writeIsoDeposits = cms.bool( False ),
    minNumberOfMatches = cms.int32( 1 ),
    fillMatching = cms.bool( True ),
    fillShowerDigis = cms.bool( False ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    fillGlobalTrackQuality = cms.bool( False ),
    globalTrackQualityInputTag = cms.InputTag( "" ),
    selectHighPurity = cms.bool( False ),
    pvInputTag = cms.InputTag( "" ),
    fillTrackerKink = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    runArbitrationCleaner = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    arbitrateTrackerMuons = cms.bool( True )
)
process.hltIterL3DisplacedMuonsLinks = cms.EDProducer( "MuonLinksProducer",
    inputCollection = cms.InputTag( "hltIterL3DisplacedMuons" )
)
process.hltIterL3TrackerDisplacedMuonCandidates = cms.EDProducer( "L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag( "hltIterL3DisplacedMuons" ),
    DisplacedReconstruction = cms.bool( False )
)
process.hltIterL3DisplacedMuonCandidates = cms.EDProducer( "L3MuonCandidateProducerFromMuons",
    InputObjects = cms.InputTag( "hltIterL3DisplacedMuons" ),
    DisplacedReconstruction = cms.bool( True )
)
process.hltL3dTkfL1DoubleMuf0L2NVf15f7L3DoubleMuNVf10Displaced = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3DisplacedMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 2 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 5 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL3dTkfL1DoubleMuf0L2NVf15f7L3SingleMuNVf16Displaced = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3DisplacedMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 5 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 16.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL1sSingleMuUpt15OR20 = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMu0_Upt15_SQ14_BMTF OR L1_SingleMu0_Upt20_SQ14_BMTF" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreL2Mu50NoVtx3ChaCosmicSeedVetoL3Mu0DxyMax1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL1fL1sSingleMuUpt15OR20L1Filtered0 = cms.EDFilter( "HLTMuonL1TFilter",
    saveTags = cms.bool( True ),
    CandTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    PreviousCandTag = cms.InputTag( "hltL1sSingleMuUpt15OR20" ),
    MaxEta = cms.double( 2.5 ),
    MinPt = cms.double( 0.0 ),
    MaxDeltaR = cms.double( 0.3 ),
    MinN = cms.int32( 1 ),
    CentralBxOnly = cms.bool( True ),
    SelectQualities = cms.vint32(  )
)
process.hltL2fL1sMuSingleMuUpt15OR20L1f0L2NoVtx50Q3ChaCosmicSeed = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sSingleMuUpt15OR20L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2CosmicMuons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.0 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 3 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL3fMuonL1f0CosmicL2NV3Chaf50L3NVf0Veto1PromptSimple = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 1.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreL2Mu50NoVtx3ChaVetoL3Mu0DxyMax1cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1sSingleMuUpt15OR20L1f0L2NoVtx50Q3Cha = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sSingleMuUpt15OR20L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.0 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 3 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltL3fMuL1f0Upt15OR20ppL2NV3Chaf50L3NVf0VetoDxyMax1cm = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sSingleMuUpt15OR20L1f0L2NoVtx50Q3Cha" ),
    L1CandTag = cms.InputTag( "" ),
    inputMuonCollection = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 1.0 ),
    MinDXYBeamSpot = cms.double( 0.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( -1 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 0.0 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3LinksNoVtx" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreL3Mu30NoVtxDxyMin0p01cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1Muf0L2MuNoVtxFiltered27 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sSingleMuUpt15OR20L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 27.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3fL1Muf0L2NVf27L3MuNVf30DxyMin0p01 = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreL3Mu50NoVtxDxyMin0p01cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1Muf0L2MuNoVtxFiltered47 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sSingleMuUpt15OR20L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 47.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3fL1Muf0L2NVf47L3MuNVf50DxyMin0p01 = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL3NoFiltersNoVtxMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 50.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreL3dTksMu10NoVtxDxyMin0p01cm = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1DoubleMuf0L2SingleMuNoVtxFiltered7 = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 12 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 7.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltL3fL1f0L2f0Filtered10GlbDisplaceddTks = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3DisplacedMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    MinNhits = cms.int32( 5 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.01 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltPreDisplacedMu24MediumChargedIsoDisplacedPFTauHPS24 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2fL1SingleMuf0L2NoVtxFiltered20DisplTau = cms.EDFilter( "HLTMuonL2FromL1TPreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltL2MuonCandidatesNoVtx" ),
    PreviousCandTag = cms.InputTag( "hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0" ),
    SeedMapTag = cms.InputTag( "hltL2Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.5 ),
    AbsEtaBins = cms.vdouble( 5.0 ),
    MinNstations = cms.vint32( 0 ),
    MinNhits = cms.vint32( 0 ),
    CutOnChambers = cms.bool( True ),
    MinNchambers = cms.vint32( 0 ),
    MaxDr = cms.double( 9999.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 20.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( True )
)
process.hltCaloTowerL1sTauVeryBigORSeededRegional = cms.EDProducer( "CaloTowerFromL1TSeededCreatorForTauHLT",
    TauTrigger = cms.InputTag( "hltL1sTauVeryBigOR" ),
    towers = cms.InputTag( "hltTowerMakerForAll" ),
    UseTowersInCone = cms.double( 0.8 ),
    minimumE = cms.double( 0.8 ),
    minimumEt = cms.double( 0.5 ),
    verbose = cms.untracked.int32( 0 )
)
process.hltAkIsoTauL1sTauVeryBigORSeededRegional = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 5 ),
    src = cms.InputTag( "hltCaloTowerL1sTauVeryBigORSeededRegional" ),
    srcPVs = cms.InputTag( "NotUsed" ),
    jetType = cms.string( "CaloJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.2 ),
    inputEtMin = cms.double( 0.3 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 1.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( False ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltL2TauJetsL1TauSeeded = cms.EDProducer( "L2TauJetsMerger",
    JetSrc = cms.VInputTag( 'hltAkIsoTauL1sTauVeryBigORSeededRegional' ),
    EtMin = cms.double( 20.0 )
)
process.hltDisplMu24L2Tau22eta2p2 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL2TauJetsL1TauSeeded" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 22.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.2 ),
    MinN = cms.int32( 1 )
)
process.hltL2TausForPixelIsolationL1TauSeeded = cms.EDFilter( "CaloJetSelector",
    src = cms.InputTag( "hltL2TauJetsL1TauSeeded" ),
    filter = cms.bool( False ),
    cut = cms.string( "pt > 20 & abs(eta) < 2.5" )
)
process.hltFakePixelVerticesFilter = cms.EDFilter( "VertexSelector",
    src = cms.InputTag( "hltTrimmedPixelVertices" ),
    cut = cms.string( "!isFake" ),
    filter = cms.bool( True )
)
process.hltL2TauPixelIsoTagProducerL1TauSeededGlob = cms.EDProducer( "L2TauPixelIsoTagProducer",
    JetSrc = cms.InputTag( "hltL2TausForPixelIsolationL1TauSeeded" ),
    BeamSpotSrc = cms.InputTag( "hltOnlineBeamSpot" ),
    VertexSrc = cms.InputTag( "hltTrimmedPixelVertices" ),
    MaxNumberPV = cms.int32( 1 ),
    IsoConeMax = cms.double( 0.4 ),
    IsoConeMin = cms.double( 0.15 ),
    TrackMinPt = cms.double( 0.9 ),
    TrackMinNHits = cms.int32( 3 ),
    TrackMaxNChi2 = cms.double( 1000.0 ),
    TrackPVMaxDZ = cms.double( 0.1 ),
    TrackMaxDxy = cms.double( 0.2 ),
    TrackSrc = cms.InputTag( "" )
)
process.hltL2TauTightIsoFilterL1TauSeededGlob = cms.EDFilter( "HLTCaloJetTag",
    saveTags = cms.bool( True ),
    Jets = cms.InputTag( "hltL2TausForPixelIsolationL1TauSeeded" ),
    JetTags = cms.InputTag( "hltL2TauPixelIsoTagProducerL1TauSeededGlob" ),
    MinTag = cms.double( 0.0 ),
    MaxTag = cms.double( 2.0 ),
    MinJets = cms.int32( 1 ),
    MatchJetsByDeltaR = cms.bool( False ),
    MaxJetDeltaR = cms.double( 0.1 ),
    TriggerType = cms.int32( 84 )
)
process.hltL2TauJetsTightIsoL1TauSeededGlob = cms.EDProducer( "HLTCaloJetCollectionProducer",
    HLTObject = cms.InputTag( "hltL2TauTightIsoFilterL1TauSeededGlob" ),
    TriggerTypes = cms.vint32( 84 )
)
process.hltDisplMuL2GlobIsoTau22eta2p2 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL2TauJetsTightIsoL1TauSeededGlob" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 22.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.2 ),
    MinN = cms.int32( 1 )
)
process.hltL3fSingleMuL1f0L2NVf20L3GlbDispl24 = cms.EDFilter( "HLTMuonL3SimplePreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3DisplacedMuonCandidates" ),
    PreviousCandTag = cms.InputTag( "" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 2.1 ),
    MinNhits = cms.int32( 0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( 0.0 ),
    MinNmuonHits = cms.int32( 12 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    MatchToPreviousCand = cms.bool( False )
)
process.hltDisplacedhltIter4ClustersRefRemovalForTau = cms.EDProducer( "TrackClusterRemover",
    trajectories = cms.InputTag( "hltMergedTracks" ),
    trackClassifier = cms.InputTag( '','QualityMasks' ),
    pixelClusters = cms.InputTag( "hltSiPixelClusters" ),
    stripClusters = cms.InputTag( "hltSiStripRawToClustersFacility" ),
    oldClusterRemovalInfo = cms.InputTag( "" ),
    TrackQuality = cms.string( "highPurity" ),
    maxChi2 = cms.double( 16.0 ),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32( 0 ),
    overrideTrkQuals = cms.InputTag( "" )
)
process.hltDisplacedhltIter4MaskedMeasurementTrackerEventForTau = cms.EDProducer( "MaskedMeasurementTrackerEventProducer",
    src = cms.InputTag( "hltMeasurementTrackerEvent" ),
    OnDemand = cms.bool( False ),
    clustersToSkip = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForTau" )
)
process.hltDisplacedhltIter4PixelLessLayerTripletsForTau = cms.EDProducer( "SeedingLayersEDProducer",
    layerList = cms.vstring( 'TIB1+TIB2+MTIB3',
      'TIB1+TIB2+MTID1_pos',
      'TIB1+TIB2+MTID1_neg',
      'TID1_pos+TID2_pos+TID3_pos',
      'TID1_neg+TID2_neg+TID3_neg',
      'TID1_pos+TID2_pos+MTID3_pos',
      'TID1_neg+TID2_neg+MTID3_neg' ),
    BPix = cms.PSet(  ),
    FPix = cms.PSet(  ),
    TIB = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForTau" ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
    ),
    TID = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 1 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForTau" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 2 )
    ),
    TOB = cms.PSet(  ),
    TEC = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 1 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForTau" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 2 )
    ),
    MTIB = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForTau" ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
    ),
    MTID = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 3 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForTau" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 3 )
    ),
    MTOB = cms.PSet(  ),
    MTEC = cms.PSet( 
      TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
      minRing = cms.int32( 3 ),
      skipClusters = cms.InputTag( "hltDisplacedhltIter4ClustersRefRemovalForTau" ),
      useRingSlector = cms.bool( True ),
      clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
      maxRing = cms.int32( 3 )
    )
)
process.hltDisplacedhltIter4PFlowPixelLessTrackingRegionsForTau = cms.EDProducer( "CandidateSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet( 
      vertexCollection = cms.InputTag( "hltTrimmedPixelVertices" ),
      zErrorVetex = cms.double( 12.0 ),
      beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
      zErrorBeamSpot = cms.double( 15.0 ),
      maxNVertices = cms.int32( 10 ),
      maxNRegions = cms.int32( 100 ),
      nSigmaZVertex = cms.double( 3.0 ),
      nSigmaZBeamSpot = cms.double( 3.0 ),
      ptMin = cms.double( 1.2 ),
      mode = cms.string( "VerticesFixed" ),
      input = cms.InputTag( "hltL2TausForPixelIsolationL1TauSeeded" ),
      searchOpt = cms.bool( True ),
      whereToUseMeasurementTracker = cms.string( "ForSiStrips" ),
      originRadius = cms.double( 1.0 ),
      measurementTrackerName = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForTau" ),
      precise = cms.bool( True ),
      deltaEta = cms.double( 0.3 ),
      deltaPhi = cms.double( 0.5 )
    )
)
process.hltDisplacedhltIter4PFlowPixelLessClusterCheckForTau = cms.EDProducer( "ClusterCheckerEDProducer",
    doClusterCheck = cms.bool( False ),
    MaxNumberOfStripClusters = cms.uint32( 800000 ),
    ClusterCollectionLabel = cms.InputTag( "hltMeasurementTrackerEvent" ),
    MaxNumberOfPixelClusters = cms.uint32( 40000 ),
    PixelClusterCollectionLabel = cms.InputTag( "hltSiPixelClusters" ),
    cut = cms.string( "" ),
    silentClusterCheck = cms.untracked.bool( False )
)
process.hltDisplacedhltIter4PFlowPixelLessHitDoubletsForTau = cms.EDProducer( "HitPairEDProducer",
    seedingLayers = cms.InputTag( "hltDisplacedhltIter4PixelLessLayerTripletsForTau" ),
    trackingRegions = cms.InputTag( "hltDisplacedhltIter4PFlowPixelLessTrackingRegionsForTau" ),
    trackingRegionsSeedingLayers = cms.InputTag( "" ),
    clusterCheck = cms.InputTag( "hltDisplacedhltIter4PFlowPixelLessClusterCheckForTau" ),
    produceSeedingHitSets = cms.bool( False ),
    produceIntermediateHitDoublets = cms.bool( True ),
    maxElement = cms.uint32( 0 ),
    maxElementTotal = cms.uint32( 50000000 ),
    putEmptyIfMaxElementReached = cms.bool( False ),
    layerPairs = cms.vuint32( 0 )
)
process.hltDisplacedhltIter4PFlowPixelLessHitTripletsForTau = cms.EDProducer( "MultiHitFromChi2EDProducer",
    doublets = cms.InputTag( "hltDisplacedhltIter4PFlowPixelLessHitDoubletsForTau" ),
    maxElement = cms.uint32( 100000 ),
    useFixedPreFiltering = cms.bool( False ),
    phiPreFiltering = cms.double( 0.3 ),
    extraHitRPhitolerance = cms.double( 0.0 ),
    extraHitRZtolerance = cms.double( 0.0 ),
    extraZKDBox = cms.double( 0.2 ),
    extraRKDBox = cms.double( 0.2 ),
    extraPhiKDBox = cms.double( 0.005 ),
    fnSigmaRZ = cms.double( 2.0 ),
    refitHits = cms.bool( True ),
    ClusterShapeHitFilterName = cms.string( "ClusterShapeHitFilter" ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    maxChi2 = cms.double( 5.0 ),
    chi2VsPtCut = cms.bool( True ),
    pt_interv = cms.vdouble( 0.4, 0.7, 1.0, 2.0 ),
    chi2_cuts = cms.vdouble( 3.0, 4.0, 5.0, 5.0 ),
    detIdsToDebug = cms.vint32( 0, 0, 0 )
)
process.hltDisplacedhltIter4PFlowPixelLessSeedsForTau = cms.EDProducer( "SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    seedingHitSets = cms.InputTag( "hltDisplacedhltIter4PFlowPixelLessHitTripletsForTau" ),
    propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
    SeedMomentumForBOFF = cms.double( 5.0 ),
    OriginTransverseErrorMultiplier = cms.double( 1.0 ),
    MinOneOverPtError = cms.double( 1.0 ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    magneticField = cms.string( "ParabolicMf" ),
    forceKinematicWithRegionDirection = cms.bool( False ),
    SeedComparitorPSet = cms.PSet( 
      FilterStripHits = cms.bool( False ),
      FilterPixelHits = cms.bool( False ),
      ClusterShapeHitFilterName = cms.string( "ClusterShapeHitFilter" ),
      FilterAtHelixStage = cms.bool( True ),
      ComponentName = cms.string( "PixelClusterShapeSeedComparitor" )
    )
)
process.hltDisplacedhltIter4PFlowCkfTrackCandidatesForTau = cms.EDProducer( "CkfTrackCandidateMaker",
    cleanTrajectoryAfterInOut = cms.bool( False ),
    doSeedingRegionRebuilding = cms.bool( False ),
    onlyPixelHitsForSeedCleaner = cms.bool( False ),
    reverseTrajectories = cms.bool( False ),
    useHitsSplitting = cms.bool( False ),
    MeasurementTrackerEvent = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForTau" ),
    src = cms.InputTag( "hltDisplacedhltIter4PFlowPixelLessSeedsForTau" ),
    clustersToSkip = cms.InputTag( "" ),
    phase2clustersToSkip = cms.InputTag( "" ),
    TrajectoryBuilderPSet = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryBuilderIT" ) ),
    TransientInitialStateEstimatorParameters = cms.PSet( 
      propagatorAlongTISE = cms.string( "PropagatorWithMaterialParabolicMf" ),
      numberMeasurementsForFit = cms.int32( 4 ),
      propagatorOppositeTISE = cms.string( "PropagatorWithMaterialParabolicMfOpposite" )
    ),
    numHitsForSeedCleaner = cms.int32( 4 ),
    NavigationSchool = cms.string( "SimpleNavigationSchool" ),
    RedundantSeedCleaner = cms.string( "CachingSeedCleanerBySharedInput" ),
    TrajectoryCleaner = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
    maxNSeeds = cms.uint32( 100000 ),
    maxSeedsBeforeCleaning = cms.uint32( 1000 )
)
process.hltDisplacedhltIter4PFlowCtfWithMaterialTracksForTau = cms.EDProducer( "TrackProducer",
    useSimpleMF = cms.bool( True ),
    SimpleMagneticField = cms.string( "ParabolicMf" ),
    src = cms.InputTag( "hltDisplacedhltIter4PFlowCkfTrackCandidatesForTau" ),
    clusterRemovalInfo = cms.InputTag( "" ),
    beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
    Fitter = cms.string( "hltESPFittingSmootherIT" ),
    useHitsSplitting = cms.bool( False ),
    alias = cms.untracked.string( "ctfWithMaterialTracks" ),
    TrajectoryInEvent = cms.bool( False ),
    TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
    AlgorithmName = cms.string( "hltIterX" ),
    Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
    GeometricInnerState = cms.bool( True ),
    NavigationSchool = cms.string( "" ),
    MeasurementTracker = cms.string( "" ),
    MeasurementTrackerEvent = cms.InputTag( "hltDisplacedhltIter4MaskedMeasurementTrackerEventForTau" )
)
process.hltDisplacedhltIter4PFlowTrackSelectionHighPurityForTau = cms.EDProducer( "AnalyticalTrackSelector",
    src = cms.InputTag( "hltDisplacedhltIter4PFlowCtfWithMaterialTracksForTau" ),
    keepAllTracks = cms.bool( False ),
    beamspot = cms.InputTag( "hltOnlineBeamSpot" ),
    useVertices = cms.bool( True ),
    useVtxError = cms.bool( False ),
    vertices = cms.InputTag( "hltTrimmedPixelVertices" ),
    vtxNumber = cms.int32( -1 ),
    vertexCut = cms.string( "tracksSize>=3" ),
    copyTrajectories = cms.untracked.bool( False ),
    copyExtras = cms.untracked.bool( True ),
    qualityBit = cms.string( "highPurity" ),
    chi2n_par = cms.double( 0.25 ),
    chi2n_no1Dmod_par = cms.double( 9999.0 ),
    res_par = cms.vdouble( 0.003, 0.001 ),
    d0_par1 = cms.vdouble( 1.0, 4.0 ),
    dz_par1 = cms.vdouble( 1.0, 4.0 ),
    d0_par2 = cms.vdouble( 1.0, 4.0 ),
    dz_par2 = cms.vdouble( 1.0, 4.0 ),
    applyAdaptedPVCuts = cms.bool( True ),
    max_d0 = cms.double( 100.0 ),
    max_z0 = cms.double( 100.0 ),
    nSigmaZ = cms.double( 3.0 ),
    minNumberLayers = cms.uint32( 5 ),
    minNumber3DLayers = cms.uint32( 0 ),
    maxNumberLostLayers = cms.uint32( 0 ),
    minHitsToBypassChecks = cms.uint32( 20 ),
    applyAbsCutsIfNoPV = cms.bool( False ),
    max_d0NoPV = cms.double( 100.0 ),
    max_z0NoPV = cms.double( 100.0 ),
    max_relpterr = cms.double( 9999.0 ),
    min_nhits = cms.uint32( 0 ),
    max_minMissHitOutOrIn = cms.int32( 99 ),
    max_lostHitFraction = cms.double( 1.0 ),
    max_eta = cms.double( 9999.0 ),
    min_eta = cms.double( -9999.0 )
)
process.hltIter4MergedWithIter0ForTau = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltMergedTracks','hltDisplacedhltIter4PFlowTrackSelectionHighPurityForTau' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltMergedTracks','hltDisplacedhltIter4PFlowTrackSelectionHighPurityForTau' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltPFMuonMergingForDisplTau = cms.EDProducer( "TrackListMerger",
    ShareFrac = cms.double( 0.19 ),
    FoundHitBonus = cms.double( 5.0 ),
    LostHitPenalty = cms.double( 20.0 ),
    MinPT = cms.double( 0.05 ),
    Epsilon = cms.double( -0.001 ),
    MaxNormalizedChisq = cms.double( 1000.0 ),
    MinFound = cms.int32( 3 ),
    TrackProducers = cms.VInputTag( 'hltIterL3MuonTracks','hltIter4MergedWithIter0ForTau' ),
    hasSelector = cms.vint32( 0, 0 ),
    indivShareFrac = cms.vdouble( 1.0, 1.0 ),
    selectedTrackQuals = cms.VInputTag( 'hltIterL3MuonTracks','hltIter4MergedWithIter0ForTau' ),
    setsToMerge = cms.VPSet( 
      cms.PSet(  pQual = cms.bool( False ),
        tLists = cms.vint32( 0, 1 )
      )
    ),
    trackAlgoPriorityOrder = cms.string( "hltESPTrackAlgoPriorityOrder" ),
    allowFirstHitShare = cms.bool( True ),
    newQuality = cms.string( "confirmed" ),
    copyExtras = cms.untracked.bool( True ),
    writeOnlyTrkQuals = cms.bool( False ),
    copyMVA = cms.bool( False )
)
process.hltMuonLinksForDisplTau = cms.EDProducer( "MuonLinksProducerForHLT",
    InclusiveTrackerTrackCollection = cms.InputTag( "hltPFMuonMergingForDisplTau" ),
    LinkCollection = cms.InputTag( "hltL3MuonsIterL3Links" ),
    ptMin = cms.double( 2.5 ),
    pMin = cms.double( 2.5 ),
    shareHitFraction = cms.double( 0.8 )
)
process.hltMuonsForDisplTau = cms.EDProducer( "MuonIdProducer",
    MuonCaloCompatibility = cms.PSet( 
      delta_eta = cms.double( 0.02 ),
      delta_phi = cms.double( 0.02 ),
      allSiPMHO = cms.bool( False ),
      MuonTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root" ),
      PionTemplateFileName = cms.FileInPath( "RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root" )
    ),
    TrackAssociatorParameters = cms.PSet( 
      useMuon = cms.bool( True ),
      truthMatch = cms.bool( False ),
      usePreshower = cms.bool( False ),
      dRPreshowerPreselection = cms.double( 0.2 ),
      muonMaxDistanceSigmaY = cms.double( 0.0 ),
      useEcal = cms.bool( True ),
      muonMaxDistanceSigmaX = cms.double( 0.0 ),
      dRMuon = cms.double( 9999.0 ),
      dREcal = cms.double( 9999.0 ),
      CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
      DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
      EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
      CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
      propagateAllDirections = cms.bool( True ),
      muonMaxDistanceY = cms.double( 5.0 ),
      useHO = cms.bool( True ),
      muonMaxDistanceX = cms.double( 5.0 ),
      trajectoryUncertaintyTolerance = cms.double( -1.0 ),
      useHcal = cms.bool( True ),
      HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
      accountForTrajectoryChangeCalo = cms.bool( False ),
      dREcalPreselection = cms.double( 0.05 ),
      useCalo = cms.bool( False ),
      dRMuonPreselection = cms.double( 0.2 ),
      EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
      dRHcal = cms.double( 9999.0 ),
      dRHcalPreselection = cms.double( 0.2 ),
      HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
    ),
    CaloExtractorPSet = cms.PSet( 
      DR_Veto_H = cms.double( 0.1 ),
      CenterConeOnCalIntersection = cms.bool( False ),
      NoiseTow_EE = cms.double( 0.15 ),
      Noise_EB = cms.double( 0.025 ),
      Noise_HE = cms.double( 0.2 ),
      DR_Veto_E = cms.double( 0.07 ),
      NoiseTow_EB = cms.double( 0.04 ),
      Noise_EE = cms.double( 0.1 ),
      UseRecHitsFlag = cms.bool( False ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "Cal" ),
      Noise_HO = cms.double( 0.2 ),
      DR_Veto_HO = cms.double( 0.1 ),
      Threshold_H = cms.double( 0.5 ),
      PrintTimeReport = cms.untracked.bool( False ),
      Threshold_E = cms.double( 0.2 ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "CaloExtractorByAssociator" ),
      Threshold_HO = cms.double( 0.5 ),
      DepositInstanceLabels = cms.vstring( 'ecal',
        'hcal',
        'ho' ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 1.0 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 1.0 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 1.0 ),
        dRHcalPreselection = cms.double( 1.0 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Noise_HB = cms.double( 0.2 )
    ),
    TrackExtractorPSet = cms.PSet( 
      Diff_z = cms.double( 0.2 ),
      inputTrackCollection = cms.InputTag( "hltPFMuonMergingForDisplTau" ),
      Chi2Ndof_Max = cms.double( 1.0E64 ),
      BeamSpotLabel = cms.InputTag( "hltOnlineBeamSpot" ),
      DR_Veto = cms.double( 0.01 ),
      Pt_Min = cms.double( -1.0 ),
      DR_Max = cms.double( 1.0 ),
      DepositLabel = cms.untracked.string( "" ),
      NHits_Min = cms.uint32( 0 ),
      Chi2Prob_Min = cms.double( -1.0 ),
      Diff_r = cms.double( 0.1 ),
      BeamlineOption = cms.string( "BeamSpotFromEvent" ),
      ComponentName = cms.string( "TrackExtractor" )
    ),
    JetExtractorPSet = cms.PSet( 
      JetCollectionLabel = cms.InputTag( "hltAK4CaloJetsPFEt5" ),
      DR_Veto = cms.double( 0.1 ),
      DR_Max = cms.double( 1.0 ),
      ExcludeMuonVeto = cms.bool( True ),
      PrintTimeReport = cms.untracked.bool( False ),
      PropagatorName = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
      ComponentName = cms.string( "JetExtractor" ),
      ServiceParameters = cms.PSet( 
        RPCLayers = cms.bool( False ),
        UseMuonNavigation = cms.untracked.bool( False ),
        Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
      ),
      TrackAssociatorParameters = cms.PSet( 
        useMuon = cms.bool( False ),
        truthMatch = cms.bool( False ),
        usePreshower = cms.bool( False ),
        dRPreshowerPreselection = cms.double( 0.2 ),
        muonMaxDistanceSigmaY = cms.double( 0.0 ),
        useEcal = cms.bool( False ),
        muonMaxDistanceSigmaX = cms.double( 0.0 ),
        dRMuon = cms.double( 9999.0 ),
        dREcal = cms.double( 0.5 ),
        CSCSegmentCollectionLabel = cms.InputTag( "hltCscSegments" ),
        DTRecSegment4DCollectionLabel = cms.InputTag( "hltDt4DSegments" ),
        EBRecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEB' ),
        CaloTowerCollectionLabel = cms.InputTag( "hltTowerMakerForAll" ),
        propagateAllDirections = cms.bool( True ),
        muonMaxDistanceY = cms.double( 5.0 ),
        useHO = cms.bool( False ),
        muonMaxDistanceX = cms.double( 5.0 ),
        trajectoryUncertaintyTolerance = cms.double( -1.0 ),
        useHcal = cms.bool( False ),
        HBHERecHitCollectionLabel = cms.InputTag( "hltHbhereco" ),
        accountForTrajectoryChangeCalo = cms.bool( False ),
        dREcalPreselection = cms.double( 0.5 ),
        useCalo = cms.bool( True ),
        dRMuonPreselection = cms.double( 0.2 ),
        EERecHitCollectionLabel = cms.InputTag( 'hltEcalRecHit','EcalRecHitsEE' ),
        dRHcal = cms.double( 0.5 ),
        dRHcalPreselection = cms.double( 0.5 ),
        HORecHitCollectionLabel = cms.InputTag( "hltHoreco" )
      ),
      Threshold = cms.double( 5.0 )
    ),
    trackDepositName = cms.string( "tracker" ),
    ecalDepositName = cms.string( "ecal" ),
    hcalDepositName = cms.string( "hcal" ),
    hoDepositName = cms.string( "ho" ),
    jetDepositName = cms.string( "jets" ),
    TimingFillerParameters = cms.PSet( 
      DTTimingParameters = cms.PSet( 
        HitError = cms.double( 6.0 ),
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        DoWireCorr = cms.bool( False ),
        RequireBothProjections = cms.bool( False ),
        DTTimeOffset = cms.double( 2.7 ),
        PruneCut = cms.double( 10000.0 ),
        DTsegments = cms.InputTag( "hltDt4DSegments" ),
        UseSegmentT0 = cms.bool( False ),
        HitsMin = cms.int32( 5 ),
        DropTheta = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      UseCSC = cms.bool( True ),
      CSCTimingParameters = cms.PSet( 
        MatchParameters = cms.PSet( 
          TightMatchDT = cms.bool( False ),
          DTradius = cms.double( 0.01 ),
          TightMatchCSC = cms.bool( True ),
          CSCsegments = cms.InputTag( "hltCscSegments" ),
          DTsegments = cms.InputTag( "hltDt4DSegments" )
        ),
        debug = cms.bool( False ),
        CSCWireTimeOffset = cms.double( 0.0 ),
        CSCStripError = cms.double( 7.0 ),
        CSCTimeOffset = cms.double( 0.0 ),
        CSCWireError = cms.double( 8.6 ),
        PruneCut = cms.double( 100.0 ),
        CSCsegments = cms.InputTag( "hltCscSegments" ),
        UseStripTime = cms.bool( True ),
        CSCStripTimeOffset = cms.double( 0.0 ),
        UseWireTime = cms.bool( True ),
        ServiceParameters = cms.PSet( 
          RPCLayers = cms.bool( True ),
          Propagators = cms.untracked.vstring( 'hltESPFastSteppingHelixPropagatorAny' )
        )
      ),
      ErrorDT = cms.double( 6.0 ),
      EcalEnergyCut = cms.double( 0.4 ),
      UseECAL = cms.bool( True ),
      ErrorEB = cms.double( 2.085 ),
      UseDT = cms.bool( True ),
      ErrorEE = cms.double( 6.95 ),
      ErrorCSC = cms.double( 7.4 )
    ),
    ShowerDigiFillerParameters = cms.PSet( 
      cscDigiCollectionLabel = cms.InputTag( 'hltMuonCSCDigis','MuonCSCStripDigi' ),
      dtDigiCollectionLabel = cms.InputTag( "hltMuonDTDigis" ),
      digiMaxDistanceX = cms.double( 25.0 )
    ),
    TrackerKinkFinderParameters = cms.PSet( 
      usePosition = cms.bool( False ),
      diagonalOnly = cms.bool( False )
    ),
    fillEnergy = cms.bool( True ),
    storeCrossedHcalRecHits = cms.bool( False ),
    maxAbsPullX = cms.double( 4.0 ),
    maxAbsEta = cms.double( 3.0 ),
    minPt = cms.double( 10.0 ),
    inputCollectionTypes = cms.vstring( 'inner tracks',
      'links',
      'outer tracks' ),
    addExtraSoftMuons = cms.bool( False ),
    fillGlobalTrackRefits = cms.bool( False ),
    debugWithTruthMatching = cms.bool( False ),
    inputCollectionLabels = cms.VInputTag( 'hltPFMuonMergingForDisplTau','hltMuonLinksForDisplTau','hltL2Muons' ),
    fillCaloCompatibility = cms.bool( True ),
    maxAbsPullY = cms.double( 9999.0 ),
    maxAbsDy = cms.double( 9999.0 ),
    minP = cms.double( 10.0 ),
    minPCaloMuon = cms.double( 1.0E9 ),
    maxAbsDx = cms.double( 3.0 ),
    fillIsolation = cms.bool( True ),
    writeIsoDeposits = cms.bool( False ),
    minNumberOfMatches = cms.int32( 1 ),
    fillMatching = cms.bool( True ),
    fillShowerDigis = cms.bool( False ),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double( 200.0 ),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double( 2.0 ),
    fillGlobalTrackQuality = cms.bool( False ),
    globalTrackQualityInputTag = cms.InputTag( "" ),
    selectHighPurity = cms.bool( False ),
    pvInputTag = cms.InputTag( "" ),
    fillTrackerKink = cms.bool( False ),
    minCaloCompatibility = cms.double( 0.6 ),
    runArbitrationCleaner = cms.bool( False ),
    arbitrationCleanerOptions = cms.PSet( 
      OverlapDTheta = cms.double( 0.02 ),
      Overlap = cms.bool( True ),
      Clustering = cms.bool( True ),
      ME1a = cms.bool( True ),
      ClusterDTheta = cms.double( 0.02 ),
      ClusterDPhi = cms.double( 0.6 ),
      OverlapDPhi = cms.double( 0.0786 )
    ),
    arbitrateTrackerMuons = cms.bool( False )
)
process.hltLightPFTracksForDisplTaus = cms.EDProducer( "LightPFTrackProducer",
    TrackQuality = cms.string( "none" ),
    UseQuality = cms.bool( False ),
    TkColList = cms.VInputTag( 'hltPFMuonMergingForDisplTau' )
)
process.hltParticleFlowBlockForDisplTaus = cms.EDProducer( "PFBlockProducer",
    verbose = cms.untracked.bool( False ),
    debug = cms.untracked.bool( False ),
    elementImporters = cms.VPSet( 
      cms.PSet(  muonSrc = cms.InputTag( "hltMuonsForDisplTau" ),
        cleanBadConvertedBrems = cms.bool( False ),
        muonMaxDPtOPt = cms.double( 1.0 ),
        source = cms.InputTag( "hltLightPFTracksForDisplTaus" ),
        NHitCuts_byTrackAlgo = cms.vuint32( 3, 3, 3, 3, 3, 3 ),
        vetoEndcap = cms.bool( False ),
        useIterativeTracking = cms.bool( False ),
        importerName = cms.string( "GeneralTracksImporter" ),
        DPtOverPtCuts_byTrackAlgo = cms.vdouble( 20.0, 20.0, 20.0, 20.0, 20.0, 20.0 ),
        trackQuality = cms.string( "highPurity" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterECALUnseeded" ),
        importerName = cms.string( "ECALClusterImporter" ),
        BCtoPFCMap = cms.InputTag( "" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterHCAL" ),
        importerName = cms.string( "GenericClusterImporter" )
      ),
      cms.PSet(  source = cms.InputTag( "hltParticleFlowClusterHF" ),
        importerName = cms.string( "GenericClusterImporter" )
      )
    ),
    linkDefinitions = cms.VPSet( 
      cms.PSet(  linkType = cms.string( "TRACK:ECAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "TrackAndECALLinker" )
      ),
      cms.PSet(  trajectoryLayerExit = cms.string( "HCALExit" ),
        trajectoryLayerEntrance = cms.string( "HCALEntrance" ),
        nMaxHcalLinksPerTrack = cms.int32( 1 ),
        linkType = cms.string( "TRACK:HCAL" ),
        useKDTree = cms.bool( True ),
        linkerName = cms.string( "TrackAndHCALLinker" )
      ),
      cms.PSet(  minAbsEtaEcal = cms.double( 2.5 ),
        linkType = cms.string( "ECAL:HCAL" ),
        useKDTree = cms.bool( False ),
        linkerName = cms.string( "ECALAndHCALLinker" )
      ),
      cms.PSet(  linkType = cms.string( "HFEM:HFHAD" ),
        useKDTree = cms.bool( False ),
        linkerName = cms.string( "HFEMAndHFHADLinker" )
      )
    )
)
process.hltParticleFlowForDisplTaus = cms.EDProducer( "PFProducer",
    verbose = cms.untracked.bool( False ),
    debug = cms.untracked.bool( False ),
    blocks = cms.InputTag( "hltParticleFlowBlockForDisplTaus" ),
    muons = cms.InputTag( "hltMuonsForDisplTau" ),
    postMuonCleaning = cms.bool( True ),
    vetoEndcap = cms.bool( False ),
    vertexCollection = cms.InputTag( "hltPixelVertices" ),
    useVerticesForNeutral = cms.bool( True ),
    useHO = cms.bool( False ),
    PFEGammaCandidates = cms.InputTag( "particleFlowEGamma" ),
    GedElectronValueMap = cms.InputTag( "gedGsfElectronsTmp" ),
    GedPhotonValueMap = cms.InputTag( 'tmpGedPhotons','valMapPFEgammaCandToPhoton' ),
    useEGammaElectrons = cms.bool( False ),
    egammaElectrons = cms.InputTag( "" ),
    useEGammaFilters = cms.bool( False ),
    useProtectionsForJetMET = cms.bool( True ),
    PFEGammaFiltersParameters = cms.PSet( 
      electron_missinghits = cms.uint32( 1 ),
      electron_protectionsForJetMET = cms.PSet( 
        maxEeleOverPoutRes = cms.double( 0.5 ),
        maxEleHcalEOverEcalE = cms.double( 0.1 ),
        maxEcalEOverPRes = cms.double( 0.2 ),
        maxHcalEOverP = cms.double( 1.0 ),
        maxE = cms.double( 50.0 ),
        maxTrackPOverEele = cms.double( 1.0 ),
        maxDPhiIN = cms.double( 0.1 ),
        maxEcalEOverP_2 = cms.double( 0.2 ),
        maxEcalEOverP_1 = cms.double( 0.5 ),
        maxEeleOverPout = cms.double( 0.2 ),
        maxHcalEOverEcalE = cms.double( 0.1 ),
        maxHcalE = cms.double( 10.0 ),
        maxNtracks = cms.double( 3.0 )
      ),
      photon_MinEt = cms.double( 10.0 ),
      electron_ecalDrivenHademPreselCut = cms.double( 0.15 ),
      electron_protectionsForBadHcal = cms.PSet( 
        dEta = cms.vdouble( 0.0064, 0.01264 ),
        dPhi = cms.vdouble( 0.0547, 0.0394 ),
        enableProtections = cms.bool( False ),
        full5x5_sigmaIetaIeta = cms.vdouble( 0.0106, 0.0387 ),
        eInvPInv = cms.vdouble( 0.184, 0.0721 )
      ),
      photon_protectionsForBadHcal = cms.PSet( 
        enableProtections = cms.bool( False ),
        solidConeTrkIsoOffset = cms.double( 10.0 ),
        solidConeTrkIsoSlope = cms.double( 0.3 )
      ),
      electron_iso_mva_barrel = cms.double( -0.1875 ),
      electron_iso_mva_endcap = cms.double( -0.1075 ),
      photon_SigmaiEtaiEta_endcap = cms.double( 0.034 ),
      photon_SigmaiEtaiEta_barrel = cms.double( 0.0125 ),
      photon_HoE = cms.double( 0.05 ),
      electron_iso_combIso_endcap = cms.double( 10.0 ),
      electron_iso_pt = cms.double( 10.0 ),
      photon_protectionsForJetMET = cms.PSet( 
        sumPtTrackIsoSlope = cms.double( 0.001 ),
        sumPtTrackIso = cms.double( 4.0 )
      ),
      electron_iso_combIso_barrel = cms.double( 10.0 ),
      electron_noniso_mvaCut = cms.double( -0.1 ),
      photon_combIso = cms.double( 10.0 ),
      electron_maxElePtForOnlyMVAPresel = cms.double( 50.0 )
    ),
    muon_HCAL = cms.vdouble( 3.0, 3.0 ),
    muon_ECAL = cms.vdouble( 0.5, 0.5 ),
    muon_HO = cms.vdouble( 0.9, 0.9 ),
    PFMuonAlgoParameters = cms.PSet(  ),
    rejectTracks_Bad = cms.bool( False ),
    rejectTracks_Step45 = cms.bool( False ),
    usePFNuclearInteractions = cms.bool( False ),
    usePFConversions = cms.bool( False ),
    usePFDecays = cms.bool( False ),
    dptRel_DispVtx = cms.double( 10.0 ),
    iCfgCandConnector = cms.PSet( 
      nuclCalibFactors = cms.vdouble( 0.8, 0.15, 0.5, 0.5, 0.05 ),
      bCorrect = cms.bool( False ),
      bCalibPrimary = cms.bool( False )
    ),
    nsigma_TRACK = cms.double( 1.0 ),
    pt_Error = cms.double( 1.0 ),
    factors_45 = cms.vdouble( 10.0, 100.0 ),
    goodTrackDeadHcal_ptErrRel = cms.double( 0.2 ),
    goodTrackDeadHcal_chi2n = cms.double( 5.0 ),
    goodTrackDeadHcal_layers = cms.uint32( 4 ),
    goodTrackDeadHcal_validFr = cms.double( 0.5 ),
    goodTrackDeadHcal_dxy = cms.double( 0.5 ),
    goodPixelTrackDeadHcal_minEta = cms.double( 2.3 ),
    goodPixelTrackDeadHcal_maxPt = cms.double( 50.0 ),
    goodPixelTrackDeadHcal_ptErrRel = cms.double( 1.0 ),
    goodPixelTrackDeadHcal_chi2n = cms.double( 2.0 ),
    goodPixelTrackDeadHcal_maxLost3Hit = cms.int32( 0 ),
    goodPixelTrackDeadHcal_maxLost4Hit = cms.int32( 1 ),
    goodPixelTrackDeadHcal_dxy = cms.double( 0.02 ),
    goodPixelTrackDeadHcal_dz = cms.double( 0.05 ),
    pf_nsigma_ECAL = cms.double( 0.0 ),
    pf_nsigma_HCAL = cms.double( 1.0 ),
    pf_nsigma_HFEM = cms.double( 1.0 ),
    pf_nsigma_HFHAD = cms.double( 1.0 ),
    useCalibrationsFromDB = cms.bool( True ),
    calibrationsLabel = cms.string( "HLT" ),
    postHFCleaning = cms.bool( False ),
    PFHFCleaningParameters = cms.PSet( 
      minHFCleaningPt = cms.double( 5.0 ),
      minDeltaMet = cms.double( 0.4 ),
      maxSignificance = cms.double( 2.5 ),
      minSignificance = cms.double( 2.5 ),
      minSignificanceReduction = cms.double( 1.4 ),
      maxDeltaPhiPt = cms.double( 7.0 )
    ),
    cleanedHF = cms.VInputTag( 'hltParticleFlowRecHitHF:Cleaned','hltParticleFlowClusterHF:Cleaned' ),
    calibHF_use = cms.bool( False ),
    calibHF_eta_step = cms.vdouble( 0.0, 2.9, 3.0, 3.2, 4.2, 4.4, 4.6, 4.8, 5.2, 5.4 ),
    calibHF_a_EMonly = cms.vdouble( 0.96945, 0.96701, 0.76309, 0.82268, 0.87583, 0.89718, 0.98674, 1.4681, 1.458, 1.458 ),
    calibHF_a_EMHAD = cms.vdouble( 1.42215, 1.00496, 0.68961, 0.81656, 0.98504, 0.98504, 1.00802, 1.0593, 1.4576, 1.4576 ),
    calibHF_b_HADonly = cms.vdouble( 1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 0.94348, 0.9437, 1.0034, 1.0444, 1.0444 ),
    calibHF_b_EMHAD = cms.vdouble( 1.27541, 0.85361, 0.86333, 0.89091, 0.94348, 0.94348, 0.9437, 1.0034, 1.0444, 1.0444 ),
    resolHF_square = cms.vdouble( 7.834401, 0.012996, 0.0 )
)
process.hltAK4PFJetsForDisplTaus = cms.EDProducer( "FastjetJetProducer",
    useMassDropTagger = cms.bool( False ),
    useFiltering = cms.bool( False ),
    useDynamicFiltering = cms.bool( False ),
    useTrimming = cms.bool( False ),
    usePruning = cms.bool( False ),
    useCMSBoostedTauSeedingAlgorithm = cms.bool( False ),
    useKtPruning = cms.bool( False ),
    useConstituentSubtraction = cms.bool( False ),
    useSoftDrop = cms.bool( False ),
    correctShape = cms.bool( False ),
    UseOnlyVertexTracks = cms.bool( False ),
    UseOnlyOnePV = cms.bool( False ),
    muCut = cms.double( -1.0 ),
    yCut = cms.double( -1.0 ),
    rFilt = cms.double( -1.0 ),
    rFiltFactor = cms.double( -1.0 ),
    trimPtFracMin = cms.double( -1.0 ),
    zcut = cms.double( -1.0 ),
    rcut_factor = cms.double( -1.0 ),
    csRho_EtaMax = cms.double( -1.0 ),
    csRParam = cms.double( -1.0 ),
    beta = cms.double( -1.0 ),
    R0 = cms.double( -1.0 ),
    gridMaxRapidity = cms.double( -1.0 ),
    gridSpacing = cms.double( -1.0 ),
    DzTrVtxMax = cms.double( 0.0 ),
    DxyTrVtxMax = cms.double( 0.0 ),
    MaxVtxZ = cms.double( 15.0 ),
    subjetPtMin = cms.double( -1.0 ),
    muMin = cms.double( -1.0 ),
    muMax = cms.double( -1.0 ),
    yMin = cms.double( -1.0 ),
    yMax = cms.double( -1.0 ),
    dRMin = cms.double( -1.0 ),
    dRMax = cms.double( -1.0 ),
    maxDepth = cms.int32( -1 ),
    nFilt = cms.int32( -1 ),
    MinVtxNdof = cms.int32( 0 ),
    src = cms.InputTag( "hltParticleFlowForDisplTaus" ),
    srcPVs = cms.InputTag( "hltTrimmedPixelVertices" ),
    jetType = cms.string( "PFJet" ),
    jetAlgorithm = cms.string( "AntiKt" ),
    rParam = cms.double( 0.4 ),
    inputEtMin = cms.double( 0.0 ),
    inputEMin = cms.double( 0.0 ),
    jetPtMin = cms.double( 0.0 ),
    doPVCorrection = cms.bool( False ),
    doAreaFastjet = cms.bool( False ),
    doRhoFastjet = cms.bool( False ),
    doPUOffsetCorr = cms.bool( False ),
    puPtMin = cms.double( 10.0 ),
    nSigmaPU = cms.double( 1.0 ),
    radiusPU = cms.double( 0.4 ),
    subtractorName = cms.string( "" ),
    useExplicitGhosts = cms.bool( False ),
    doAreaDiskApprox = cms.bool( True ),
    voronoiRfact = cms.double( -9.0 ),
    Rho_EtaMax = cms.double( 4.4 ),
    Ghost_EtaMax = cms.double( 6.0 ),
    Active_Area_Repeats = cms.int32( 5 ),
    GhostArea = cms.double( 0.01 ),
    restrictInputs = cms.bool( False ),
    maxInputs = cms.uint32( 1 ),
    writeCompound = cms.bool( False ),
    writeJetsWithConst = cms.bool( False ),
    doFastJetNonUniform = cms.bool( False ),
    useDeterministicSeed = cms.bool( True ),
    minSeed = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    puWidth = cms.double( 0.0 ),
    nExclude = cms.uint32( 0 ),
    maxBadEcalCells = cms.uint32( 9999999 ),
    maxBadHcalCells = cms.uint32( 9999999 ),
    maxProblematicEcalCells = cms.uint32( 9999999 ),
    maxProblematicHcalCells = cms.uint32( 9999999 ),
    maxRecoveredEcalCells = cms.uint32( 9999999 ),
    maxRecoveredHcalCells = cms.uint32( 9999999 ),
    puCenters = cms.vdouble(  ),
    applyWeight = cms.bool( False ),
    srcWeights = cms.InputTag( "" ),
    minimumTowersFraction = cms.double( 0.0 ),
    jetCollInstanceName = cms.string( "" ),
    sumRecHits = cms.bool( False )
)
process.hltTauPFJets08RegionDispl = cms.EDProducer( "RecoTauJetRegionProducer",
    src = cms.InputTag( "hltAK4PFJetsForDisplTaus" ),
    deltaR = cms.double( 0.8 ),
    pfCandAssocMapSrc = cms.InputTag( "" ),
    verbosity = cms.int32( 0 ),
    maxJetAbsEta = cms.double( 99.0 ),
    minJetPt = cms.double( -1.0 ),
    pfCandSrc = cms.InputTag( "hltParticleFlowForDisplTaus" )
)
process.hltHpsTauPFJetsRecoTauChargedHadronsWithNeutralsDispl = cms.EDProducer( "PFRecoTauChargedHadronProducer",
    ranking = cms.VPSet( 
      cms.PSet(  selectionFailValue = cms.double( 1000.0 ),
        plugin = cms.string( "PFRecoTauChargedHadronStringQuality" ),
        selection = cms.string( "algoIs('kChargedPFCandidate')" ),
        name = cms.string( "ChargedPFCandidate" ),
        selectionPassFunction = cms.string( "-pt" )
      ),
      cms.PSet(  selectionFailValue = cms.double( 1000.0 ),
        plugin = cms.string( "PFRecoTauChargedHadronStringQuality" ),
        selection = cms.string( "algoIs('kPFNeutralHadron')" ),
        name = cms.string( "ChargedPFCandidate" ),
        selectionPassFunction = cms.string( "-pt" )
      )
    ),
    verbosity = cms.int32( 0 ),
    maxJetAbsEta = cms.double( 99.0 ),
    outputSelection = cms.string( "pt > 0.5" ),
    minJetPt = cms.double( -1.0 ),
    jetSrc = cms.InputTag( "hltAK4PFJetsForDisplTaus" ),
    builders = cms.VPSet( 
      cms.PSet(  minBlockElementMatchesNeutralHadron = cms.int32( 2 ),
        dRmergeNeutralHadronWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtOther = cms.double( 0.005 ),
        qualityCuts = cms.PSet( 
          vertexTrackFiltering = cms.bool( False ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            minNeutralHadronEt = cms.double( 30.0 ),
            maxDeltaZ = cms.double( 1000.0 ),
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 1000.0 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          vxAssocQualityCuts = cms.PSet( 
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 1000.0 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" )
        ),
        dRmergeNeutralHadronWrtOther = cms.double( 0.005 ),
        maxUnmatchedBlockElementsNeutralHadron = cms.int32( 1 ),
        dRmergePhotonWrtElectron = cms.double( 0.005 ),
        minMergeGammaEt = cms.double( 0.0 ),
        minBlockElementMatchesPhoton = cms.int32( 2 ),
        dRmergePhotonWrtChargedHadron = cms.double( 0.005 ),
        plugin = cms.string( "PFRecoTauChargedHadronFromPFCandidatePlugin" ),
        dRmergeNeutralHadronWrtChargedHadron = cms.double( 0.005 ),
        minMergeChargedHadronPt = cms.double( 100.0 ),
        maxUnmatchedBlockElementsPhoton = cms.int32( 1 ),
        name = cms.string( "chargedPFCandidates" ),
        dRmergeNeutralHadronWrtElectron = cms.double( 0.05 ),
        chargedHadronCandidatesParticleIds = cms.vint32( 1, 2, 3 ),
        minMergeNeutralHadronEt = cms.double( 0.0 )
      ),
      cms.PSet(  minBlockElementMatchesNeutralHadron = cms.int32( 2 ),
        dRmergeNeutralHadronWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtNeutralHadron = cms.double( 0.01 ),
        dRmergePhotonWrtOther = cms.double( 0.005 ),
        qualityCuts = cms.PSet( 
          vertexTrackFiltering = cms.bool( False ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            minNeutralHadronEt = cms.double( 30.0 ),
            maxDeltaZ = cms.double( 1000.0 ),
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 1000.0 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          vxAssocQualityCuts = cms.PSet( 
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 1000.0 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" )
        ),
        dRmergeNeutralHadronWrtOther = cms.double( 0.005 ),
        maxUnmatchedBlockElementsNeutralHadron = cms.int32( 1 ),
        dRmergePhotonWrtElectron = cms.double( 0.005 ),
        minMergeGammaEt = cms.double( 0.0 ),
        minBlockElementMatchesPhoton = cms.int32( 2 ),
        dRmergePhotonWrtChargedHadron = cms.double( 0.005 ),
        plugin = cms.string( "PFRecoTauChargedHadronFromPFCandidatePlugin" ),
        dRmergeNeutralHadronWrtChargedHadron = cms.double( 0.005 ),
        minMergeChargedHadronPt = cms.double( 0.0 ),
        maxUnmatchedBlockElementsPhoton = cms.int32( 1 ),
        name = cms.string( "PFNeutralHadrons" ),
        dRmergeNeutralHadronWrtElectron = cms.double( 0.05 ),
        chargedHadronCandidatesParticleIds = cms.vint32( 5 ),
        minMergeNeutralHadronEt = cms.double( 0.0 )
      )
    )
)
process.hltPFTauPiZerosDispl = cms.EDProducer( "RecoTauPiZeroProducer",
    massHypothesis = cms.double( 0.136 ),
    ranking = cms.VPSet( 
      cms.PSet(  selectionFailValue = cms.double( 1000.0 ),
        plugin = cms.string( "RecoTauPiZeroStringQuality" ),
        selection = cms.string( "algoIs('kStrips')" ),
        name = cms.string( "InStrip" ),
        selectionPassFunction = cms.string( "abs(mass() - 0.13579)" )
      )
    ),
    verbosity = cms.int32( 0 ),
    maxJetAbsEta = cms.double( 99.0 ),
    outputSelection = cms.string( "pt > 0" ),
    minJetPt = cms.double( -1.0 ),
    jetSrc = cms.InputTag( "hltAK4PFJetsForDisplTaus" ),
    builders = cms.VPSet( 
      cms.PSet(  minGammaEtStripSeed = cms.double( 0.5 ),
        applyElecTrackQcuts = cms.bool( False ),
        stripCandidatesParticleIds = cms.vint32( 2, 4 ),
        makeCombinatoricStrips = cms.bool( False ),
        stripPhiAssociationDistance = cms.double( 0.2 ),
        qualityCuts = cms.PSet( 
          vertexTrackFiltering = cms.bool( False ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            maxDeltaZ = cms.double( 1000.0 ),
            minTrackPt = cms.double( 0.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 1000.0 ),
            useTracksInsteadOfPFHadrons = cms.bool( False )
          ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" )
        ),
        maxStripBuildIterations = cms.int32( -1 ),
        updateStripAfterEachDaughter = cms.bool( False ),
        stripEtaAssociationDistance = cms.double( 0.05 ),
        minStripEt = cms.double( 1.0 ),
        plugin = cms.string( "RecoTauPiZeroStripPlugin2" ),
        minGammaEtStripAdd = cms.double( 0.0 ),
        name = cms.string( "s" )
      )
    )
)
process.hltHpsCombinatoricRecoTausDispl = cms.EDProducer( "RecoTauProducer",
    piZeroSrc = cms.InputTag( "hltPFTauPiZerosDispl" ),
    jetRegionSrc = cms.InputTag( "hltTauPFJets08RegionDispl" ),
    maxJetAbsEta = cms.double( 2.5 ),
    outputSelection = cms.string( "leadPFChargedHadrCand().isNonnull()" ),
    chargedHadronSrc = cms.InputTag( "hltHpsTauPFJetsRecoTauChargedHadronsWithNeutralsDispl" ),
    minJetPt = cms.double( 14.0 ),
    jetSrc = cms.InputTag( "hltAK4PFJetsForDisplTaus" ),
    builders = cms.VPSet( 
      cms.PSet(  decayModes = cms.VPSet( 
  cms.PSet(  maxPiZeros = cms.uint32( 0 ),
    maxTracks = cms.uint32( 6 ),
    nPiZeros = cms.uint32( 0 ),
    nCharged = cms.uint32( 1 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 6 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 1 ),
    nPiZeros = cms.uint32( 1 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 5 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 1 ),
    nPiZeros = cms.uint32( 2 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 0 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 2 ),
    nPiZeros = cms.uint32( 0 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 3 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 2 ),
    nPiZeros = cms.uint32( 1 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 0 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 3 ),
    nPiZeros = cms.uint32( 0 )
  ),
  cms.PSet(  maxPiZeros = cms.uint32( 3 ),
    maxTracks = cms.uint32( 6 ),
    nCharged = cms.uint32( 3 ),
    nPiZeros = cms.uint32( 1 )
  )
),
        isolationConeSize = cms.double( 0.5 ),
        minAbsPhotonSumPt_insideSignalCone = cms.double( 2.5 ),
        minAbsPhotonSumPt_outsideSignalCone = cms.double( 1.0E9 ),
        minRelPhotonSumPt_insideSignalCone = cms.double( 0.1 ),
        minRelPhotonSumPt_outsideSignalCone = cms.double( 1.0E9 ),
        name = cms.string( "combinatoric" ),
        pfCandSrc = cms.InputTag( "hltParticleFlowForDisplTaus" ),
        plugin = cms.string( "RecoTauBuilderCombinatoricPlugin" ),
        qualityCuts = cms.PSet( 
          isolationQualityCuts = cms.PSet( 
            maxDeltaZ = cms.double( 0.2 ),
            maxTrackChi2 = cms.double( 100.0 ),
            maxTransverseImpactParameter = cms.double( 0.03 ),
            minGammaEt = cms.double( 1.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            minTrackPt = cms.double( 1.0 ),
            minTrackVertexWeight = cms.double( -1.0 )
          ),
          leadingTrkOrPFCandOption = cms.string( "leadPFCand" ),
          primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
          pvFindingAlgo = cms.string( "closestInDeltaZ" ),
          recoverLeadingTrk = cms.bool( False ),
          signalQualityCuts = cms.PSet( 
            maxDeltaZ = cms.double( 1000.0 ),
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 1000.0 ),
            minGammaEt = cms.double( 0.5 ),
            minNeutralHadronEt = cms.double( 30.0 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            minTrackPt = cms.double( 0.5 ),
            minTrackVertexWeight = cms.double( -1.0 )
          ),
          vertexTrackFiltering = cms.bool( False ),
          vxAssocQualityCuts = cms.PSet( 
            maxTrackChi2 = cms.double( 1000.0 ),
            maxTransverseImpactParameter = cms.double( 1000.0 ),
            minGammaEt = cms.double( 0.5 ),
            minTrackHits = cms.uint32( 3 ),
            minTrackPixelHits = cms.uint32( 0 ),
            minTrackPt = cms.double( 0.5 ),
            minTrackVertexWeight = cms.double( -1.0 )
          )
        ),
        signalConeSize = cms.string( "max(min(0.1, 3.0/pt()), 0.05)" )
      )
    ),
    buildNullTaus = cms.bool( False ),
    verbosity = cms.int32( 0 ),
    modifiers = cms.VPSet( 
      cms.PSet(  DataType = cms.string( "AOD" ),
        EcalStripSumE_deltaEta = cms.double( 0.03 ),
        EcalStripSumE_deltaPhiOverQ_maxValue = cms.double( 0.5 ),
        EcalStripSumE_deltaPhiOverQ_minValue = cms.double( -0.1 ),
        EcalStripSumE_minClusEnergy = cms.double( 0.1 ),
        ElectronPreIDProducer = cms.InputTag( "elecpreid" ),
        maximumForElectrionPreIDOutput = cms.double( -0.1 ),
        name = cms.string( "elec_rej" ),
        plugin = cms.string( "RecoTauElectronRejectionPlugin" ),
        ElecPreIDLeadTkMatch_maxDR = cms.double( 0.01 )
      ),
      cms.PSet(  name = cms.string( "tau_mass" ),
        plugin = cms.string( "PFRecoTauMassPlugin" ),
        verbosity = cms.int32( 0 )
      )
    )
)
process.hltHpsSelectionDiscriminatorDispl = cms.EDProducer( "PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag( "hltHpsCombinatoricRecoTausDispl" ),
    verbosity = cms.int32( 0 ),
    minTauPt = cms.double( 0.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    decayModes = cms.VPSet( 
      cms.PSet(  maxMass = cms.string( "1." ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( -1000.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.2))" ),
        nPiZeros = cms.uint32( 1 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.1349 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  minPi0Mass = cms.double( 0.0 ),
        maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.0))" ),
        maxPi0Mass = cms.double( 0.8 ),
        nPiZeros = cms.uint32( 2 ),
        minMass = cms.double( 0.4 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.0 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.2" ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        nCharged = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( False ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.6, min(1.6*sqrt(pt/100.), 4.0))" ),
        minMass = cms.double( 0.0 ),
        nCharged = cms.uint32( 2 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.6" ),
        minMass = cms.double( 0.7 ),
        nCharged = cms.uint32( 3 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 0 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  nCharged = cms.uint32( 3 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        minMass = cms.double( 0.9 ),
        maxMass = cms.string( "1.6" ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( False ),
          mass = cms.bool( False )
        ),
        nChargedPFCandsMin = cms.uint32( 1 )
      )
    ),
    matchingCone = cms.double( 0.5 ),
    minPixelHits = cms.int32( 0 ),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool( False )
)
process.hltHpsPFTauProducerSansRefsDispl = cms.EDProducer( "RecoTauCleaner",
    outputSelection = cms.string( "" ),
    cleaners = cms.VPSet( 
      cms.PSet(  name = cms.string( "HPS_Select" ),
        plugin = cms.string( "RecoTauDiscriminantCleanerPlugin" ),
        src = cms.InputTag( "hltHpsSelectionDiscriminatorDispl" )
      ),
      cms.PSet(  name = cms.string( "killSoftTwoProngTaus" ),
        plugin = cms.string( "RecoTauSoftTwoProngTausCleanerPlugin" ),
        minTrackPt = cms.double( 5.0 )
      ),
      cms.PSet(  name = cms.string( "ChargedHadronMultiplicity" ),
        plugin = cms.string( "RecoTauChargedHadronMultiplicityCleanerPlugin" )
      ),
      cms.PSet(  name = cms.string( "Pt" ),
        plugin = cms.string( "RecoTauStringCleanerPlugin" ),
        selection = cms.string( "leadPFCand().isNonnull()" ),
        selectionFailValue = cms.double( 1000.0 ),
        selectionPassFunction = cms.string( "-pt()" ),
        tolerance = cms.double( 0.01 )
      ),
      cms.PSet(  name = cms.string( "StripMultiplicity" ),
        plugin = cms.string( "RecoTauStringCleanerPlugin" ),
        selection = cms.string( "leadPFCand().isNonnull()" ),
        selectionFailValue = cms.double( 1000.0 ),
        selectionPassFunction = cms.string( "-signalPiZeroCandidates().size()" )
      ),
      cms.PSet(  name = cms.string( "CombinedIsolation" ),
        plugin = cms.string( "RecoTauStringCleanerPlugin" ),
        selection = cms.string( "leadPFCand().isNonnull()" ),
        selectionFailValue = cms.double( 1000.0 ),
        selectionPassFunction = cms.string( "isolationPFChargedHadrCandsPtSum() + isolationPFGammaCandsEtSum()" )
      )
    ),
    verbosity = cms.int32( 0 ),
    src = cms.InputTag( "hltHpsCombinatoricRecoTausDispl" )
)
process.hltHpsPFTauProducerDispl = cms.EDProducer( "RecoTauPiZeroUnembedder",
    src = cms.InputTag( "hltHpsPFTauProducerSansRefsDispl" )
)
process.hltHpsPFTauDiscriminationByDecayModeFindingNewDMsDispl = cms.EDProducer( "PFRecoTauDiscriminationByHPSSelection",
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducerDispl" ),
    verbosity = cms.int32( 0 ),
    minTauPt = cms.double( 18.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    decayModes = cms.VPSet( 
      cms.PSet(  maxMass = cms.string( "1." ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( -1000.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.2))" ),
        nPiZeros = cms.uint32( 1 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.1349 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  minPi0Mass = cms.double( 0.0 ),
        maxMass = cms.string( "max(1.72, min(1.72*sqrt(pt/100.), 4.0))" ),
        maxPi0Mass = cms.double( 0.8 ),
        nPiZeros = cms.uint32( 2 ),
        minMass = cms.double( 0.4 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 1 ),
        nCharged = cms.uint32( 1 ),
        assumeStripMass = cms.double( 0.0 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.2" ),
        nPiZeros = cms.uint32( 0 ),
        minMass = cms.double( 0.0 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        nCharged = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          phi = cms.bool( True ),
          eta = cms.bool( False ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "max(1.6, min(1.6*sqrt(pt/100.), 4.0))" ),
        minMass = cms.double( 0.0 ),
        nCharged = cms.uint32( 2 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  maxMass = cms.string( "1.6" ),
        minMass = cms.double( 0.7 ),
        nCharged = cms.uint32( 3 ),
        nChargedPFCandsMin = cms.uint32( 1 ),
        nPiZeros = cms.uint32( 0 ),
        nTracksMin = cms.uint32( 2 ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( True ),
          mass = cms.bool( True )
        )
      ),
      cms.PSet(  nCharged = cms.uint32( 3 ),
        nPiZeros = cms.uint32( 1 ),
        nTracksMin = cms.uint32( 2 ),
        minMass = cms.double( 0.9 ),
        maxMass = cms.string( "1.6" ),
        applyBendCorrection = cms.PSet( 
          eta = cms.bool( False ),
          phi = cms.bool( False ),
          mass = cms.bool( False )
        ),
        nChargedPFCandsMin = cms.uint32( 1 )
      )
    ),
    matchingCone = cms.double( 0.5 ),
    minPixelHits = cms.int32( 0 ),
    requireTauChargedHadronsToBeChargedPFCands = cms.bool( False )
)
process.hltHpsPFTauTrackFindingDiscriminatorDispl = cms.EDProducer( "PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double( 0.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    UseOnlyChargedHadrons = cms.bool( True ),
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducerDispl" )
)
process.hltHpsSelectedPFTausTrackFindingDispl = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsPFTauProducerDispl" ),
    cut = cms.string( "pt > 0" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauTrackFindingDiscriminatorDispl" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
    )
)
process.hltHpsPFTauTrackDispl = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsPFTauProducerDispl" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 0.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltHpsSingleDisplPFTau24Glob = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsPFTauProducerDispl" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsPFTauTrackPt1DiscriminatorGlobDispl = cms.EDProducer( "PFRecoTauDiscriminationByLeadingObjectPtCut",
    MinPtLeadingObject = cms.double( 1.0 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    UseOnlyChargedHadrons = cms.bool( True ),
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducerDispl" )
)
process.hltHpsSelectedPFTausTrackPt1GlobDispl = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsPFTauProducerDispl" ),
    cut = cms.string( "pt > 0" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauTrackPt1DiscriminatorGlobDispl" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
    )
)
process.hltHpsSingleDisplPFTau24TrackPt1Glob = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsSelectedPFTausTrackPt1GlobDispl" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsDisplPFTauMediumAbsoluteChargedIsolationDiscriminator = cms.EDProducer( "PFRecoTauDiscriminationByIsolation",
    storeRawFootprintCorrection = cms.bool( False ),
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducerDispl" ),
    storeRawOccupancy = cms.bool( False ),
    maximumSumPtCut = cms.double( 3.7 ),
    qualityCuts = cms.PSet( 
      vertexTrackFiltering = cms.bool( False ),
      isolationQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.5 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      recoverLeadingTrk = cms.bool( False ),
      signalQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        useTracksInsteadOfPFHadrons = cms.bool( False ),
        minNeutralHadronEt = cms.double( 1.0 )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" )
    ),
    minTauPtForNoIso = cms.double( -99.0 ),
    maxAbsPhotonSumPt_outsideSignalCone = cms.double( 1.0E9 ),
    vertexSrc = cms.InputTag( "NotUsed" ),
    applySumPtCut = cms.bool( True ),
    rhoConeSize = cms.double( 0.357 ),
    ApplyDiscriminationByTrackerIsolation = cms.bool( True ),
    storeRawPhotonSumPt_outsideSignalCone = cms.bool( False ),
    rhoProducer = cms.InputTag( "NotUsed" ),
    enableHGCalWorkaround = cms.bool( False ),
    footprintCorrections = cms.VPSet( 
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 0" )
      ),
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 1 || decayMode() = 2" )
      ),
      cms.PSet(  offset = cms.string( "2.7" ),
        selection = cms.string( "decayMode() = 5" )
      ),
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 6" )
      ),
      cms.PSet(  offset = cms.string( "max(2.0, 0.22*pt() - 2.0)" ),
        selection = cms.string( "decayMode() = 10" )
      )
    ),
    deltaBetaFactor = cms.string( "0.38" ),
    applyFootprintCorrection = cms.bool( False ),
    UseAllPFCandsForWeights = cms.bool( False ),
    relativeSumPtCut = cms.double( 0.03 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    maximumOccupancy = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    applyOccupancyCut = cms.bool( False ),
    applyDeltaBetaCorrection = cms.bool( False ),
    applyRelativeSumPtCut = cms.bool( False ),
    storeRawPUsumPt = cms.bool( False ),
    applyPhotonPtSumOutsideSignalConeCut = cms.bool( False ),
    deltaBetaPUTrackPtCutOverride = cms.bool( True ),
    ApplyDiscriminationByWeightedECALIsolation = cms.bool( False ),
    storeRawSumPt = cms.bool( False ),
    ApplyDiscriminationByECALIsolation = cms.bool( False ),
    applyRhoCorrection = cms.bool( False ),
    WeightECALIsolation = cms.double( 0.33333 ),
    rhoUEOffsetCorrection = cms.double( 0.0 ),
    maxRelPhotonSumPt_outsideSignalCone = cms.double( 0.1 ),
    deltaBetaPUTrackPtCutOverride_val = cms.double( 0.5 ),
    isoConeSizeForDeltaBeta = cms.double( 0.3 ),
    relativeSumPtOffset = cms.double( 0.0 ),
    customOuterCone = cms.double( -1.0 ),
    particleFlowSrc = cms.InputTag( "hltParticleFlowForTaus" )
)
process.hltHpsDisplPFTauMediumRelativeChargedIsolationDiscriminator = cms.EDProducer( "PFRecoTauDiscriminationByIsolation",
    storeRawFootprintCorrection = cms.bool( False ),
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducerDispl" ),
    storeRawOccupancy = cms.bool( False ),
    maximumSumPtCut = cms.double( 2.0 ),
    qualityCuts = cms.PSet( 
      vertexTrackFiltering = cms.bool( False ),
      isolationQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.5 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      recoverLeadingTrk = cms.bool( False ),
      signalQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        useTracksInsteadOfPFHadrons = cms.bool( False ),
        minNeutralHadronEt = cms.double( 1.0 )
      ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        useTracksInsteadOfPFHadrons = cms.bool( False )
      ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" )
    ),
    minTauPtForNoIso = cms.double( -99.0 ),
    maxAbsPhotonSumPt_outsideSignalCone = cms.double( 1.0E9 ),
    vertexSrc = cms.InputTag( "NotUsed" ),
    applySumPtCut = cms.bool( False ),
    rhoConeSize = cms.double( 0.5 ),
    ApplyDiscriminationByTrackerIsolation = cms.bool( True ),
    storeRawPhotonSumPt_outsideSignalCone = cms.bool( False ),
    rhoProducer = cms.InputTag( "hltFixedGridRhoFastjetAll" ),
    enableHGCalWorkaround = cms.bool( False ),
    footprintCorrections = cms.VPSet( 
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 0" )
      ),
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 1 || decayMode() = 2" )
      ),
      cms.PSet(  offset = cms.string( "2.7" ),
        selection = cms.string( "decayMode() = 5" )
      ),
      cms.PSet(  offset = cms.string( "0.0" ),
        selection = cms.string( "decayMode() = 6" )
      ),
      cms.PSet(  offset = cms.string( "max(2.0, 0.22*pt() - 2.0)" ),
        selection = cms.string( "decayMode() = 10" )
      )
    ),
    deltaBetaFactor = cms.string( "0.38" ),
    applyFootprintCorrection = cms.bool( False ),
    UseAllPFCandsForWeights = cms.bool( False ),
    relativeSumPtCut = cms.double( 0.05 ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    maximumOccupancy = cms.uint32( 0 ),
    verbosity = cms.int32( 0 ),
    applyOccupancyCut = cms.bool( False ),
    applyDeltaBetaCorrection = cms.bool( False ),
    applyRelativeSumPtCut = cms.bool( True ),
    storeRawPUsumPt = cms.bool( False ),
    applyPhotonPtSumOutsideSignalConeCut = cms.bool( False ),
    deltaBetaPUTrackPtCutOverride = cms.bool( True ),
    ApplyDiscriminationByWeightedECALIsolation = cms.bool( False ),
    storeRawSumPt = cms.bool( False ),
    ApplyDiscriminationByECALIsolation = cms.bool( False ),
    applyRhoCorrection = cms.bool( False ),
    WeightECALIsolation = cms.double( 1.0 ),
    rhoUEOffsetCorrection = cms.double( 1.0 ),
    maxRelPhotonSumPt_outsideSignalCone = cms.double( 0.1 ),
    deltaBetaPUTrackPtCutOverride_val = cms.double( 0.5 ),
    isoConeSizeForDeltaBeta = cms.double( 0.3 ),
    relativeSumPtOffset = cms.double( 60.0 ),
    customOuterCone = cms.double( -1.0 ),
    particleFlowSrc = cms.InputTag( "hltParticleFlowForTaus" )
)
process.hltHpsDisplPFTauMediumAbsOrRelChargedIsolationDiscriminator = cms.EDProducer( "PFTauDiscriminatorLogicalAndProducer",
    Prediscriminants = cms.PSet( 
      BooleanOperator = cms.string( "or" ),
      discr1 = cms.PSet( 
        cut = cms.double( 0.5 ),
        Producer = cms.InputTag( "hltHpsDisplPFTauMediumAbsoluteChargedIsolationDiscriminator" )
      ),
      discr2 = cms.PSet( 
        cut = cms.double( 0.5 ),
        Producer = cms.InputTag( "hltHpsDisplPFTauMediumRelativeChargedIsolationDiscriminator" )
      )
    ),
    PassValue = cms.double( 1.0 ),
    FailValue = cms.double( 0.0 ),
    PFTauProducer = cms.InputTag( "hltHpsPFTauProducerDispl" )
)
process.hltHpsSelectedPFTausTrackPt1MediumChargedIsolationGlobDispl = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsPFTauProducerDispl" ),
    cut = cms.string( "pt > 0" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltHpsPFTauTrackPt1DiscriminatorGlobDispl" ),
        selectionCut = cms.double( 0.5 )
      ),
      cms.PSet(  discriminator = cms.InputTag( "hltHpsDisplPFTauMediumAbsOrRelChargedIsolationDiscriminator" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
    )
)
process.hltHpsL1JetsHLTDisplacedMuDisplPFTauTrackPt1MatchGlob = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sBigORMu18erTauXXer2p1" ),
    JetSrc = cms.InputTag( "hltHpsSelectedPFTausTrackPt1MediumChargedIsolationGlobDispl" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( True ),
    KeepOriginalVertex = cms.bool( False )
)
process.hltHpsDisplacedMuMediumChargedIsoDisplPFTau24TrackPt1L1HLTMatchedGlob = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsL1JetsHLTDisplacedMuDisplPFTauTrackPt1MatchGlob" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterDisplacedMu24DisplPFTau24 = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3DisplacedMuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausTrackPt1MediumChargedIsolationGlobDispl' ),
    inputTag1 = cms.InputTag( "hltL3fSingleMuL1f0L2NVf20L3GlbDispl24" ),
    inputTag2 = cms.InputTag( "hltHpsDisplacedMuMediumChargedIsoDisplPFTau24TrackPt1L1HLTMatchedGlob" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu27MediumChargedIsoDisplacedPFTauHPS24eta2p1SingleL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltIsoMu27L2Tau22eta2p2 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL2TauJetsL1TauSeeded" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 22.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.2 ),
    MinN = cms.int32( 1 )
)
process.hltIsoMu27L2GlobIsoTau22eta2p2 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL2TauJetsTightIsoL1TauSeededGlob" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 22.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.2 ),
    MinN = cms.int32( 1 )
)
process.hltHpsSinglePFTau24MediumChargedIsoFilter = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsSelectedPFTausTrackPt1MediumChargedIsolationGlobDispl" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 24.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu27MediumChargedIsoDisplTau24 = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsPFTauProducerDispl' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sMu22Or25L1f0L2f10QL3f27QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSinglePFTau24MediumChargedIsoFilter" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltL1sMuShowerOneNominal = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMuShower_Nominal OR L1_SingleMuShower_Tight" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreCscClusterLoose = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltCSCrechitClusters = cms.EDProducer( "CSCrechitClusterProducer",
    nRechitMin = cms.int32( 50 ),
    rParam = cms.double( 0.4 ),
    nStationThres = cms.int32( 10 ),
    recHitLabel = cms.InputTag( "hltCsc2DRecHits" )
)
process.hltCscClusterLoose = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltCSCrechitClusters" ),
    MinN = cms.int32( 1 ),
    MinSize = cms.int32( -1 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( 200, 100, 500, 500 ),
    Max_nMB1 = cms.int32( -1 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( 0 ),
    Max_nME12 = cms.int32( 0 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -5.0 ),
    MaxTime = cms.double( 12.5 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltPreCscClusterMedium = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltCscClusterMedium = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltCSCrechitClusters" ),
    MinN = cms.int32( 1 ),
    MinSize = cms.int32( -1 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( 300, 100, 800, 500 ),
    Max_nMB1 = cms.int32( -1 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( 0 ),
    Max_nME12 = cms.int32( 0 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -5.0 ),
    MaxTime = cms.double( 12.5 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltPreCscClusterTight = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltCscClusterTight = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltCSCrechitClusters" ),
    MinN = cms.int32( 1 ),
    MinSize = cms.int32( -1 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( 500, 100, 800, 500 ),
    Max_nMB1 = cms.int32( -1 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( 0 ),
    Max_nME12 = cms.int32( 0 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -5.0 ),
    MaxTime = cms.double( 12.5 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltPreCscCluster50Photon20Unseeded = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltCscClusterVeryLoose = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltCSCrechitClusters" ),
    MinN = cms.int32( 1 ),
    MinSize = cms.int32( -1 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( 50, 50, 100, 100 ),
    Max_nMB1 = cms.int32( -1 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( 0 ),
    Max_nME12 = cms.int32( 0 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -5.0 ),
    MaxTime = cms.double( 12.5 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltEG20EtFilterUnseeded = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEgammaCandidatesWrapperUnseeded" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    etcutEB = cms.double( 20.0 ),
    etcutEE = cms.double( 20.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEG20HEFilterUnseeded = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG20EtFilterUnseeded" ),
    varTag = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltPreCscCluster50Photon30Unseeded = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltEG30EtFilterUnseeded = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEgammaCandidatesWrapperUnseeded" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    etcutEB = cms.double( 30.0 ),
    etcutEE = cms.double( 30.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEG30HEFilterUnseeded = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG30EtFilterUnseeded" ),
    varTag = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltPreCscCluster100Ele5 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltCscCluster100NoME1112 = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltCSCrechitClusters" ),
    MinN = cms.int32( 1 ),
    MinSize = cms.int32( 100 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( -1, -1, -1, -1 ),
    Max_nMB1 = cms.int32( -1 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( 0 ),
    Max_nME12 = cms.int32( 0 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -5.0 ),
    MaxTime = cms.double( 12.5 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltEG5EtUnseededFilter = cms.EDFilter( "HLTEgammaEtFilter",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltEgammaCandidatesWrapperUnseeded" ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    etcutEB = cms.double( 5.0 ),
    etcutEE = cms.double( 5.0 ),
    minEtaCut = cms.double( -9999.0 ),
    maxEtaCut = cms.double( 9999.0 ),
    ncandcut = cms.int32( 1 )
)
process.hltEG5HEUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG5EtUnseededFilter" ),
    varTag = cms.InputTag( "hltEgammaHoverEUnseeded" ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( -1.0 ),
    thrRegularEE = cms.vdouble( -1.0 ),
    thrOverEEB = cms.vdouble( 0.15 ),
    thrOverEEE = cms.vdouble( 0.1 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltEG5CaloIdLClusterShapeUnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG5HEUnseededFilter" ),
    varTag = cms.InputTag( 'hltEgammaClusterShapeUnseeded','sigmaIEtaIEta5x5NoiseCleaned' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 0.014 ),
    thrRegularEE = cms.vdouble( 0.035 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltEle5CaloIdLPixelMatchUnseededFilter = cms.EDFilter( "HLTElectronPixelMatchFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEG5CaloIdLClusterShapeUnseededFilter" ),
    l1PixelSeedsTag = cms.InputTag( "hltEgammaElectronPixelSeedsUnseeded" ),
    npixelmatchcut = cms.double( 1.0 ),
    ncandcut = cms.int32( 1 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" ),
    s_a_phi1B = cms.double( 0.0069 ),
    s_a_phi1I = cms.double( 0.0088 ),
    s_a_phi1F = cms.double( 0.0076 ),
    s_a_phi2B = cms.double( 3.7E-4 ),
    s_a_phi2I = cms.double( 7.0E-4 ),
    s_a_phi2F = cms.double( 0.00906 ),
    s_a_zB = cms.double( 0.012 ),
    s_a_rI = cms.double( 0.027 ),
    s_a_rF = cms.double( 0.04 ),
    s2_threshold = cms.double( 0.4 ),
    tanhSO10BarrelThres = cms.double( 0.35 ),
    tanhSO10InterThres = cms.double( 1.0 ),
    tanhSO10ForwardThres = cms.double( 1.0 ),
    useS = cms.bool( False ),
    pixelVeto = cms.bool( False )
)
process.hltEle5CaloIdLMWPMS2UnseededFilter = cms.EDFilter( "HLTEgammaGenericFilter",
    saveTags = cms.bool( True ),
    candTag = cms.InputTag( "hltEle5CaloIdLPixelMatchUnseededFilter" ),
    varTag = cms.InputTag( 'hltEgammaPixelMatchVarsUnseeded','s2' ),
    rhoTag = cms.InputTag( "" ),
    energyLowEdges = cms.vdouble( 0.0 ),
    lessThan = cms.bool( True ),
    useEt = cms.bool( False ),
    useAbs = cms.bool( False ),
    thrRegularEB = cms.vdouble( 150.0 ),
    thrRegularEE = cms.vdouble( 150.0 ),
    thrOverEEB = cms.vdouble( -1.0 ),
    thrOverEEE = cms.vdouble( -1.0 ),
    thrOverE2EB = cms.vdouble( -1.0 ),
    thrOverE2EE = cms.vdouble( -1.0 ),
    ncandcut = cms.int32( 1 ),
    doRhoCorrection = cms.bool( False ),
    rhoMax = cms.double( 9.9999999E7 ),
    rhoScale = cms.double( 1.0 ),
    effectiveAreas = cms.vdouble( 0.0, 0.0 ),
    absEtaLowEdges = cms.vdouble( 0.0, 1.479 ),
    l1EGCand = cms.InputTag( "hltEgammaCandidatesUnseeded" )
)
process.hltPreCscCluster100Mu5 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered5Q = cms.EDFilter( "HLTMuonL3PreFilter",
    saveTags = cms.bool( True ),
    BeamSpotTag = cms.InputTag( "hltOnlineBeamSpot" ),
    CandTag = cms.InputTag( "hltIterL3MuonCandidates" ),
    PreviousCandTag = cms.InputTag( "hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q" ),
    L1CandTag = cms.InputTag( "hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0" ),
    inputMuonCollection = cms.InputTag( "hltIterL3Muons" ),
    MinN = cms.int32( 1 ),
    MaxEta = cms.double( 1.0E99 ),
    MinNhits = cms.int32( 0 ),
    MaxDr = cms.double( 2.0 ),
    MinDr = cms.double( -1.0 ),
    MaxDz = cms.double( 9999.0 ),
    MinDxySig = cms.double( -1.0 ),
    MinPt = cms.double( 5.0 ),
    NSigmaPt = cms.double( 0.0 ),
    MaxNormalizedChi2 = cms.double( 9999.0 ),
    MaxDXYBeamSpot = cms.double( 9999.0 ),
    MinDXYBeamSpot = cms.double( -1.0 ),
    MinNmuonHits = cms.int32( 0 ),
    MaxPtDifference = cms.double( 9999.0 ),
    MinTrackPt = cms.double( 0.0 ),
    minMuonStations = cms.int32( 2 ),
    minTrkHits = cms.int32( -1 ),
    minMuonHits = cms.int32( -1 ),
    allowedTypeMask = cms.uint32( 255 ),
    requiredTypeMask = cms.uint32( 0 ),
    MaxNormalizedChi2_L3FromL1 = cms.double( 1.0E99 ),
    trkMuonId = cms.uint32( 0 ),
    L1MatchingdR = cms.double( 0.3 ),
    MatchToPreviousCand = cms.bool( True ),
    InputLinks = cms.InputTag( "hltL3MuonsIterL3Links" ),
    requireL3MuonTrajectorySeed = cms.bool( False ),
    useSimpleGeometry = cms.bool( True ),
    useStation2 = cms.bool( True ),
    fallbackToME1 = cms.bool( False ),
    cosmicPropagationHypothesis = cms.bool( False ),
    useMB2InOverlap = cms.bool( False ),
    useTrack = cms.string( "tracker" ),
    useState = cms.string( "atVertex" ),
    propagatorAlong = cms.ESInputTag( "","hltESPSteppingHelixPropagatorAlong" ),
    propagatorAny = cms.ESInputTag( "","SteppingHelixPropagatorAny" ),
    propagatorOpposite = cms.ESInputTag( "","hltESPSteppingHelixPropagatorOpposite" )
)
process.hltPreCscCluster100PNetTauhPFJet10Loose = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltL2Tau10 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL2TauJets" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltL2GlobIsoTau10 = cms.EDFilter( "HLT1CaloJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltL2TauJetsIsoGlob" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltPFJetForBtagSelectorMinPt10 = cms.EDFilter( "HLT1PFJet",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltAK4PFJetsCorrected" ),
    triggerType = cms.int32( 86 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 10.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.6 ),
    MinN = cms.int32( 1 )
)
process.hltPFJetForBtagMinPt10 = cms.EDProducer( "HLTPFJetCollectionProducer",
    HLTObject = cms.InputTag( "hltPFJetForBtagSelectorMinPt10" ),
    TriggerTypes = cms.vint32( 86 )
)
process.hltDeepBLifetimeTagInfosPFMinPt10 = cms.EDProducer( "CandIPProducer",
    primaryVertex = cms.InputTag( "hltVerticesPFFilter" ),
    computeProbabilities = cms.bool( True ),
    computeGhostTrack = cms.bool( True ),
    ghostTrackPriorDeltaR = cms.double( 0.03 ),
    minimumNumberOfPixelHits = cms.int32( 2 ),
    minimumNumberOfHits = cms.int32( 3 ),
    maximumTransverseImpactParameter = cms.double( 0.2 ),
    minimumTransverseMomentum = cms.double( 1.0 ),
    maximumChiSquared = cms.double( 5.0 ),
    maximumLongitudinalImpactParameter = cms.double( 17.0 ),
    jetDirectionUsingTracks = cms.bool( False ),
    jetDirectionUsingGhostTrack = cms.bool( False ),
    useTrackQuality = cms.bool( False ),
    jets = cms.InputTag( "hltPFJetForBtagMinPt10" ),
    candidates = cms.InputTag( "hltParticleFlow" ),
    maxDeltaR = cms.double( 0.4 )
)
process.hltPrimaryVertexAssociationMinPt10 = cms.EDProducer( "PFCandidatePrimaryVertexSorter",
    sorting = cms.PSet(  ),
    assignment = cms.PSet( 
      maxDxyForJetAxisAssigment = cms.double( 0.1 ),
      maxDzForJetAxisAssigment = cms.double( 0.1 ),
      useTiming = cms.bool( False ),
      preferHighRanked = cms.bool( False ),
      EtaMinUseDz = cms.double( -1.0 ),
      maxDistanceToJetAxis = cms.double( 0.07 ),
      PtMaxCharged = cms.double( -1.0 ),
      minJetPt = cms.double( 25.0 ),
      maxDzSigForPrimaryAssignment = cms.double( 5.0 ),
      OnlyUseFirstDz = cms.bool( False ),
      maxDzErrorForPrimaryAssignment = cms.double( 0.05 ),
      maxDzForPrimaryAssignment = cms.double( 0.1 ),
      maxJetDeltaR = cms.double( 0.5 ),
      maxDxySigForNotReconstructedPrimary = cms.double( 2.0 ),
      DzCutForChargedFromPUVtxs = cms.double( 0.2 ),
      maxDtSigForPrimaryAssignment = cms.double( 3.0 ),
      maxDxyForNotReconstructedPrimary = cms.double( 0.01 ),
      useVertexFit = cms.bool( True ),
      NumOfPUVtxsForCharged = cms.uint32( 0 )
    ),
    qualityForPrimary = cms.int32( 2 ),
    usePVMET = cms.bool( True ),
    particles = cms.InputTag( "hltParticleFlow" ),
    vertices = cms.InputTag( "hltVerticesPFFilter" ),
    jets = cms.InputTag( "hltPFJetForBtagMinPt10" ),
    produceAssociationToOriginalVertices = cms.bool( True ),
    produceSortedVertices = cms.bool( False ),
    producePileUpCollection = cms.bool( False ),
    produceNoPileUpCollection = cms.bool( False )
)
process.hltParticleNetJetTagInfosMinPt10 = cms.EDProducer( "DeepBoostedJetTagInfoProducer",
    jet_radius = cms.double( 0.4 ),
    min_jet_pt = cms.double( 10.0 ),
    max_jet_eta = cms.double( 2.5 ),
    min_pt_for_track_properties = cms.double( 0.95 ),
    min_pt_for_pfcandidates = cms.double( 0.1 ),
    use_puppiP4 = cms.bool( False ),
    include_neutrals = cms.bool( True ),
    sort_by_sip2dsig = cms.bool( False ),
    min_puppi_wgt = cms.double( -1.0 ),
    flip_ip_sign = cms.bool( False ),
    sip3dSigMax = cms.double( -1.0 ),
    use_hlt_features = cms.bool( True ),
    vertices = cms.InputTag( "hltVerticesPFFilter" ),
    secondary_vertices = cms.InputTag( "hltDeepInclusiveMergedVerticesPF" ),
    pf_candidates = cms.InputTag( "hltParticleFlow" ),
    jets = cms.InputTag( "hltPFJetForBtagMinPt10" ),
    unsubjet_map = cms.InputTag( "" ),
    puppi_value_map = cms.InputTag( "" ),
    vertex_associator = cms.InputTag( 'hltPrimaryVertexAssociationMinPt10','original' ),
    use_scouting_features = cms.bool( False ),
    normchi2_value_map = cms.InputTag( "" ),
    dz_value_map = cms.InputTag( "" ),
    dxy_value_map = cms.InputTag( "" ),
    dzsig_value_map = cms.InputTag( "" ),
    dxysig_value_map = cms.InputTag( "" ),
    lostInnerHits_value_map = cms.InputTag( "" ),
    quality_value_map = cms.InputTag( "" ),
    trkPt_value_map = cms.InputTag( "" ),
    trkEta_value_map = cms.InputTag( "" ),
    trkPhi_value_map = cms.InputTag( "" ),
    covarianceVersion = cms.int32( 1 ),
    covariancePackingSchemas = cms.vint32( 8, 264, 520, 776, 0 )
)
process.hltParticleNetONNXJetTagsMinPt10 = cms.EDProducer( "BoostedJetONNXJetTagsProducer",
    src = cms.InputTag( "hltParticleNetJetTagInfosMinPt10" ),
    preprocess_json = cms.string( "RecoBTag/Combined/data/HLT/ParticleNetAK4/V01/preprocess.json" ),
    preprocessParams = cms.PSet(  ),
    model_path = cms.FileInPath( "RecoBTag/Combined/data/HLT/ParticleNetAK4/V01/particle-net.onnx" ),
    flav_names = cms.vstring( 'probtauhp',
      'probtauhm',
      'probb',
      'probc',
      'probuds',
      'probg',
      'ptcorr' ),
    jets = cms.InputTag( "" ),
    produceValueMap = cms.untracked.bool( False ),
    debugMode = cms.untracked.bool( False )
)
process.hltParticleNetDiscriminatorsJetTagsMinPt10 = cms.EDProducer( "BTagProbabilityToDiscriminator",
    discriminators = cms.VPSet( 
      cms.PSet(  name = cms.string( "BvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt10:probb' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt10:probb','hltParticleNetONNXJetTagsMinPt10:probc','hltParticleNetONNXJetTagsMinPt10:probuds','hltParticleNetONNXJetTagsMinPt10:probg' )
      ),
      cms.PSet(  name = cms.string( "CvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt10:probc' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt10:probb','hltParticleNetONNXJetTagsMinPt10:probc','hltParticleNetONNXJetTagsMinPt10:probuds','hltParticleNetONNXJetTagsMinPt10:probg' )
      ),
      cms.PSet(  name = cms.string( "TauhvsAll" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt10:probtauhp','hltParticleNetONNXJetTagsMinPt10:probtauhm' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt10:probb','hltParticleNetONNXJetTagsMinPt10:probc','hltParticleNetONNXJetTagsMinPt10:probuds','hltParticleNetONNXJetTagsMinPt10:probg','hltParticleNetONNXJetTagsMinPt10:probtauhp','hltParticleNetONNXJetTagsMinPt10:probtauhm' )
      ),
      cms.PSet(  name = cms.string( "CvsL" ),
        numerator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt10:probc' ),
        denominator = cms.VInputTag( 'hltParticleNetONNXJetTagsMinPt10:probc','hltParticleNetONNXJetTagsMinPt10:probuds','hltParticleNetONNXJetTagsMinPt10:probg' )
      )
    )
)
process.hltSinglePFJet10PNetTauhTagVLooseWPL2SingleTau = cms.EDFilter( "TauTagFilter",
    saveTags = cms.bool( True ),
    nExpected = cms.int32( 1 ),
    taus = cms.InputTag( "hltPFJetForBtagMinPt10" ),
    tauTags = cms.InputTag( 'hltParticleNetDiscriminatorsJetTagsMinPt10','TauhvsAll' ),
    tauPtCorr = cms.InputTag( 'hltParticleNetONNXJetTagsMinPt10','ptcorr' ),
    seeds = cms.InputTag( "hltL2GlobIsoTau10" ),
    seedTypes = cms.vint32( -100 ),
    selection = cms.string( "double t1 = 0.001; return t1;" ),
    minPt = cms.double( 10.0 ),
    maxEta = cms.double( 2.3 ),
    usePtCorr = cms.bool( True ),
    matchWithSeeds = cms.bool( False ),
    matchingdR = cms.double( 0.5 )
)
process.hltL1sMuShowerOneNominalORTwoLoose = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMuShower_Nominal OR L1_TwoMuShower_Loose" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreDoubleCscCluster75 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltCscDoubleCluster75 = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltCSCrechitClusters" ),
    MinN = cms.int32( 2 ),
    MinSize = cms.int32( -1 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( 75, 75, 75, 75 ),
    Max_nMB1 = cms.int32( -1 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( 0 ),
    Max_nME12 = cms.int32( 0 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -5.0 ),
    MaxTime = cms.double( 12.5 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltPreIsoTrk200L1SingleMuShower = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDeDxEstimatorProducer = cms.EDProducer( "DeDxEstimatorProducer",
    estimator = cms.string( "generic" ),
    tracks = cms.InputTag( "hltMergedTracks" ),
    UsePixel = cms.bool( False ),
    UseStrip = cms.bool( True ),
    MeVperADCPixel = cms.double( 3.61E-6 ),
    MeVperADCStrip = cms.double( 9.5665E-4 ),
    ShapeTest = cms.bool( False ),
    UseCalibration = cms.bool( False ),
    calibrationPath = cms.string( "" ),
    Record = cms.string( "SiStripDeDxMip_3D_Rcd" ),
    ProbabilityMode = cms.string( "Accumulation" ),
    fraction = cms.double( 0.4 ),
    exponent = cms.double( -2.0 ),
    truncate = cms.bool( True )
)
process.hltTrk200MuonEndcapFilter = cms.EDFilter( "HLTDeDxFilter",
    saveTags = cms.bool( True ),
    minDEDx = cms.double( -1.0 ),
    minPT = cms.double( 200.0 ),
    minNOM = cms.double( -1.0 ),
    minETA = cms.double( 0.9 ),
    maxETA = cms.double( 2.4 ),
    minNumValidHits = cms.double( 5.0 ),
    maxNHitMissIn = cms.double( 0.0 ),
    maxNHitMissMid = cms.double( 0.0 ),
    maxRelTrkIsoDeltaRp3 = cms.double( 0.05 ),
    relTrkIsoDeltaRSize = cms.double( 0.3 ),
    maxAssocCaloE = cms.double( -1.0 ),
    maxAssocCaloEDeltaRSize = cms.double( -1.0 ),
    caloTowersTag = cms.InputTag( "notUsed" ),
    inputTracksTag = cms.InputTag( "hltMergedTracks" ),
    inputDeDxTag = cms.InputTag( "hltDeDxEstimatorProducer" )
)
process.hltPreIsoTrk400L1SingleMuShower = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltTrk400MuonEndcapFilter = cms.EDFilter( "HLTDeDxFilter",
    saveTags = cms.bool( True ),
    minDEDx = cms.double( -1.0 ),
    minPT = cms.double( 400.0 ),
    minNOM = cms.double( -1.0 ),
    minETA = cms.double( 0.9 ),
    maxETA = cms.double( 2.4 ),
    minNumValidHits = cms.double( 5.0 ),
    maxNHitMissIn = cms.double( 0.0 ),
    maxNHitMissMid = cms.double( 0.0 ),
    maxRelTrkIsoDeltaRp3 = cms.double( 0.05 ),
    relTrkIsoDeltaRSize = cms.double( 0.3 ),
    maxAssocCaloE = cms.double( -1.0 ),
    maxAssocCaloEDeltaRSize = cms.double( -1.0 ),
    caloTowersTag = cms.InputTag( "notUsed" ),
    inputTracksTag = cms.InputTag( "hltMergedTracks" ),
    inputDeDxTag = cms.InputTag( "hltDeDxEstimatorProducer" )
)
process.hltPreDoubleCscCluster100 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltCscDoubleCluster100 = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltCSCrechitClusters" ),
    MinN = cms.int32( 2 ),
    MinSize = cms.int32( -1 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( 100, 100, 100, 100 ),
    Max_nMB1 = cms.int32( -1 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( 0 ),
    Max_nME12 = cms.int32( 0 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -5.0 ),
    MaxTime = cms.double( 12.5 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltPreL1CSCShowerDTCluster50 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDTrechitClusters = cms.EDProducer( "DTrechitClusterProducer",
    nRechitMin = cms.int32( 50 ),
    rParam = cms.double( 0.4 ),
    nStationThres = cms.int32( 10 ),
    recHitLabel = cms.InputTag( "hltDt1DRecHits" )
)
process.hltDTCluster50NoMB1 = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltDTrechitClusters" ),
    MinN = cms.int32( 1 ),
    MinSize = cms.int32( 50 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( -1, -1, -1, -1 ),
    Max_nMB1 = cms.int32( 0 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( -1 ),
    Max_nME12 = cms.int32( -1 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -999.0 ),
    MaxTime = cms.double( 999.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltPreL1CSCShowerDTCluster75 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDTCluster75NoMB1 = cms.EDFilter( "HLTMuonRecHitClusterFilter",
    ClusterTag = cms.InputTag( "hltDTrechitClusters" ),
    MinN = cms.int32( 1 ),
    MinSize = cms.int32( 75 ),
    MinSizeMinusMB1 = cms.int32( -1 ),
    MinSizeRegionCutEtas = cms.vdouble( -1.0, -1.0, 1.9, 1.9 ),
    MaxSizeRegionCutEtas = cms.vdouble( 1.9, 1.9, -1.0, -1.0 ),
    MinSizeRegionCutNstations = cms.vint32( -1, 1, -1, 1 ),
    MaxSizeRegionCutNstations = cms.vint32( 1, -1, 1, -1 ),
    MinSizeRegionCutClusterSize = cms.vint32( -1, -1, -1, -1 ),
    Max_nMB1 = cms.int32( 0 ),
    Max_nMB2 = cms.int32( -1 ),
    Max_nME11 = cms.int32( -1 ),
    Max_nME12 = cms.int32( -1 ),
    Max_nME41 = cms.int32( -1 ),
    Max_nME42 = cms.int32( -1 ),
    MinNstation = cms.int32( 0 ),
    MinAvgStation = cms.double( 0.0 ),
    MinTime = cms.double( -999.0 ),
    MaxTime = cms.double( 999.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( -1.0 ),
    MaxTimeSpread = cms.double( -1.0 )
)
process.hltL1sL1SingleMuShower = cms.EDFilter( "HLTL1TSeed",
    saveTags = cms.bool( True ),
    L1SeedsLogicalExpression = cms.string( "L1_SingleMuShower_Nominal OR L1_SingleMuShower_Tight" ),
    L1ObjectMapInputTag = cms.InputTag( "hltGtStage2ObjectMap" ),
    L1GlobalInputTag = cms.InputTag( "hltGtStage2Digis" ),
    L1MuonInputTag = cms.InputTag( 'hltGtStage2Digis','Muon' ),
    L1MuonShowerInputTag = cms.InputTag( 'hltGtStage2Digis','MuonShower' ),
    L1EGammaInputTag = cms.InputTag( 'hltGtStage2Digis','EGamma' ),
    L1JetInputTag = cms.InputTag( 'hltGtStage2Digis','Jet' ),
    L1TauInputTag = cms.InputTag( 'hltGtStage2Digis','Tau' ),
    L1EtSumInputTag = cms.InputTag( 'hltGtStage2Digis','EtSum' ),
    L1EtSumZdcInputTag = cms.InputTag( 'hltGtStage2Digis','EtSumZDC' )
)
process.hltPreMu50L1SingleMuShower = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreIsoMu24OneProng32 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFTau32 = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltPFTaus" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 32.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPFTau32Track = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltSelectedPFTausTrackFinding" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 32.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPFTau1Prong = cms.EDProducer( "PFRecoTauDiscriminationByNProngs",
    qualityCuts = cms.PSet( 
      vertexTrackFiltering = cms.bool( False ),
      isolationQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.1 ),
        minTrackPt = cms.double( 0.5 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      recoverLeadingTrk = cms.bool( False ),
      signalQualityCuts = cms.PSet( 
        minNeutralHadronEt = cms.double( 30.0 ),
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" )
    ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    BooleanOutput = cms.bool( True ),
    PFTauProducer = cms.InputTag( "hltPFTaus" ),
    MinN = cms.uint32( 1 ),
    MaxN = cms.uint32( 1 )
)
process.hltSelectedPFTausTrackFindingMediumChargedIsolationAndOneProng = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltPFTaus" ),
    cut = cms.string( "pt > 0" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltPFTauTrackFindingDiscriminator" ),
        selectionCut = cms.double( 0.5 )
      ),
      cms.PSet(  discriminator = cms.InputTag( "hltPFTauMediumAbsOrRelChargedIsolationDiscriminator" ),
        selectionCut = cms.double( 0.5 )
      ),
      cms.PSet(  discriminator = cms.InputTag( "hltPFTau1Prong" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
    )
)
process.hltPFTau32TrackMediumChargedIso = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltSelectedPFTausTrackFindingMediumChargedIsolationAndOneProng" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 32.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.5 ),
    MinN = cms.int32( 1 )
)
process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS30L2NNeta2p1OneProngCrossL1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPFTau1ProngHPS = cms.EDProducer( "PFRecoTauDiscriminationByNProngs",
    qualityCuts = cms.PSet( 
      vertexTrackFiltering = cms.bool( False ),
      isolationQualityCuts = cms.PSet( 
        maxDeltaZ = cms.double( 0.1 ),
        minTrackPt = cms.double( 0.5 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 100.0 ),
        maxTransverseImpactParameter = cms.double( 0.1 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      primaryVertexSrc = cms.InputTag( "hltPixelVertices" ),
      recoverLeadingTrk = cms.bool( False ),
      signalQualityCuts = cms.PSet( 
        minNeutralHadronEt = cms.double( 30.0 ),
        maxDeltaZ = cms.double( 0.2 ),
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      leadingTrkOrPFCandOption = cms.string( "leadPFCand" ),
      vxAssocQualityCuts = cms.PSet( 
        minTrackPt = cms.double( 0.0 ),
        minGammaEt = cms.double( 0.5 ),
        minTrackHits = cms.uint32( 3 ),
        minTrackPixelHits = cms.uint32( 0 ),
        maxTrackChi2 = cms.double( 1000.0 ),
        maxTransverseImpactParameter = cms.double( 0.2 ),
        minTrackVertexWeight = cms.double( -1.0 )
      ),
      pvFindingAlgo = cms.string( "closestInDeltaZ" )
    ),
    Prediscriminants = cms.PSet(  BooleanOperator = cms.string( "and" ) ),
    BooleanOutput = cms.bool( True ),
    PFTauProducer = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    MinN = cms.uint32( 1 ),
    MaxN = cms.uint32( 1 )
)
process.hltHpsSelectedPFTausMediumDitauWPDeepTau30 = cms.EDFilter( "PFTauSelector",
    src = cms.InputTag( "hltHpsL1JetsHLTForDeepTauInput" ),
    cut = cms.string( "pt > 30 && abs(eta) < 2.1" ),
    discriminators = cms.VPSet( 
      cms.PSet(  discriminator = cms.InputTag( "hltPFTau1ProngHPS" ),
        selectionCut = cms.double( 0.5 )
      )
    ),
    discriminatorContainers = cms.VPSet( 
      cms.PSet(  workingPoints = cms.vstring( 'double t1 = 0.649, t2 = 0.441, t3 = 0.05, x1 = 35, x2 = 100, x3 = 300; if (pt <= x1) return t1; if (pt >= x3) return t3; if (pt < x2) return (t2 - t1) / (x2 - x1) * (pt - x1) + t1; return (t3 - t2) / (x3 - x2) * (pt - x2) + t2;' ),
        discriminator = cms.InputTag( 'hltHpsPFTauDeepTauProducer','VSjet' ),
        selectionCuts = cms.vdouble(  ),
        rawValues = cms.vstring(  )
      )
    )
)
process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauVeryBigOrMu18erTauXXerMatchMonitoring = cms.EDProducer( "L1THLTTauMatching",
    L1TauTrigger = cms.InputTag( "hltL1sVeryBigORMu18erTauXXer2p1" ),
    JetSrc = cms.InputTag( "hltHpsSelectedPFTausMediumDitauWPDeepTau30" ),
    EtMin = cms.double( 0.0 ),
    ReduceTauContent = cms.bool( True ),
    KeepOriginalVertex = cms.bool( False )
)
process.hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatchedMonitoring = cms.EDFilter( "HLT1PFTau",
    saveTags = cms.bool( True ),
    inputTag = cms.InputTag( "hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauVeryBigOrMu18erTauXXerMatchMonitoring" ),
    triggerType = cms.int32( 84 ),
    MinE = cms.double( -1.0 ),
    MinPt = cms.double( 30.0 ),
    MinMass = cms.double( -1.0 ),
    MaxMass = cms.double( -1.0 ),
    MinEta = cms.double( -1.0 ),
    MaxEta = cms.double( 2.1 ),
    MinN = cms.int32( 1 )
)
process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau30OneProngMonitoring = cms.EDFilter( "HLT2MuonPFTau",
    saveTags = cms.bool( True ),
    originTag1 = cms.VInputTag( 'hltIterL3MuonCandidates' ),
    originTag2 = cms.VInputTag( 'hltHpsSelectedPFTausMediumDitauWPDeepTau30' ),
    inputTag1 = cms.InputTag( "hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered" ),
    inputTag2 = cms.InputTag( "hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatchedMonitoring" ),
    triggerType1 = cms.int32( 83 ),
    triggerType2 = cms.int32( 84 ),
    MinDeta = cms.double( 1.0 ),
    MaxDeta = cms.double( -1.0 ),
    MinDphi = cms.double( 0.0 ),
    MaxDphi = cms.double( -1.0 ),
    MinDelR = cms.double( 0.3 ),
    MaxDelR = cms.double( 99999.0 ),
    MinPt = cms.double( 1.0 ),
    MaxPt = cms.double( -1.0 ),
    MinMinv = cms.double( 0.0 ),
    MaxMinv = cms.double( -1.0 ),
    MinN = cms.int32( 1 )
)
process.hltDatasetMuon = cms.EDFilter( "TriggerResultsFilter",
    usePathStatus = cms.bool( True ),
    hltResults = cms.InputTag( "" ),
    l1tResults = cms.InputTag( "" ),
    l1tIgnoreMaskAndPrescale = cms.bool( False ),
    throw = cms.bool( True ),
    triggerConditions = cms.vstring( 'HLT_CascadeMu100_v11',
      'HLT_CscCluster100_Ele5_v2',
      'HLT_CscCluster100_Mu5_v2',
      'HLT_CscCluster100_PNetTauhPFJet10_Loose_v2',
      'HLT_CscCluster50_Photon20Unseeded_v2',
      'HLT_CscCluster50_Photon30Unseeded_v2',
      'HLT_CscCluster_Loose_v8',
      'HLT_CscCluster_Medium_v8',
      'HLT_CscCluster_Tight_v8',
      'HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v4',
      'HLT_DoubleCscCluster100_v5',
      'HLT_DoubleCscCluster75_v5',
      'HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8',
      'HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9',
      'HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8',
      'HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8',
      'HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8',
      'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9',
      'HLT_DoubleL2Mu23NoVtx_2Cha_v9',
      'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
      'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9',
      'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9',
      'HLT_DoubleL2Mu25NoVtx_2Cha_v9',
      'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9',
      'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9',
      'HLT_DoubleL2Mu50_v9',
      'HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
      'HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8',
      'HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9',
      'HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8',
      'HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8',
      'HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8',
      'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v2',
      'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v2',
      'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v18',
      'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v18',
      'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v18',
      'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v18',
      'HLT_DoubleMu43NoFiltersNoVtx_v12',
      'HLT_DoubleMu48NoFiltersNoVtx_v12',
      'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v16',
      'HLT_HighPtTkMu100_v10',
      'HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v9',
      'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v2',
      'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v2',
      'HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v2',
      'HLT_IsoMu20_v23',
      'HLT_IsoMu24_OneProng32_v5',
      'HLT_IsoMu24_TwoProngs35_v9',
      'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v9',
      'HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9',
      'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v8',
      'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v8',
      'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v4',
      'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v8',
      'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v8',
      'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v9',
      'HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v8',
      'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v2',
      'HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v2',
      'HLT_IsoMu24_eta2p1_PFHT250_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v2',
      'HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v2',
      'HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v2',
      'HLT_IsoMu24_eta2p1_v23',
      'HLT_IsoMu24_v21',
      'HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v4',
      'HLT_IsoMu27_v24',
      'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5',
      'HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v8',
      'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5',
      'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5',
      'HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v8',
      'HLT_IsoTrk200_L1SingleMuShower_v2',
      'HLT_IsoTrk400_L1SingleMuShower_v2',
      'HLT_L1CSCShower_DTCluster50_v8',
      'HLT_L1CSCShower_DTCluster75_v8',
      'HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v1',
      'HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v1',
      'HLT_L3Mu30NoVtx_DxyMin0p01cm_v1',
      'HLT_L3Mu50NoVtx_DxyMin0p01cm_v1',
      'HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8',
      'HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v1',
      'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v23',
      'HLT_Mu15_IsoVVVL_PFHT450_v23',
      'HLT_Mu15_IsoVVVL_PFHT600_v27',
      'HLT_Mu15_v11',
      'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v13',
      'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v1',
      'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v1',
      'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v1',
      'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v2',
      'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v13',
      'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v23',
      'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v22',
      'HLT_Mu17_TrkIsoVVL_v21',
      'HLT_Mu17_v21',
      'HLT_Mu18_Mu9_SameSign_v12',
      'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v11',
      'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v11',
      'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v11',
      'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v11',
      'HLT_Mu19_TrkIsoVVL_v12',
      'HLT_Mu19_v12',
      'HLT_Mu20_v20',
      'HLT_Mu27_v21',
      'HLT_Mu37_TkMu27_v13',
      'HLT_Mu3_PFJet40_v24',
      'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v10',
      'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v10',
      'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v10',
      'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v10',
      'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v10',
      'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v10',
      'HLT_Mu50_IsoVVVL_PFHT450_v23',
      'HLT_Mu50_L1SingleMuShower_v7',
      'HLT_Mu50_v21',
      'HLT_Mu55_v11',
      'HLT_Mu8_TrkIsoVVL_v20',
      'HLT_Mu8_v20',
      'HLT_TripleMu_10_5_5_DZ_v18',
      'HLT_TripleMu_12_10_5_v18',
      'HLT_TripleMu_5_3_3_Mass3p8_DCA_v11',
      'HLT_TripleMu_5_3_3_Mass3p8_DZ_v16',
      'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v14' )
)
process.hltPreDatasetMuon0 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltPreDatasetMuon1 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 1 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)
process.hltDatasetScoutingPFRun3 = cms.EDFilter( "TriggerResultsFilter",
    usePathStatus = cms.bool( True ),
    hltResults = cms.InputTag( "" ),
    l1tResults = cms.InputTag( "" ),
    l1tIgnoreMaskAndPrescale = cms.bool( False ),
    throw = cms.bool( True ),
    triggerConditions = cms.vstring( 'DST_PFScouting_AXONominal_v2',
      'DST_PFScouting_AXOTight_v2',
      'DST_PFScouting_DatasetMuon_v2',
      'DST_PFScouting_DoubleEG_v2',
      'DST_PFScouting_DoubleMuon_v2',
      'DST_PFScouting_JetHT_v2',
      'DST_PFScouting_SingleMuon_v2' )
)
process.hltPreDatasetScoutingPFRun3 = cms.EDFilter( "HLTPrescaler",
    offset = cms.uint32( 0 ),
    L1GtReadoutRecordTag = cms.InputTag( "hltGtStage2Digis" )
)

process.hltHbhereco = SwitchProducerCUDA(
   cpu = cms.EDAlias(
       hltHbherecoLegacy = cms.VPSet( 
         cms.PSet(  type = cms.string( "*" )         )
       )
   ),
  cuda = cms.EDAlias(
       hltHbherecoFromGPU = cms.VPSet( 
         cms.PSet(  type = cms.string( "HBHERecHitsSorted" )         )
       )
   ),
 )

process.hltOutputScoutingPF = cms.OutputModule( "PoolOutputModule",
    fileName = cms.untracked.string( "outputScoutingPF.root" ),
    compressionAlgorithm = cms.untracked.string( "ZSTD" ),
    compressionLevel = cms.untracked.int32( 3 ),
    fastCloning = cms.untracked.bool( False ),
    dataset = cms.untracked.PSet(
        filterName = cms.untracked.string( "" ),
        dataTier = cms.untracked.string( "RAW" )
    ),
    SelectEvents = cms.untracked.PSet(  SelectEvents = cms.vstring( 'Dataset_ScoutingPFRun3' ) ),
    outputCommands = cms.untracked.vstring( 'drop *',
      'keep *_hltFEDSelectorL1_*_*',
      'keep *_hltScoutingEgammaPacker_*_*',
      'keep *_hltScoutingMuonPackerNoVtx_*_*',
      'keep *_hltScoutingMuonPackerVtx_*_*',
      'keep *_hltScoutingMuonPacker_*_*',
      'keep *_hltScoutingPFPacker_*_*',
      'keep *_hltScoutingPrimaryVertexPacker_*_*',
      'keep *_hltScoutingTrackPacker_*_*',
      'keep *_genParticles_*_*',
      'keep edmTriggerResults_*_*_*' )
)

process.HLTDoLocalHcalTask = cms.ConditionalTask( process.hltHcalDigis , process.hltHcalDigisGPU , process.hltHbherecoLegacy , process.hltHbherecoGPU , process.hltHbherecoFromGPU , process.hltHbhereco , process.hltHfprereco , process.hltHfreco , process.hltHoreco )

process.HLTL1UnpackerSequence = cms.Sequence( process.hltGtStage2Digis + process.hltGtStage2ObjectMap )
process.HLTBeamSpot = cms.Sequence( process.hltOnlineMetaDataDigis + process.hltOnlineBeamSpot )
process.HLTBeginSequence = cms.Sequence( process.hltTriggerType + process.HLTL1UnpackerSequence + process.HLTBeamSpot )
process.HLTMuonLocalRecoSequence = cms.Sequence( process.hltMuonDTDigis + process.hltDt1DRecHits + process.hltDt4DSegments + process.hltMuonCSCDigis + process.hltCsc2DRecHits + process.hltCscSegments + process.hltMuonRPCDigis + process.hltRpcRecHits + process.hltMuonGEMDigis + process.hltGemRecHits + process.hltGemSegments )
process.HLTL2muonrecoNocandSequence = cms.Sequence( process.HLTMuonLocalRecoSequence + process.hltL2OfflineMuonSeeds + process.hltL2MuonSeeds + process.hltL2Muons )
process.HLTL2muonrecoSequenceNoVtx = cms.Sequence( process.HLTL2muonrecoNocandSequence + process.hltL2MuonCandidatesNoVtx )
process.HLTDoLocalPixelSequence = cms.Sequence( process.hltOnlineBeamSpotDevice + process.hltSiPixelClustersSoA + process.hltSiPixelClusters + process.hltSiPixelDigiErrors + process.hltSiPixelRecHitsSoA + process.hltSiPixelRecHits )
process.HLTDoLocalStripSequence = cms.Sequence( process.hltSiStripExcludedFEDListProducer + process.hltSiStripRawToClustersFacility + process.hltMeasurementTrackerEvent )
process.HLTIterL3OImuonTkCandidateSequenceNoVtx = cms.Sequence( process.hltIterL3OISeedsFromL2MuonsNoVtx + process.hltIterL3OITrackCandidatesNoVtx + process.hltIterL3OIMuCtfWithMaterialTracksNoVtx + process.hltIterL3OIMuonTrackCutClassifierNoVtx + process.hltIterL3OIMuonTrackSelectionHighPurityNoVtx + process.hltL3MuonsIterL3OINoVtx )
process.HLTRecoPixelTracksSequence = cms.Sequence( process.hltPixelTracksSoA + process.hltPixelTracks )
process.HLTRecopixelvertexingSequence = cms.Sequence( process.HLTRecoPixelTracksSequence + process.hltPixelVerticesSoA + process.hltPixelVertices + process.hltTrimmedPixelVertices )
process.HLTIterL3MuonRecoPixelTracksSequenceNoVtx = cms.Sequence( process.HLTRecopixelvertexingSequence + process.hltIterL3MuonPixelTracksTrackingRegionsNoVtx + process.hltPixelTracksInRegionL2NoVtx )
process.HLTIterL3MuonRecopixelvertexingSequenceNoVtx = cms.Sequence( process.HLTIterL3MuonRecoPixelTracksSequenceNoVtx )
process.HLTIterativeTrackingIteration0ForIterL3MuonNoVtx = cms.Sequence( process.hltIter0IterL3MuonPixelSeedsFromPixelTracksNoVtx + process.hltIter0IterL3MuonCkfTrackCandidatesNoVtx + process.hltIter0IterL3MuonCtfWithMaterialTracksNoVtx + process.hltIter0IterL3MuonTrackCutClassifierNoVtx + process.hltIter0IterL3MuonTrackSelectionHighPurityNoVtx )
process.HLTIterL3IOmuonTkCandidateSequenceNoVtx = cms.Sequence( process.HLTIterL3MuonRecopixelvertexingSequenceNoVtx + process.HLTIterativeTrackingIteration0ForIterL3MuonNoVtx + process.hltL3MuonsIterL3IONoVtx )
process.HLTIterL3OIAndIOFromL2muonTkCandidateSequenceNoVtx = cms.Sequence( process.HLTIterL3OImuonTkCandidateSequenceNoVtx + process.hltIterL3OIL3MuonsLinksCombinationNoVtx + process.hltIterL3OIL3MuonsNoVtx + process.hltIterL3OIL3MuonCandidatesNoVtx + process.hltL2SelectorForL3IONoVtx + process.HLTIterL3IOmuonTkCandidateSequenceNoVtx + process.hltIterL3MuonsFromL2LinksCombinationNoVtx + process.hltIterL3MuonsFromL2NoVtx )
process.HLTRecopixelvertexingSequenceForIterL3FromL1MuonNoVtx = cms.Sequence( process.HLTRecopixelvertexingSequence + process.hltIterL3FromL1MuonPixelTracksTrackingRegionsNoVtx + process.hltPixelTracksInRegionL1NoVtx )
process.HLTIterativeTrackingIteration0ForIterL3FromL1MuonNoVtx = cms.Sequence( process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracksNoVtx + process.hltIter0IterL3FromL1MuonCkfTrackCandidatesNoVtx + process.hltIter0IterL3FromL1MuonCtfWithMaterialTracksNoVtx + process.hltIter0IterL3FromL1MuonTrackCutClassifierNoVtx + process.hltIter0IterL3FromL1MuonTrackSelectionHighPurityNoVtx )
process.HLTIterativeTrackingIteration3ForIterL3FromL1MuonNoVtx = cms.Sequence( process.hltIter3IterL3FromL1MuonClustersRefRemovalNoVtx + process.hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEventNoVtx + process.hltIter3IterL3FromL1MuonPixelLayersAndRegionsNoVtx + process.hltIter3IterL3FromL1MuonTrackingRegionsNoVtx + process.hltIter3IterL3FromL1MuonPixelClusterCheckNoVtx + process.hltIter3IterL3FromL1MuonPixelHitDoubletsNoVtx + process.hltIter3IterL3FromL1MuonPixelSeedsNoVtx + process.hltIter3IterL3FromL1MuonCkfTrackCandidatesNoVtx + process.hltIter3IterL3FromL1MuonCtfWithMaterialTracksNoVtx + process.hltIter3IterL3FromL1MuonTrackCutClassifierNoVtx + process.hltIter3IterL3FromL1MuonTrackSelectionHighPurityNoVtx )
process.HLTIterL3IOmuonFromL1TkCandidateSequenceNoVtx = cms.Sequence( process.HLTRecopixelvertexingSequenceForIterL3FromL1MuonNoVtx + process.HLTIterativeTrackingIteration0ForIterL3FromL1MuonNoVtx + process.HLTIterativeTrackingIteration3ForIterL3FromL1MuonNoVtx )
process.HLTIterL3muonTkCandidateSequenceNoVtx = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTIterL3OIAndIOFromL2muonTkCandidateSequenceNoVtx + process.hltIterL3MuonL1MuonNoL2SelectorNoVtx + process.HLTIterL3IOmuonFromL1TkCandidateSequenceNoVtx )
process.HLTL3muonrecoNocandSequenceNoVtx = cms.Sequence( process.HLTIterL3muonTkCandidateSequenceNoVtx + process.hltIter03IterL3FromL1MuonMergedNoVtx + process.hltIterL3MuonMergedNoVtx + process.hltIterL3MuonAndMuonFromL1MergedNoVtx + process.hltL3MuonsIterL3LinksNoVtx + process.hltIterL3MuonsNoVtx )
process.HLTL3muonrecoSequenceNoVtx = cms.Sequence( process.HLTL3muonrecoNocandSequenceNoVtx + process.hltIterL3MuonCandidatesNoVtx )
process.HLTDoubleMuonScoutingNoVtx = cms.Sequence( process.hltL1fL1sL1DoubleMuonScouting + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1sL1DoubleMuonScouting + process.HLTL3muonrecoSequenceNoVtx + process.hltDoubleMuonL3PreFilteredScoutingNoVtx + process.hltDoubleMuonL3FilteredScoutingNoVtx )
process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence = cms.Sequence( process.hltEcalDigisLegacy + process.hltEcalDigisSoA + process.hltEcalDigis + process.hltEcalUncalibRecHitSoA + process.hltEcalUncalibRecHit + process.hltEcalDetIdToBeRecovered + process.hltEcalRecHit )
process.HLTDoLocalHcalSequence = cms.Sequence( process.HLTDoLocalHcalTask )
process.HLTDoCaloSequencePF = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence + process.HLTDoLocalHcalSequence + process.hltTowerMakerForAll )
process.HLTAK4CaloJetsPrePFRecoSequence = cms.Sequence( process.HLTDoCaloSequencePF + process.hltAK4CaloJetsPF )
process.HLTPreAK4PFJetsRecoSequence = cms.Sequence( process.HLTAK4CaloJetsPrePFRecoSequence + process.hltAK4CaloJetsPFEt5 )
process.HLTL2muonrecoSequence = cms.Sequence( process.HLTL2muonrecoNocandSequence + process.hltL2MuonCandidates )
process.HLTIterL3OImuonTkCandidateSequence = cms.Sequence( process.hltIterL3OISeedsFromL2Muons + process.hltIterL3OITrackCandidates + process.hltIterL3OIMuCtfWithMaterialTracks + process.hltIterL3OIMuonTrackCutClassifier + process.hltIterL3OIMuonTrackSelectionHighPurity + process.hltL3MuonsIterL3OI )
process.HLTIterL3MuonRecopixelvertexingSequence = cms.Sequence( process.HLTRecopixelvertexingSequence + process.hltIterL3MuonPixelTracksTrackingRegions + process.hltPixelTracksInRegionL2 )
process.HLTIterativeTrackingIteration0ForIterL3Muon = cms.Sequence( process.hltIter0IterL3MuonPixelSeedsFromPixelTracks + process.hltIter0IterL3MuonPixelSeedsFromPixelTracksFiltered + process.hltIter0IterL3MuonCkfTrackCandidates + process.hltIter0IterL3MuonCtfWithMaterialTracks + process.hltIter0IterL3MuonTrackCutClassifier + process.hltIter0IterL3MuonTrackSelectionHighPurity )
process.HLTIterL3IOmuonTkCandidateSequence = cms.Sequence( process.HLTIterL3MuonRecopixelvertexingSequence + process.HLTIterativeTrackingIteration0ForIterL3Muon + process.hltL3MuonsIterL3IO )
process.HLTIterL3OIAndIOFromL2muonTkCandidateSequence = cms.Sequence( process.HLTIterL3OImuonTkCandidateSequence + process.hltIterL3OIL3MuonsLinksCombination + process.hltIterL3OIL3Muons + process.hltIterL3OIL3MuonCandidates + process.hltL2SelectorForL3IO + process.HLTIterL3IOmuonTkCandidateSequence + process.hltIterL3MuonsFromL2LinksCombination )
process.HLTRecopixelvertexingSequenceForIterL3FromL1Muon = cms.Sequence( process.HLTRecopixelvertexingSequence + process.hltIterL3FromL1MuonPixelTracksTrackingRegions + process.hltPixelTracksInRegionL1 )
process.HLTIterativeTrackingIteration0ForIterL3FromL1Muon = cms.Sequence( process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracks + process.hltIter0IterL3FromL1MuonPixelSeedsFromPixelTracksFiltered + process.hltIter0IterL3FromL1MuonCkfTrackCandidates + process.hltIter0IterL3FromL1MuonCtfWithMaterialTracks + process.hltIter0IterL3FromL1MuonTrackCutClassifier + process.hltIter0IterL3FromL1MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingIteration3ForIterL3FromL1Muon = cms.Sequence( process.hltIter3IterL3FromL1MuonClustersRefRemoval + process.hltIter3IterL3FromL1MuonMaskedMeasurementTrackerEvent + process.hltIter3IterL3FromL1MuonPixelLayersAndRegions + process.hltIter3IterL3FromL1MuonTrackingRegions + process.hltIter3IterL3FromL1MuonPixelClusterCheck + process.hltIter3IterL3FromL1MuonPixelHitDoublets + process.hltIter3IterL3FromL1MuonPixelSeeds + process.hltIter3IterL3FromL1MuonCkfTrackCandidates + process.hltIter3IterL3FromL1MuonCtfWithMaterialTracks + process.hltIter3IterL3FromL1MuonTrackCutClassifier + process.hltIter3IterL3FromL1MuonTrackSelectionHighPurity )
process.HLTIterL3IOmuonFromL1TkCandidateSequence = cms.Sequence( process.HLTRecopixelvertexingSequenceForIterL3FromL1Muon + process.HLTIterativeTrackingIteration0ForIterL3FromL1Muon + process.HLTIterativeTrackingIteration3ForIterL3FromL1Muon )
process.HLTIterL3muonTkCandidateSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTIterL3OIAndIOFromL2muonTkCandidateSequence + process.hltL1MuonsPt0 + process.HLTIterL3IOmuonFromL1TkCandidateSequence )
process.HLTL3muonrecoNocandSequence = cms.Sequence( process.HLTIterL3muonTkCandidateSequence + process.hltIter03IterL3FromL1MuonMerged + process.hltIterL3MuonMerged + process.hltIterL3MuonAndMuonFromL1Merged + process.hltIterL3GlbMuon + process.hltIterL3MuonsNoID + process.hltIterL3Muons + process.hltL3MuonsIterL3Links + process.hltIterL3MuonTracks )
process.HLTL3muonrecoSequence = cms.Sequence( process.HLTL3muonrecoNocandSequence + process.hltIterL3MuonCandidates )
process.HLTIterativeTrackingIteration0 = cms.Sequence( process.hltIter0PFLowPixelSeedsFromPixelTracks + process.hltIter0PFlowCkfTrackCandidates + process.hltIter0PFlowCtfWithMaterialTracks + process.hltIter0PFlowTrackCutClassifier + process.hltIter0PFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingDoubletRecovery = cms.Sequence( process.hltDoubletRecoveryClustersRefRemoval + process.hltDoubletRecoveryMaskedMeasurementTrackerEvent + process.hltDoubletRecoveryPixelLayersAndRegions + process.hltDoubletRecoveryPFlowPixelClusterCheck + process.hltDoubletRecoveryPFlowPixelHitDoublets + process.hltDoubletRecoveryPFlowPixelSeeds + process.hltDoubletRecoveryPFlowCkfTrackCandidates + process.hltDoubletRecoveryPFlowCtfWithMaterialTracks + process.hltDoubletRecoveryPFlowTrackCutClassifier + process.hltDoubletRecoveryPFlowTrackSelectionHighPurity )
process.HLTIterativeTrackingIter02 = cms.Sequence( process.HLTIterativeTrackingIteration0 + process.HLTIterativeTrackingDoubletRecovery + process.hltMergedTracks )
process.HLTTrackReconstructionForPF = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecopixelvertexingSequence + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingIter02 + process.hltPFMuonMerging + process.hltMuonLinks + process.hltMuons )
process.HLTPreshowerSequence = cms.Sequence( process.hltEcalPreshowerDigis + process.hltEcalPreshowerRecHit )
process.HLTPFHcalClustering = cms.Sequence( process.hltHbheRecHitSoA + process.hltParticleFlowRecHitHBHESoA + process.hltParticleFlowRecHitHBHE + process.hltParticleFlowClusterHBHESoA + process.hltParticleFlowClusterHBHE + process.hltParticleFlowClusterHCAL )
process.HLTParticleFlowSequence = cms.Sequence( process.HLTPreshowerSequence + process.hltParticleFlowRecHitECALUnseeded + process.hltParticleFlowRecHitHF + process.hltParticleFlowRecHitPSUnseeded + process.hltParticleFlowClusterECALUncorrectedUnseeded + process.hltParticleFlowClusterPSUnseeded + process.hltParticleFlowClusterECALUnseeded + process.HLTPFHcalClustering + process.hltParticleFlowClusterHF + process.hltLightPFTracks + process.hltParticleFlowBlock + process.hltParticleFlow )
process.HLTAK4PFJetsReconstructionSequence = cms.Sequence( process.HLTL2muonrecoSequence + process.HLTL3muonrecoSequence + process.HLTTrackReconstructionForPF + process.HLTParticleFlowSequence + process.hltAK4PFJets + process.hltAK4PFJetsLooseID + process.hltAK4PFJetsTightID )
process.HLTAK4PFCorrectorProducersSequence = cms.Sequence( process.hltAK4PFFastJetCorrector + process.hltAK4PFRelativeCorrector + process.hltAK4PFAbsoluteCorrector + process.hltAK4PFResidualCorrector + process.hltAK4PFCorrector )
process.HLTAK4PFJetsCorrectionSequence = cms.Sequence( process.hltFixedGridRhoFastjetAll + process.HLTAK4PFCorrectorProducersSequence + process.hltAK4PFJetsCorrected + process.hltAK4PFJetsLooseIDCorrected + process.hltAK4PFJetsTightIDCorrected )
process.HLTAK4PFJetsSequence = cms.Sequence( process.HLTPreAK4PFJetsRecoSequence + process.HLTAK4PFJetsReconstructionSequence + process.HLTAK4PFJetsCorrectionSequence )
process.HLTDoFullUnpackingEgammaEcalSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence + process.HLTPreshowerSequence )
process.HLTDoFullUnpackingEgammaEcalMFSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence )
process.HLTPFClusteringEcalMFForMuons = cms.Sequence( process.hltRecHitInRegionForMuonsMF + process.hltRecHitInRegionForMuonsES + process.hltParticleFlowRecHitECALForMuonsMF + process.hltParticleFlowRecHitPSForMuons + process.hltParticleFlowClusterECALUncorrectedForMuonsMF + process.hltParticleFlowClusterPSForMuons + process.hltParticleFlowClusterECALForMuonsMF )
process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalMFSequence + process.HLTDoLocalHcalSequence + process.hltFixedGridRhoFastjetECALMFForMuons + process.hltFixedGridRhoFastjetHCAL + process.HLTPFClusteringEcalMFForMuons + process.hltMuonEcalMFPFClusterIsoForMuons )
process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons = cms.Sequence( process.HLTPFHcalClustering + process.hltMuonHcalRegPFClusterIsoForMuons )
process.HLTIterativeTrackingL3MuonIteration0 = cms.Sequence( process.hltPixelTracksTrackingRegionsForSeedsL3Muon + process.hltPixelTracksInRegionIter0L3Muon + process.hltIter0L3MuonPixelSeedsFromPixelTracks + process.hltIter0L3MuonCkfTrackCandidates + process.hltIter0L3MuonCtfWithMaterialTracks + process.hltIter0L3MuonTrackCutClassifier + process.hltIter0L3MuonTrackSelectionHighPurity )
process.HLTTrackReconstructionForIsoL3MuonIter02 = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingL3MuonIteration0 )
process.HLTMuIsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTPFClusteringForEgammaUnseeded = cms.Sequence( process.hltParticleFlowRecHitECALUnseeded + process.hltParticleFlowRecHitPSUnseeded + process.hltParticleFlowClusterPSUnseeded + process.hltParticleFlowClusterECALUncorrectedUnseeded + process.hltParticleFlowClusterECALUnseeded + process.hltParticleFlowSuperClusterECALUnseeded )
process.HLTFastJetForEgamma = cms.Sequence( process.hltFixedGridRhoFastjetAllCaloForMuons )
process.HLTElePixelMatchUnseededSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.hltPixelLayerPairs + process.hltPixelLayerTriplets + process.hltEgammaHoverEUnseeded + process.hltEgammaSuperClustersToPixelMatchUnseeded + process.hltEleSeedsTrackingRegionsUnseeded + process.hltElePixelHitDoubletsUnseeded + process.hltElePixelHitDoubletsForTripletsUnseeded + process.hltElePixelHitTripletsUnseeded + process.hltElePixelSeedsDoubletsUnseeded + process.hltElePixelSeedsTripletsUnseeded + process.hltElePixelSeedsCombinedUnseeded + process.hltEgammaElectronPixelSeedsUnseeded + process.hltEgammaPixelMatchVarsUnseeded )
process.HLTGsfElectronBestTrkUnseededSequence = cms.Sequence( process.hltEgammaCkfTrackCandidatesForGSFUnseeded + process.hltEgammaGsfTracksUnseeded + process.hltEgammaGsfElectronsUnseeded + process.hltEgammaGsfTrackVarsBestTrkUnseeded )
process.HLTPFScoutingSequence = cms.Sequence( process.HLTAK4PFJetsSequence + process.hltFixedGridRhoFastjetAllCalo + process.hltPFMETProducer + process.HLTMuIsolationSequence + process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltEgammaCandidatesWrapperUnseeded + process.hltEgammaClusterShapeUnseeded + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltEgammaEcalPFClusterIsoUnseeded + process.HLTPFHcalClustering + process.hltEgammaHcalPFClusterIsoUnseeded + process.HLTElePixelMatchUnseededSequence + process.HLTGsfElectronBestTrkUnseededSequence + process.hltEgammaEleGsfTrackIsoUnseeded )
process.HLTPFClusteringEcalMFForMuonsNoVtx = cms.Sequence( process.hltRecHitInRegionForMuonsMFnoVtx + process.hltRecHitInRegionForMuonsESNoVtx + process.hltParticleFlowRecHitECALForMuonsMFNoVtx + process.hltParticleFlowRecHitPSForMuonsNoVtx + process.hltParticleFlowClusterECALUncorrectedForMuonsMFNoVtx + process.hltParticleFlowClusterPSForMuonsNoVtx + process.hltParticleFlowClusterECALForMuonsMFNoVtx )
process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuonsNoVtx = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalMFSequence + process.HLTDoLocalHcalSequence + process.hltFixedGridRhoFastjetECALMFForMuons + process.hltFixedGridRhoFastjetHCAL + process.HLTPFClusteringEcalMFForMuonsNoVtx + process.hltMuonEcalMFPFClusterIsoForMuonsNoVtx )
process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuonsNoVtx = cms.Sequence( process.HLTPFHcalClustering + process.hltMuonHcalPFClusterIsoForMuonsNoVtx )
process.HLTIterativeTrackingL3MuonIteration0NoVtx = cms.Sequence( process.hltPixelTracksTrackingRegionsForSeedsL3MuonNoVtx + process.hltPixelTracksInRegionIter0L3MuonNoVtx + process.hltIter0L3MuonPixelSeedsFromPixelTracksNoVtx + process.hltIter0L3MuonCkfTrackCandidatesNoVtx + process.hltIter0L3MuonCtfWithMaterialTracksNoVtx + process.hltIter0L3MuonTrackCutClassifierNoVtx + process.hltIter0L3MuonTrackSelectionHighPurityNoVtx )
process.HLTTrackReconstructionForIsoL3MuonIter02NoVtx = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingL3MuonIteration0NoVtx )
process.HLTMuIsolationSequenceNoVtx = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuonsNoVtx + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuonsNoVtx + process.HLTTrackReconstructionForIsoL3MuonIter02NoVtx + process.hltMuonTkRelIsolationCut0p09MapNoVtx )
process.HLTPFScoutingPackingSequence = cms.Sequence( process.hltScoutingTrackPacker + process.hltScoutingPrimaryVertexPacker + process.hltScoutingPFPacker + process.hltScoutingMuonPackerNoVtx + process.hltScoutingMuonPackerVtx + process.hltScoutingEgammaPacker )
process.HLTPFScoutingTrackingSequence = cms.Sequence( process.HLTPFScoutingSequence + process.hltEgammaR9IDUnseeded + process.HLTL2muonrecoSequenceNoVtx + process.HLTL3muonrecoSequenceNoVtx + process.hltDisplacedmumuVtxNoMatchingProducer + process.HLTMuIsolationSequenceNoVtx + process.hltFEDSelectorL1 + process.HLTPFScoutingPackingSequence )
process.HLTEndSequence = cms.Sequence( process.hltBoolEnd )
process.HLTPFClusteringForEgamma = cms.Sequence( process.hltRechitInRegionsECAL + process.hltRechitInRegionsES + process.hltParticleFlowRecHitECALL1Seeded + process.hltParticleFlowRecHitPSL1Seeded + process.hltParticleFlowClusterPSL1Seeded + process.hltParticleFlowClusterECALUncorrectedL1Seeded + process.hltParticleFlowClusterECALL1Seeded + process.hltParticleFlowSuperClusterECALL1Seeded )
process.HLTDoubleEG11CaloIdLSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgamma + process.hltEgammaCandidates + process.hltEGL1DoubleIsoEG11Filter + process.hltDoubleEG11CaloIdLEt11Filter + process.hltEgammaClusterShape + process.hltDoubleEG11CaloIdLClusterShapeFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverE + process.hltDoubleEG11CaloIdLHEFilter )
process.HLTTrackerMuonSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecoPixelTracksSequence + process.HLTDoLocalStripSequence + process.hltMuTrackSeeds + process.hltMuCkfTrackCandidates + process.hltMuCtfTracks + process.HLTL3muonrecoNocandSequence + process.hltDiMuonMerging + process.hltDiMuonLinks + process.hltGlbTrkMuons + process.hltGlbTrkMuonCands )
process.HLTMu20IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sMu18L1f0L2f10QL3Filtered20QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sMu18L1f0L2f10QL3Filtered20QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTMu24IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTMu24Eta2p1IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTMu27IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTMuonLocalRecoMeanTimerSequence = cms.Sequence( process.hltMuonDTDigis + process.hltDt1DRecHits + process.hltDt4DSegmentsMeanTimer + process.hltMuonCSCDigis + process.hltCsc2DRecHits + process.hltCscSegments + process.hltMuonRPCDigis + process.hltRpcRecHits + process.hltMuonGEMDigis + process.hltGemRecHits + process.hltGemSegments )
process.HLTL2muonrecoNocandCosmicSeedMeanTimerSequence = cms.Sequence( process.HLTMuonLocalRecoMeanTimerSequence + process.hltL2CosmicOfflineMuonSeeds + process.hltL2CosmicMuonSeeds + process.hltL2CosmicMuons )
process.HLTL2muonrecoSequenceNoVtxCosmicSeedMeanTimer = cms.Sequence( process.HLTL2muonrecoNocandCosmicSeedMeanTimerSequence + process.hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed )
process.HLTL2muonrecoNocandSequenceAllBx = cms.Sequence( process.HLTMuonLocalRecoSequence + process.hltL2OfflineMuonSeeds + process.hltL2MuonSeedsAllBx + process.hltL2MuonsAllBx )
process.HLTL2muonrecoSequenceAllBx = cms.Sequence( process.HLTL2muonrecoNocandSequenceAllBx + process.hltL2MuonCandidatesAllBx )
process.HLTL3muontrkisorecoSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingL3MuonIteration0 )
process.HLTL3muontrkisovvlSequence = cms.Sequence( process.HLTL3muontrkisorecoSequence + process.hltL3MuonRelTrkIsolationVVL )
process.HLTDoCaloSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalWithoutPreshowerSequence + process.HLTDoLocalHcalSequence + process.hltTowerMakerForAll )
process.HLTAK4CaloJetsReconstructionSequence = cms.Sequence( process.HLTDoCaloSequence + process.hltAK4CaloJets + process.hltAK4CaloJetsIDPassed )
process.HLTAK4CaloCorrectorProducersSequence = cms.Sequence( process.hltAK4CaloFastJetCorrector + process.hltAK4CaloRelativeCorrector + process.hltAK4CaloAbsoluteCorrector + process.hltAK4CaloResidualCorrector + process.hltAK4CaloCorrector )
process.HLTAK4CaloJetsCorrectionSequence = cms.Sequence( process.hltFixedGridRhoFastjetAllCalo + process.HLTAK4CaloCorrectorProducersSequence + process.hltAK4CaloJetsCorrected + process.hltAK4CaloJetsCorrectedIDPassed )
process.HLTAK4CaloJetsSequence = cms.Sequence( process.HLTAK4CaloJetsReconstructionSequence + process.HLTAK4CaloJetsCorrectionSequence )
process.HLTAK8CaloJetsReconstructionSequence = cms.Sequence( process.HLTDoCaloSequence + process.hltAK8CaloJets + process.hltAK8CaloJetsIDPassed )
process.HLTAK8CaloCorrectorProducersSequence = cms.Sequence( process.hltAK8CaloFastJetCorrector + process.hltAK8CaloRelativeCorrector + process.hltAK8CaloAbsoluteCorrector + process.hltAK8CaloResidualCorrector + process.hltAK8CaloCorrector )
process.HLTAK8CaloJetsCorrectionSequence = cms.Sequence( process.hltFixedGridRhoFastjetAllCalo + process.HLTAK8CaloCorrectorProducersSequence + process.hltAK8CaloJetsCorrected + process.hltAK8CaloJetsCorrectedIDPassed )
process.HLTAK8CaloJetsSequence = cms.Sequence( process.HLTAK8CaloJetsReconstructionSequence + process.HLTAK8CaloJetsCorrectionSequence )
process.HLTAK8CaloJetsPrePFRecoSequence = cms.Sequence( process.HLTDoCaloSequencePF + process.hltAK8CaloJetsPF + process.hltAK4CaloJetsPF )
process.HLTPreAK8PFJetsRecoSequence = cms.Sequence( process.HLTAK8CaloJetsPrePFRecoSequence + process.hltAK8CaloJetsPFEt5 + process.hltAK4CaloJetsPFEt5 )
process.HLTAK8PFJetsReconstructionSequence = cms.Sequence( process.HLTL2muonrecoSequence + process.HLTL3muonrecoSequence + process.HLTTrackReconstructionForPF + process.HLTParticleFlowSequence + process.hltAK8PFJets + process.hltAK8PFJetsLooseID + process.hltAK8PFJetsTightID )
process.HLTAK8PFCorrectorProducersSequence = cms.Sequence( process.hltAK8PFFastJetCorrector + process.hltAK8PFRelativeCorrector + process.hltAK8PFAbsoluteCorrector + process.hltAK8PFResidualCorrector + process.hltAK8PFCorrector )
process.HLTAK8PFJetsCorrectionSequence = cms.Sequence( process.hltFixedGridRhoFastjetAll + process.HLTAK8PFCorrectorProducersSequence + process.hltAK8PFJetsCorrected + process.hltAK8PFJetsLooseIDCorrected + process.hltAK8PFJetsTightIDCorrected )
process.HLTAK8PFJetsSequence = cms.Sequence( process.HLTPreAK8PFJetsRecoSequence + process.HLTAK8PFJetsReconstructionSequence + process.HLTAK8PFJetsCorrectionSequence )
process.HLTL3muonTkCandidateSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.hltL3TrajSeedOIState + process.hltL3TrackCandidateFromL2OIState + process.hltL3TkTracksFromL2OIState + process.hltL3MuonsOIState + process.hltL3TrajSeedOIHit + process.hltL3TrackCandidateFromL2OIHit + process.hltL3TkTracksFromL2OIHit + process.hltL3MuonsOIHit + process.hltL3TkFromL2OICombination + process.hltPixelLayerTriplets + process.hltPixelLayerPairsLegacy + process.hltMixedLayerPairs + process.hltL3TrajSeedIOHit + process.hltL3TrackCandidateFromL2IOHit + process.hltL3TkTracksFromL2IOHit + process.hltL3MuonsIOHit + process.hltL3TrajectorySeed + process.hltL3TrackCandidateFromL2 )
process.HLTOldL3muonrecoNocandSequence = cms.Sequence( process.HLTL3muonTkCandidateSequence + process.hltL3TkTracksMergeStep1 + process.hltL3TkTracksFromL2 + process.hltL3MuonsLinksCombination + process.hltL3Muons )
process.HLTOldL3muonrecoSequence = cms.Sequence( process.HLTOldL3muonrecoNocandSequence + process.hltOldL3MuonCandidates )
process.HLTIterativeTrackingHighPtTkMuIteration0 = cms.Sequence( process.hltIter0HighPtTkMuPixelTracksTrackingRegions + process.hltPixelTracksInRegionTkMu + process.hltIter0HighPtTkMuPixelSeedsFromPixelTracks + process.hltIter0HighPtTkMuCkfTrackCandidates + process.hltIter0HighPtTkMuCtfWithMaterialTracks + process.hltIter0HighPtTkMuTrackSelectionHighPurity )
process.HLTIterativeTrackingHighPtTkMu = cms.Sequence( process.HLTIterativeTrackingHighPtTkMuIteration0 )
process.HLTHighPt50TrackerMuonSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecoPixelTracksSequence + process.HLTDoLocalStripSequence + process.hltL1MuonsPt15 + process.HLTIterativeTrackingHighPtTkMu + process.hltHighPtTkMu50TkFilt + process.hltHighPtTkMuons + process.hltHighPtTkMuonCands )
process.HLTMu12IsoVVLSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3crIsoL1sMu12L1f0L2f3QL3f12QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3crIsoL1sMu12L1f0L2f3QL3f12QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p3Map )
process.HLTJetFlavourTagParticleNetSequencePF = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltPrimaryVertexAssociation + process.hltParticleNetJetTagInfos + process.hltParticleNetONNXJetTags + process.hltParticleNetDiscriminatorsJetTags )
process.HLTRecoJetSequenceAK4UncorrectedPF = cms.Sequence( process.HLTDoCaloSequencePF + process.hltAK4CaloJetsPF )
process.HLTRecoJetSequenceAK4PrePF = cms.Sequence( process.HLTRecoJetSequenceAK4UncorrectedPF + process.hltAK4CaloJetsPFEt5 )
process.HLTParticleFlowSequenceForTaus = cms.Sequence( process.HLTPreshowerSequence + process.hltParticleFlowRecHitECALUnseeded + process.hltParticleFlowRecHitHF + process.hltParticleFlowRecHitPSUnseeded + process.hltParticleFlowClusterECALUncorrectedUnseeded + process.hltParticleFlowClusterPSUnseeded + process.hltParticleFlowClusterECALUnseeded + process.HLTPFHcalClustering + process.hltParticleFlowClusterHF + process.hltLightPFTracks + process.hltParticleFlowBlockForTaus + process.hltParticleFlowForTaus )
process.HLTGlobalPFTriggerSequenceForTau = cms.Sequence( process.HLTL2muonrecoSequence + process.HLTL3muonrecoSequence + process.HLTRecoJetSequenceAK4PrePF + process.hltTauJet5 + process.HLTTrackReconstructionForPF + process.HLTParticleFlowSequenceForTaus + process.hltAK4PFJetsForTaus )
process.HLTPFTau = cms.Sequence( process.hltTauPFJets08Region + process.hltTauPFJetsRecoTauChargedHadrons + process.hltPFTauPiZeros + process.hltPFTausSansRef + process.hltPFTaus + process.hltPFTauTrackFindingDiscriminator + process.hltSelectedPFTausTrackFinding + process.hltPFTauTrack )
process.HLTGlobalPFTauConeSequence = cms.Sequence( process.HLTGlobalPFTriggerSequenceForTau + process.HLTPFTau )
process.HLTMediumChargedIsoPFTauSequence = cms.Sequence( process.hltPFTauMediumAbsoluteChargedIsolationDiscriminator + process.hltPFTauMediumRelativeChargedIsolationDiscriminator + process.hltPFTauMediumAbsOrRelChargedIsolationDiscriminator )
process.HLTMediumChargedIsoPFTau35Sequence = cms.Sequence( process.HLTMediumChargedIsoPFTauSequence + process.hltPFTau35 + process.hltSelectedPFTausTrackFinding + process.hltPFTau35Track + process.hltPFTau2Prongs + process.hltSelectedPFTausTrackFindingMediumChargedIsolation + process.hltPFTau35TrackMediumChargedIso )
process.HLTRecoMETSequence = cms.Sequence( process.HLTDoCaloSequence + process.hltMet )
process.HLTL3NoFiltersNoVtxmuonTkCandidateSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.hltL3TrajSeedOIStateNoVtx + process.hltL3TrackCandidateFromL2OIStateNoVtx + process.hltL3TkTracksFromL2OIStateNoVtx + process.hltL3NoFiltersNoVtxMuonsOIState + process.hltL3NoFiltersNoVtxTrajSeedOIHit + process.hltL3NoFiltersTrackCandidateFromL2OIHitNoVtx + process.hltL3NoFiltersTkTracksFromL2OIHitNoVtx + process.hltL3NoFiltersNoVtxMuonsOIHit + process.hltL3NoFiltersNoVtxTkFromL2OICombination + process.hltPixelLayerTriplets + process.hltPixelLayerPairsLegacy + process.hltMixedLayerPairs + process.hltL3NoFiltersNoVtxTrajSeedIOHit + process.hltL3NoFiltersTrackCandidateFromL2IOHitNoVtx + process.hltL3NoFiltersTkTracksFromL2IOHitNoVtx + process.hltL3NoFiltersNoVtxMuonsIOHit + process.hltL3NoFiltersNoVtxTrajectorySeed + process.hltL3NoFiltersTrackCandidateFromL2NoVtx )
process.HLTL3NoFiltersNoVtxmuonrecoNocandSequence = cms.Sequence( process.HLTL3NoFiltersNoVtxmuonTkCandidateSequence + process.hltL3NoFiltersNoVtxTkTracksMergeStep1 + process.hltL3NoFiltersTkTracksFromL2Novtx + process.hltL3NoFiltersNoVtxMuonsLinksCombination + process.hltL3NoFiltersNoVtxMuons )
process.HLTL3NoFiltersNoVtxmuonrecoSequence = cms.Sequence( process.HLTL3NoFiltersNoVtxmuonrecoNocandSequence + process.hltL3NoFiltersNoVtxMuonCandidates )
process.HLTMuVVVLCombinedIsolationR02Sequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTDoLocalHcalSequence + process.hltTowerMakerForAll + process.hltFixedGridRhoFastjetAllCaloForMuonsWithCaloTowers + process.hltL3CaloMuonCorrectedVVVLIsolations + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltL3MuonCombRelIsolationVVVL )
process.HLTTrackerMuonSequenceNoVtx = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecoPixelTracksSequence + process.HLTDoLocalStripSequence + process.hltMuTrackSeeds + process.hltMuCkfTrackCandidates + process.hltMuCtfTracks + process.HLTL3muonrecoNocandSequenceNoVtx + process.hltDiMuonMergingNoVtx + process.hltDiMuonLinksNoVtx + process.hltGlbTrkMuonsNoVtx + process.hltGlbTrkMuonCandsNoVtx )
process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fBigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fBigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTPFTauHPS = cms.Sequence( process.hltTauPFJets08Region + process.hltHpsTauPFJetsRecoTauChargedHadronsWithNeutrals + process.hltPFTauPiZeros + process.hltHpsCombinatoricRecoTaus + process.hltHpsSelectionDiscriminator + process.hltHpsPFTauProducerSansRefs + process.hltHpsPFTauProducer + process.hltHpsPFTauDiscriminationByDecayModeFindingNewDMs + process.hltHpsPFTauTrackFindingDiscriminator + process.hltHpsSelectedPFTausTrackFinding + process.hltHpsPFTauTrack )
process.HLTGlobalPFTauHPSSequence = cms.Sequence( process.hltStripTrackerHVOn + process.hltPixelTrackerHVOn + process.HLTGlobalPFTriggerSequenceForTau + process.HLTPFTauHPS )
process.HLTHPSDeepTauPFTauSequence = cms.Sequence( cms.ignore(process.hltL1sTauVeryBigOR) + process.hltHpsL1JetsHLTForDeepTauInput + process.hltHpsPFTauDiscriminationByDecayModeFindingNewDMsL1matched + process.hltHpsPFTauPrimaryVertexProducerForDeepTau + process.hltHpsPFTauSecondaryVertexProducerForDeepTau + process.hltHpsPFTauTransverseImpactParametersForDeepTau + process.hltFixedGridRhoProducerFastjetAllTau + process.hltHpsPFTauBasicDiscriminatorsForDeepTau + process.hltHpsPFTauBasicDiscriminatorsdR03ForDeepTau + process.hltHpsPFTauDeepTauProducer )
process.HLTHPSLooseMuTauWPDeepTauAntiMuonPFTau27Sequence = cms.Sequence( process.HLTHPSDeepTauPFTauSequence + process.hltHpsPFTauAgainstMuonDiscriminatorBigL1matched + process.hltHpsSelectedPFTausLooseMuTauWPDeepTauVsJetsAgainstMuon )
process.HLTMu24Eta2p1IsoTau40Eta2p1IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sMu22IsoTau40erL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTL2TauTagNNSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecoPixelTracksSequence + process.HLTRecopixelvertexingSequence + process.HLTDoCaloSequence + cms.ignore(process.hltL1sDoubleTauBigOR) + cms.ignore(process.hltL1sSingleTau) + cms.ignore(process.hltL1sBigOrMuXXerIsoTauYYer) + cms.ignore(process.hltL1sMu22erIsoTau40er) + cms.ignore(process.hltL1sBigORDoubleTauJet) + cms.ignore(process.hltL1VBFDiJetIsoTau) + cms.ignore(process.hltL1sVeryBigORMu18erTauXXer2p1) + cms.ignore(process.hltL1sDoubleTauBigORWithLowMass) + process.hltL2TauTagNNProducer )
process.HLTLooseSingleTauWPDeepTauPFTau = cms.Sequence( process.HLTHPSDeepTauPFTauSequence + process.hltHpsSelectedPFTausLooseSingleTauWPDeepTau )
process.HLTHPSLooseETauWPDeepTauPFTau30Sequence = cms.Sequence( process.HLTHPSDeepTauPFTauSequence + process.hltHpsSelectedPFTausLooseETauWPDeepTauFilter )
process.HLTMu24Eta2p1IsoTauYYEta2p1IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sBigOrMuXXIsoTauYYerL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTHPSSinglePFTauPt35Eta2p1Trk1 = cms.Sequence( process.hltHpsSinglePFTau35 + process.hltHpsPFTauTrackPt1Discriminator + process.hltHpsSelectedPFTausTrackPt1 + process.hltHpsSinglePFTau35TrackPt1 )
process.HLTMu50IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTJetFlavourTagParticleNetSequencePFAK8 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltAK4PFJets + process.hltAK4PFJetsLooseID + process.hltAK4PFJetsTightID + process.HLTAK4PFJetsCorrectionSequence + process.hltPFJetForBtagSelector + process.hltPFJetForBtag + process.hltPFJetForPNetSelectorAK8 + process.hltPFJetForPNetAK8 + process.hltDeepBLifetimeTagInfosPF + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltPrimaryVertexAssociation + process.hltParticleNetJetTagsInfosAK8 + process.hltParticleNetONNXJetTagsAK8 + process.hltParticleNetDiscriminatorsJetTagsAK8 )
process.HLTMu24Eta2p1VeryBigOrL1Mu18TauXXEta2p1IsolationSequence = cms.Sequence( process.HLTL3muonEcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24QL3pfecalIsoRhoFiltered + process.HLTL3muonHcalPFisorecoSequenceNoBoolsForMuons + process.hltL3fL1sVeryBigOrMu18IsoTauXXerL1f0L2f10QL3Filtered24QL3pfhcalIsoRhoFiltered + process.HLTTrackReconstructionForIsoL3MuonIter02 + process.hltMuonTkRelIsolationCut0p08Map )
process.HLTHPSDeepTauPFTauSequenceForVBFIsoTau = cms.Sequence( process.hltHpsPFTauDiscriminationByDecayModeFindingNewDMsForVBFIsoTau + process.hltHpsPFTauPrimaryVertexProducerForDeepTauForVBFIsoTau + process.hltHpsPFTauSecondaryVertexProducerForDeepTauForVBFIsoTau + process.hltHpsPFTauTransverseImpactParametersForDeepTauForVBFIsoTau + process.hltFixedGridRhoProducerFastjetAllTau + process.hltHpsPFTauBasicDiscriminatorsForDeepTauForVBFIsoTau + process.hltHpsPFTauBasicDiscriminatorsdR03ForDeepTauForVBFIsoTau + process.hltHpsPFTauDeepTauProducerForVBFIsoTau )
process.HLTCaloTausCreatorL1TauRegionalSequence = cms.Sequence( process.HLTDoCaloSequence + process.hltCaloTowersIsoTau1Regional + process.hltAkIsoTau1Regional + process.hltCaloTowersIsoTau2Regional + process.hltAkIsoTau2Regional + process.hltCaloTowersIsoTau3Regional + process.hltAkIsoTau3Regional + process.hltCaloTowersIsoTau4Regional + process.hltAkIsoTau4Regional + process.hltCaloTowersIsoTau5Regional + process.hltAkIsoTau5Regional + process.hltCaloTowersIsoTau6Regional + process.hltAkIsoTau6Regional + process.hltCaloTowersIsoTau7Regional + process.hltAkIsoTau7Regional + process.hltCaloTowersIsoTau8Regional + process.hltAkIsoTau8Regional + process.hltCaloTowersIsoTau9Regional + process.hltAkIsoTau9Regional + process.hltCaloTowersIsoTau10Regional + process.hltAkIsoTau10Regional + process.hltCaloTowersIsoTau11Regional + process.hltAkIsoTau11Regional + process.hltCaloTowersIsoTau12Regional + process.hltAkIsoTau12Regional )
process.HLTL2TauJetsSequence = cms.Sequence( process.HLTCaloTausCreatorL1TauRegionalSequence + process.hltL2TauJets )
process.HLTL2TauPixelIsolationSequenceGlobal = cms.Sequence( process.hltL2TausForPixelIsolation + process.HLTDoLocalPixelSequence + process.HLTRecopixelvertexingSequence + process.hltL2TauPixelIsoTagProducerGlob )
process.HLTL2p5IsoTauGlobalSequence = cms.Sequence( process.HLTL2TauPixelIsolationSequenceGlobal + process.hltL2TauIsoFilterGlob + process.hltL2TauJetsIsoGlob )
process.HLTJetFlavourTagParticleNetSequencePFMinPFJetPt20 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelectorMinPt20 + process.hltPFJetForBtagMinPt20 + process.hltDeepBLifetimeTagInfosPFMinPt20 + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltPrimaryVertexAssociationMinPt20 + process.hltParticleNetJetTagInfosMinPt20 + process.hltParticleNetONNXJetTagsMinPt20 + process.hltParticleNetDiscriminatorsJetTagsMinPt20 )
process.HLTIterL3OIGlbDisplacedMuonTkCandidateSequence = cms.Sequence( process.hltIterL3OIGblDisplacedSeedsFromL2Muons + process.hltIterL3OIGlbDisplacedTrackCandidates + process.hltIterL3OIGlbDisplacedMuonCtfWithMaterialTracks + process.hltIterL3OIDisplacedMuonTrackCutClassifier + process.hltIterL3OIDisplacedMuonTrackSelectionHighPurity + process.hltL3GlbDisplacedMuonsIterL3OI )
process.HLTIterL3DisplacedMuonRecopixelvertexingSequence = cms.Sequence( process.HLTRecopixelvertexingSequence + process.hltIterL3DisplacedMuonPixelTracksTrackingRegions + process.hltPixelTracksInDisplacedRegionL2 )
process.HLTIterativeTrackingIteration0ForIterL3DisplacedMuon = cms.Sequence( process.hltIter0IterL3DisplacedMuonPixelSeedsFromPixelTracks + process.hltIter0IterL3DisplacedMuonCkfTrackCandidates + process.hltIter0IterL3DisplacedMuonCtfWithMaterialTracks + process.hltIter0IterL3DisplacedMuonTrackCutClassifier + process.hltIter0IterL3DisplacedMuonTrackSelectionHighPurity )
process.HLTIterL3IODisplacedmuonTkCandidateSequence = cms.Sequence( process.HLTIterL3DisplacedMuonRecopixelvertexingSequence + process.HLTIterativeTrackingIteration0ForIterL3DisplacedMuon )
process.HLTIterativeTrackingIteration4GlbDisplacedMuons = cms.Sequence( process.hltDisplacedhltIter4ClustersRefRemovalForDisplacedGblMuons + process.hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedGblMuons + process.hltDisplacedhltIter4PixelLessLayerTripletsForGlbDisplacedMuons + process.hltDisplacedhltIter4PixelLessTrackingRegionsForGlbDisplacedMuons + process.hltDisplacedhltIter4PixelLessClusterCheckForGlbDisplacedMuons + process.hltDisplacedhltIter4PixelLessHitDoubletsForGlbDisplacedMuons + process.hltDisplacedhltIter4PixelLessHitTripletsForGlbDisplacedMuons + process.hltDisplacedhltIter4PixelLessSeedsForGlbDisplacedMuons + process.hltDisplacedhltIter4CkfTrackCandidatesForGlbDisplacedMuons + process.hltDisplacedhltIter4CtfWithMaterialTracksForGlbDisplacedMuons + process.hltIter4IterL3FromL2MuonTrackCutClassifier + process.hltIter4IterL3FromL2MuonTrackSelectionHighPurity )
process.HLTIterativeTrackingIteration4ForDisplacedTkMuons = cms.Sequence( process.hltDisplacedhltIter4ClustersRefRemovalForDisplacedTkMuons + process.hltDisplacedhltIter4MaskedMeasurementTrackerEventForDisplacedTkMuons + process.hltDisplacedhltIter4PixelLessLayerTripletsForDisplacedTkMuons + process.hltDisplacedhltIter4PixelLessTrackingRegionsForDisplacedTkMuons + process.hltDisplacedhltIter4PixelLessClusterCheckForDisplacedTkMuons + process.hltDisplacedhltIter4PixelLessHitDoubletsForDisplacedTkMuons + process.hltDisplacedhltIter4PixelLessHitTripletsForDisplacedTkMuons + process.hltDisplacedhltIter4PixelLessSeedsForDisplacedTkMuons + process.hltDisplacedhltIter4CkfTrackCandidatesForDisplacedTkMuons + process.hltDisplacedhltIter4CtfWithMaterialTracksForDisplacedTkMuons + process.hltIter4IterL3FromL1MuonTrackCutClassifier + process.hltIter4IterL3FromL1MuonTrackSelectionHighPurity )
process.HLTIterL3GlbDisplacedMuonTkNoCandidateSequence = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTIterL3OIGlbDisplacedMuonTkCandidateSequence + process.hltIterL3OIL3GlbDisplacedMuonsLinksCombination + process.hltIterL3OIL3GlbDisplacedMuons + process.hltIterL3OIGlbDisplacedMuonCandidates + process.hltL2SelectorForL3IOForGlbDisplaced + process.HLTIterL3IODisplacedmuonTkCandidateSequence + process.HLTIterativeTrackingIteration4GlbDisplacedMuons + process.hltL1MuonNoL2SelectorNoVtx + process.HLTIterativeTrackingIteration4ForDisplacedTkMuons + process.hltIter0MergedWithIter4GlbDisplacedMuons + process.hltIter4FromL1MergedWithIter04GlbDisplacedMuons + process.hltdTksMergedWithOIGlbDisplacedMuons + process.hltdTksMergedWithOIGlbDisplacedMuonsHighPurity + process.hltIterL3GlbdTksDisplacedMuons + process.hltIterL3DisplacedMuons + process.hltIterL3DisplacedMuonsLinks )
process.HLTL3DisplacedMuonRecoSequence = cms.Sequence( process.HLTIterL3GlbDisplacedMuonTkNoCandidateSequence + process.hltIterL3TrackerDisplacedMuonCandidates + process.hltIterL3DisplacedMuonCandidates )
process.HLTCaloTausCreatorL1TauSeededRegionalSequence = cms.Sequence( process.HLTDoCaloSequence + cms.ignore(process.hltL1sTauVeryBigOR) + process.hltCaloTowerL1sTauVeryBigORSeededRegional + process.hltAkIsoTauL1sTauVeryBigORSeededRegional )
process.HLTL2TauJetsL1TauSeededSequence = cms.Sequence( process.HLTCaloTausCreatorL1TauSeededRegionalSequence + process.hltL2TauJetsL1TauSeeded )
process.HLTL2TauPixelIsolationSequenceL1TauGlobalSeeded = cms.Sequence( process.hltL2TausForPixelIsolationL1TauSeeded + process.HLTDoLocalPixelSequence + process.HLTRecopixelvertexingSequence + process.hltFakePixelVerticesFilter + process.hltL2TauPixelIsoTagProducerL1TauSeededGlob )
process.HLTL2p5TightIsoTauL1TauSeededGlobalSequence = cms.Sequence( process.HLTL2TauPixelIsolationSequenceL1TauGlobalSeeded + process.hltL2TauTightIsoFilterL1TauSeededGlob + process.hltL2TauJetsTightIsoL1TauSeededGlob )
process.HLTIterativeTrackingIteration4ForTau = cms.Sequence( process.hltDisplacedhltIter4ClustersRefRemovalForTau + process.hltDisplacedhltIter4MaskedMeasurementTrackerEventForTau + process.hltDisplacedhltIter4PixelLessLayerTripletsForTau + process.hltDisplacedhltIter4PFlowPixelLessTrackingRegionsForTau + process.hltDisplacedhltIter4PFlowPixelLessClusterCheckForTau + process.hltDisplacedhltIter4PFlowPixelLessHitDoubletsForTau + process.hltDisplacedhltIter4PFlowPixelLessHitTripletsForTau + process.hltDisplacedhltIter4PFlowPixelLessSeedsForTau + process.hltDisplacedhltIter4PFlowCkfTrackCandidatesForTau + process.hltDisplacedhltIter4PFlowCtfWithMaterialTracksForTau + process.hltDisplacedhltIter4PFlowTrackSelectionHighPurityForTau )
process.HLTIterativeTrackingIter04ForTau = cms.Sequence( process.HLTIterativeTrackingIter02 + process.HLTIterativeTrackingIteration4ForTau + process.hltIter4MergedWithIter0ForTau )
process.HLTTrackReconstructionForPFDispl = cms.Sequence( process.HLTDoLocalPixelSequence + process.HLTRecopixelvertexingSequence + process.HLTDoLocalStripSequence + process.HLTIterativeTrackingIter04ForTau + process.hltPFMuonMergingForDisplTau + process.hltMuonLinksForDisplTau + process.hltMuonsForDisplTau )
process.HLTParticleFlowSequenceForDisplTaus = cms.Sequence( process.HLTPreshowerSequence + process.hltParticleFlowRecHitECALUnseeded + process.hltParticleFlowRecHitHF + process.hltParticleFlowRecHitPSUnseeded + process.hltParticleFlowClusterECALUncorrectedUnseeded + process.hltParticleFlowClusterPSUnseeded + process.hltParticleFlowClusterECALUnseeded + process.HLTPFHcalClustering + process.hltParticleFlowClusterHF + process.hltLightPFTracksForDisplTaus + process.hltParticleFlowBlockForDisplTaus + process.hltParticleFlowForDisplTaus )
process.HLTGlobalPFTriggerSequenceForDisplTau = cms.Sequence( process.HLTL2muonrecoSequence + process.HLTL3muonrecoSequence + process.HLTRecoJetSequenceAK4PrePF + process.hltTauJet5 + process.HLTTrackReconstructionForPFDispl + process.HLTParticleFlowSequenceForDisplTaus + process.hltAK4PFJetsForDisplTaus )
process.HLTPFTauHPSDispl = cms.Sequence( process.hltTauPFJets08RegionDispl + process.hltHpsTauPFJetsRecoTauChargedHadronsWithNeutralsDispl + process.hltPFTauPiZerosDispl + process.hltHpsCombinatoricRecoTausDispl + process.hltHpsSelectionDiscriminatorDispl + process.hltHpsPFTauProducerSansRefsDispl + process.hltHpsPFTauProducerDispl + process.hltHpsPFTauDiscriminationByDecayModeFindingNewDMsDispl + process.hltHpsPFTauTrackFindingDiscriminatorDispl + process.hltHpsSelectedPFTausTrackFindingDispl + process.hltHpsPFTauTrackDispl )
process.HLTGlobalPFTauDisplHPSSequence = cms.Sequence( process.hltStripTrackerHVOn + process.hltPixelTrackerHVOn + process.HLTGlobalPFTriggerSequenceForDisplTau + process.HLTPFTauHPSDispl )
process.HLTHPSSingleDisplPFTauPt24Eta2p1Trk1Glob = cms.Sequence( process.hltHpsSingleDisplPFTau24Glob + process.hltHpsPFTauTrackPt1DiscriminatorGlobDispl + process.hltHpsSelectedPFTausTrackPt1GlobDispl + process.hltHpsSingleDisplPFTau24TrackPt1Glob )
process.HLTHPSMediumChargedIsoDisplPFTauSequence = cms.Sequence( process.HLTTrackReconstructionForPF + process.HLTParticleFlowSequenceForTaus + process.hltHpsDisplPFTauMediumAbsoluteChargedIsolationDiscriminator + process.hltHpsDisplPFTauMediumRelativeChargedIsolationDiscriminator + process.hltHpsDisplPFTauMediumAbsOrRelChargedIsolationDiscriminator )
process.HLTPho20HEFilterUnseededSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltEgammaCandidatesWrapperUnseeded + process.hltEG20EtFilterUnseeded + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltEG20HEFilterUnseeded )
process.HLTPho30HEFilterUnseededSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltEgammaCandidatesWrapperUnseeded + process.hltEG30EtFilterUnseeded + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltEG30HEFilterUnseeded )
process.HLTEle5CaloIdLUnseededSequence = cms.Sequence( process.HLTDoFullUnpackingEgammaEcalSequence + process.HLTPFClusteringForEgammaUnseeded + process.hltEgammaCandidatesUnseeded + process.hltEgammaCandidatesWrapperUnseeded + process.hltEG5EtUnseededFilter + process.HLTDoLocalHcalSequence + process.HLTFastJetForEgamma + process.hltEgammaHoverEUnseeded + process.hltEG5HEUnseededFilter + process.hltEgammaClusterShapeUnseeded + process.hltEG5CaloIdLClusterShapeUnseededFilter + process.HLTElePixelMatchUnseededSequence + process.hltEle5CaloIdLPixelMatchUnseededFilter )
process.HLTEle5CaloIdLMWUnseededSequence = cms.Sequence( process.HLTEle5CaloIdLUnseededSequence + process.hltEle5CaloIdLMWPMS2UnseededFilter )
process.HLTJetFlavourTagParticleNetSequencePFMinPt10 = cms.Sequence( process.hltVerticesPF + process.hltVerticesPFSelector + process.hltVerticesPFFilter + process.hltPFJetForBtagSelectorMinPt10 + process.hltPFJetForBtagMinPt10 + process.hltDeepBLifetimeTagInfosPFMinPt10 + process.hltDeepInclusiveVertexFinderPF + process.hltDeepInclusiveSecondaryVerticesPF + process.hltDeepTrackVertexArbitratorPF + process.hltDeepInclusiveMergedVerticesPF + process.hltPrimaryVertexAssociationMinPt10 + process.hltParticleNetJetTagInfosMinPt10 + process.hltParticleNetONNXJetTagsMinPt10 + process.hltParticleNetDiscriminatorsJetTagsMinPt10 )
process.HLTMediumChargedIsoPFTau32Sequence = cms.Sequence( process.HLTMediumChargedIsoPFTauSequence + process.hltPFTau32 + process.hltSelectedPFTausTrackFinding + process.hltPFTau32Track + process.hltPFTau1Prong + process.hltSelectedPFTausTrackFindingMediumChargedIsolationAndOneProng + process.hltPFTau32TrackMediumChargedIso )
process.HLTDatasetPathBeginSequence = cms.Sequence( process.hltGtStage2Digis )

process.HLTriggerFirstPath = cms.Path( process.hltGetRaw + process.hltPSetMap + process.hltBoolFalse )
process.DST_PFScouting_DoubleMuon_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDSTRun3DoubleMuonPFScoutingPixelTracking + process.hltPreDSTPFScoutingDoubleMuon + process.HLTDoubleMuonScoutingNoVtx + process.HLTPFScoutingTrackingSequence + process.HLTEndSequence )
process.DST_PFScouting_DoubleEG_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDSTRun3DoubleEGPFScoutingPixelTracking + process.hltPreDSTPFScoutingDoubleEG + process.HLTDoubleEG11CaloIdLSequence + process.HLTPFScoutingTrackingSequence + process.HLTEndSequence )
process.DST_PFScouting_JetHT_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDSTRun3JetHTPFScoutingPixelTracking + process.hltPreDSTPFScoutingJetHT + process.HLTPFScoutingTrackingSequence + process.HLTEndSequence )
process.DST_PFScouting_DatasetMuon_v2 = cms.Path( process.HLTBeginSequence + process.hltMuonTriggerResultsFilter + process.hltPreDSTPFScoutingDatasetMuon + process.HLTPFScoutingTrackingSequence + process.HLTEndSequence )
process.DST_PFScouting_AXONominal_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDSTRun3AXONominalPFScoutingTracking + process.hltPreDSTPFScoutingAXONominal + process.HLTPFScoutingTrackingSequence + process.HLTEndSequence )
process.DST_PFScouting_AXOTight_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDSTRun3AXOTightPFScoutingTracking + process.hltPreDSTPFScoutingAXOTight + process.HLTPFScoutingTrackingSequence + process.HLTEndSequence )
process.DST_PFScouting_SingleMuon_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMuScouting + process.hltPreDSTPFScoutingSingleMuon + process.hltL1fL1sMuScoutingL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMuScoutingL2Filtered0) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMuScoutingL1Filtered0) + process.hltL3fL1sMuScoutingL3Filtered0 + process.HLTPFScoutingTrackingSequence + process.HLTEndSequence )
process.HLT_Mu37_TkMu27_v13 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreMu37TkMu27 + process.hltL1fL1sMu22orMu25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22orMu25L1f0L2Filtered25) + process.HLTL3muonrecoSequence + process.hltL3fL1sMu16orMu25L1f0L2f25L3Filtered37 + process.HLTTrackerMuonSequence + process.hltDiMuonGlbFiltered37TrkFiltered27 + process.hltDiMuonGlb37Trk27DzFiltered0p2 + process.HLTEndSequence )
process.HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v16 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu3SQHTT200 + process.hltPreDoubleMu4Mass3p8DZPFHT350 + process.hltDoubleMuon4L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltDoubleMuon4L2PreFiltered0) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3DoubleMuon4L1Filtered0) + process.hltL3fL1DiMu3SQHT200L3PreFiltered4 + process.hltDoubleMuon4Mass3p8Filtered + process.hltDoubleMu4Mass3p8DZFilter + process.HLTAK4PFJetsSequence + process.hltPFHTJet30 + process.hltPFHT350Jet30 + process.HLTEndSequence )
process.HLT_Mu3_PFJet40_v24 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu3IorMu3Jet30er2p5 + process.hltPreMu3PFJet40 + process.hltL1fL1sMu3Jet30L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu3L1f0L2Filtered0) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu3L1Filtered0) + process.hltL3fL1sMu3L1f0L2f0L3Filtered3 + process.HLTAK4PFJetsSequence + process.hltMu3JetCollectionsForLeptonPlusPFJets + process.hltMu3PFJet40MuCleaned + process.HLTEndSequence )
process.HLT_IsoMu20_v23 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu18 + process.hltPreIsoMu20 + process.hltL1fL1sMu18L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu18L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu18L1Filtered0) + process.hltL3fL1sMu18L1f0L2f10QL3Filtered20Q + process.HLTMu20IsolationSequence + process.hltL3crIsoL1sMu18L1f0L2f10QL3f20QL3trkIsoFiltered + process.HLTEndSequence )
process.HLT_IsoMu24_v21 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24 + process.hltL1fL1sMu22L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22L1Filtered0) + process.hltL3fL1sSingleMu22L1f0L2f10QL3Filtered24Q + process.HLTMu24IsolationSequence + process.hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_v23 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24eta2p1 + process.hltL1fL1sMu22erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erL1Filtered0) + process.hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsolationSequence + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTEndSequence )
process.HLT_IsoMu27_v24 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreIsoMu27 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27Q + process.HLTMu27IsolationSequence + process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f27QL3trkIsoFiltered + process.HLTEndSequence )
process.HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu30NoVtx2ChaCosmicSeedEta2p4 + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtxCosmicSeedMeanTimer + process.hltL2fL1sMuORL1f0DoubleL2NoVtx30Q2ChaCosmicSeedEta2p4 + process.HLTEndSequence )
process.HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu30NoVtx2ChaEta2p4 + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1sMuORL1f0DoubleL2NoVtx30Q + process.hltL2DoubleMu30NoVtxFiltered2ChaEta2p4 + process.HLTEndSequence )
process.HLT_DoubleL2Mu50_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMuOR + process.hltPreDoubleL2Mu50 + process.hltL1fL1sMuORL1Filtered0 + process.HLTL2muonrecoSequenceAllBx + process.hltL2fL1sMuORL1f0DoubleL2AllBxFiltered50Q + process.HLTEndSequence )
process.HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu23NoVtx2ChaCosmicSeed + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTMuonLocalRecoMeanTimerSequence + process.hltL2CosmicOfflineMuonSeeds + process.hltL2CosmicMuonSeeds + process.hltL2CosmicMuons + process.hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed + process.hltL2fL1sMuORL1f0DoubleL2NoVtx23Q2ChaCosmicSeed + process.HLTEndSequence )
process.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu25NoVtx2ChaCosmicSeed + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtxCosmicSeedMeanTimer + process.hltL2fL1sMuORL1f0DoubleL2NoVtx25Q2ChaCosmicSeed + process.HLTEndSequence )
process.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu25NoVtx2ChaCosmicSeedEta2p4 + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtxCosmicSeedMeanTimer + process.hltL2fL1sMuORL1f0DoubleL2NoVtx25Q2ChaCosmicSeedEta2p4 + process.HLTEndSequence )
process.HLT_DoubleL2Mu23NoVtx_2Cha_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu23NoVtx2Cha + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1sMuORL1f0DoubleL2NoVtx23Q + process.hltL2DoubleMu23NoVertexL2Filtered2Cha + process.HLTEndSequence )
process.HLT_DoubleL2Mu25NoVtx_2Cha_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu25NoVtx2Cha + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1sMuORL1f0DoubleL2NoVtx25Q + process.hltL2DoubleMu25NoVtxFiltered2Cha + process.HLTEndSequence )
process.HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu25NoVtx2ChaEta2p4 + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1sMuORL1f0DoubleL2NoVtx25Q + process.hltL2DoubleMu25NoVtxFiltered2ChaEta2p4 + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v22 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu17TrkIsoVVLMu8TrkIsoVVL + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered8 + process.hltL3fL1DoubleMu155fFiltered17 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon178RelTrkIsoVVLFiltered + process.HLTEndSequence )
process.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v11 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu19TrkIsoVVLMu9TrkIsoVVL + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered9 + process.hltL3fL1DoubleMu155fFiltered19 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon199RelTrkIsoVVLFiltered + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v23 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZ + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered8 + process.hltL3fL1DoubleMu155fFiltered17 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon178RelTrkIsoVVLFiltered + process.hltDiMuon178RelTrkIsoVVLFilteredDzFiltered0p2 + process.HLTEndSequence )
process.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v11 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu19TrkIsoVVLMu9TrkIsoVVLDZ + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered9 + process.hltL3fL1DoubleMu155fFiltered19 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon199RelTrkIsoVVLFiltered + process.hltDiMuon199RelTrkIsoVVLFilteredDzFiltered0p2 + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v13 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8 + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered8 + process.hltL3fL1DoubleMu155fFiltered17 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon178RelTrkIsoVVLFiltered + process.hltDiMuon178RelTrkIsoVVLFilteredDzFiltered0p2 + process.hltDiMuon178Mass8Filtered + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8PFJet30 + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered8 + process.hltL3fL1DoubleMu155fFiltered17 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon178RelTrkIsoVVLFiltered + process.hltDiMuon178RelTrkIsoVVLFilteredDzFiltered0p2 + process.hltDiMuon178Mass8Filtered + process.HLTAK4CaloJetsSequence + process.hltSingleCaloJet10 + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToCaloJets10 + process.hltSinglePFJet30 + process.HLTEndSequence )
process.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v11 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu19TrkIsoVVLMu9TrkIsoVVLDZMass8 + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered9 + process.hltL3fL1DoubleMu155fFiltered19 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon199RelTrkIsoVVLFiltered + process.hltDiMuon199RelTrkIsoVVLFilteredDzFiltered0p2 + process.hltDiMuon199Mass8Filtered + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v13 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass3p8 + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered8 + process.hltL3fL1DoubleMu155fFiltered17 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon178RelTrkIsoVVLFiltered + process.hltDiMuon178RelTrkIsoVVLFilteredDzFiltered0p2 + process.hltDiMuon178Mass3p8Filtered + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v1 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8CaloJet30 + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered8 + process.hltL3fL1DoubleMu155fFiltered17 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon178RelTrkIsoVVLFiltered + process.hltDiMuon178RelTrkIsoVVLFilteredDzFiltered0p2 + process.hltDiMuon178Mass8Filtered + process.HLTAK4CaloJetsSequence + process.hltSingleCaloJet30 + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v1 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8AK8PFJet30 + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered8 + process.hltL3fL1DoubleMu155fFiltered17 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon178RelTrkIsoVVLFiltered + process.hltDiMuon178RelTrkIsoVVLFilteredDzFiltered0p2 + process.hltDiMuon178Mass8Filtered + process.HLTAK8CaloJetsSequence + process.hltSingleCaloJet10AK8 + process.HLTAK8PFJetsSequence + process.hltPFJetsCorrectedMatchedToCaloJets10AK8 + process.hltSinglePFJet30AK8 + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v1 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu17TrkIsoVVLMu8TrkIsoVVLDZMass8AK8CaloJet30 + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered8 + process.hltL3fL1DoubleMu155fFiltered17 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon178RelTrkIsoVVLFiltered + process.hltDiMuon178RelTrkIsoVVLFilteredDzFiltered0p2 + process.hltDiMuon178Mass8Filtered + process.HLTAK8CaloJetsSequence + process.hltSingleCaloJet30AK8 + process.HLTEndSequence )
process.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v11 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu19TrkIsoVVLMu9TrkIsoVVLDZMass3p8 + process.hltL1fL1sDoubleMu155L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu155L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu155L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu155L1Filtered0) + process.hltL3fL1DoubleMu155fPreFiltered9 + process.hltL3fL1DoubleMu155fFiltered19 + process.HLTL3muontrkisovvlSequence + process.hltDiMuon199RelTrkIsoVVLFiltered + process.hltDiMuon199RelTrkIsoVVLFilteredDzFiltered0p2 + process.hltDiMuon199Mass3p8Filtered + process.HLTEndSequence )
process.HLT_Mu15_v11 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu15DQorSingleMu7 + process.hltPreMu15 + process.hltL1fL1sMu15DQorMu7lqL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu15DQorMu7lqL1f0L2Filtered10) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu15DQorMu7lqL1Filtered0) + process.hltL3fL1sMu15DQorMu7lqL1f0L2f10L3Filtered15 + process.HLTEndSequence )
process.HLT_Mu20_v20 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu18 + process.hltPreMu20 + process.hltL1fL1sMu18L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu18L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu18L1Filtered0) + process.hltL3fL1sMu18L1f0L2f10QL3Filtered20Q + process.HLTEndSequence )
process.HLT_Mu27_v21 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreMu27 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27Q + process.HLTEndSequence )
process.HLT_Mu50_v21 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreMu50 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50Q + process.HLTEndSequence )
process.HLT_Mu55_v11 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreMu55 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered55Q + process.HLTEndSequence )
process.HLT_CascadeMu100_v11 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreCascadeMu100 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + process.hltL2fOldL1sMu22or25L1f0L2Filtered10Q + process.HLTOldL3muonrecoSequence + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered100Q + process.HLTEndSequence )
process.HLT_HighPtTkMu100_v10 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreHighPtTkMu100 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTMuonLocalRecoSequence + process.HLTHighPt50TrackerMuonSequence + process.hltL3fL1sMu25f0TkFiltered100Q + process.HLTEndSequence )
process.HLT_Mu8_TrkIsoVVL_v20 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu3IorSingleMu5IorSingleMu7 + process.hltPreMu8TrkIsoVVL + process.hltL1fL1sMu3or5or7L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu5L1f0L2Filtered5) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu5L1Filtered0) + process.hltL3fL1sMu5L1f0L2f5L3Filtered8 + process.HLTL3muontrkisovvlSequence + process.hltL3fL1sMu5L1f0L2f5L3Filtered8TkIsoVVLFiltered + process.HLTEndSequence )
process.HLT_Mu17_TrkIsoVVL_v21 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu15DQ + process.hltPreMu17TrkIsoVVL + process.hltL1fL1sMu15DQlqL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu15DQlqL1f0L2Filtered10) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu15DQlqL1Filtered0) + process.hltL3fL1sMu15DQlqL1f0L2f10L3Filtered17 + process.HLTL3muontrkisovvlSequence + process.hltL3fL1sMu1lqL1f0L2f10L3Filtered17TkIsoVVLFiltered + process.HLTEndSequence )
process.HLT_Mu19_TrkIsoVVL_v12 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu15DQ + process.hltPreMu19TrkIsoVVL + process.hltL1fL1sMu15DQlqL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu15DQlqL1f0L2Filtered10) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu15DQlqL1Filtered0) + process.hltL3fL1sMu15DQlqL1f0L2f10L3Filtered19 + process.HLTL3muontrkisovvlSequence + process.hltL3fL1sMu1lqL1f0L2f10L3Filtered19TkIsoVVLFiltered + process.HLTEndSequence )
process.HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v1 = cms.Path( process.HLTBeginSequence + process.hltL1sMu12HTT150er + process.hltPreMu12IsoVVLPFHT150PNetBTag0p53 + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.HLTAK4CaloJetsSequence + process.hltHtMhtJet30 + process.hltHT100Jet30 + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered12Q + process.HLTMu12IsoVVLSequence + process.hltL3crIsoL1sMu12L1f0L2f3QL3f12QL3trkIsoFilteredVVL + process.HLTAK4PFJetsSequence + process.hltPFHTJet30 + process.hltPFHT150Jet30 + process.HLTJetFlavourTagParticleNetSequencePF + process.hltBTagPFPNet0p53Single + process.HLTEndSequence )
process.HLT_IsoMu24_TwoProngs35_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24TwoProngs35 + process.hltL1fL1sMu22L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22L1Filtered0) + process.hltL3fL1sSingleMu22L1f0L2f10QL3Filtered24Q + process.HLTMu24IsolationSequence + process.hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTGlobalPFTauConeSequence + process.HLTMediumChargedIsoPFTau35Sequence + process.HLTEndSequence )
process.HLT_TripleMu_5_3_3_Mass3p8_DZ_v16 = cms.Path( process.HLTBeginSequence + process.hltL1sTripleMu0IorTripleMu553 + process.hltPreTripleMu533Mass3p8DZ + process.hltL1TripleMu553L1TriMuFiltered3 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL1TripleMu553L2TriMuFiltered3) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1TripleMu553L1TriMuFiltered3) + process.hltL3fL1TripleMu553f0PreFiltered333 + process.hltL3fL1TripleMu553f0Filtered533 + process.hltTripleMu533TripleDZ0p2 + process.hltTripleMu533Mass3p8toInfFilter + process.HLTEndSequence )
process.HLT_TripleMu_10_5_5_DZ_v18 = cms.Path( process.HLTBeginSequence + process.hltL1sTripleMu0IorTripleMu553 + process.hltPreTripleMu1055DZ + process.hltL1TripleMu553L1TriMuFiltered3 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL1TripleMu553L2TriMuFiltered3) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1TripleMu553L1TriMuFiltered3) + process.hltL3fL1TripleMu553f0PreFiltered555 + process.hltL3fL1TripleMu553f0Filtered1055 + process.hltTripleMu555TripleDZ0p2 + process.HLTEndSequence )
process.HLT_TripleMu_12_10_5_v18 = cms.Path( process.HLTBeginSequence + process.hltL1sTripleMu0IorTripleMu553 + process.hltPreTripleMu12105 + process.hltL1TripleMu553L1TriMuFiltered3 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL1TripleMu553L2TriMuFiltered3) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1TripleMu553L1TriMuFiltered3) + process.hltL3fL1TripleMu553f0PreFiltered555 + process.hltL3fL1TripleMu553f0Filtered10105 + process.hltL3fL1TripleMu553f0Filtered12105 + process.HLTEndSequence )
process.HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v18 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu0ETM40IorDoubleMu0ETM55IorDoubleMu0ETM60IorDoubleMu0ETM65IorDoubleMu0ETM70 + process.hltPreDoubleMu3DZPFMET50PFMHT60 + process.hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.hltL3fL1DiMu3SQETM50f0PreFiltered3 + process.hltDoubleMuon3Mass3p8to60Filter + process.hltDoubleMuon3Mass3p8to60DZFilter + process.HLTRecoMETSequence + process.hltMET40 + process.HLTAK4PFJetsSequence + process.hltPFMETProducer + process.hltPFMET50 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID60 + process.HLTEndSequence )
process.HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v18 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu0ETM40IorDoubleMu0ETM55IorDoubleMu0ETM60IorDoubleMu0ETM65IorDoubleMu0ETM70 + process.hltPreDoubleMu3DZPFMET70PFMHT70 + process.hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.hltL3fL1DiMu3SQETM50f0PreFiltered3 + process.hltDoubleMuon3Mass3p8to60Filter + process.hltDoubleMuon3Mass3p8to60DZFilter + process.HLTRecoMETSequence + process.hltMET40 + process.HLTAK4PFJetsSequence + process.hltPFMETProducer + process.hltPFMET70 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID70 + process.HLTEndSequence )
process.HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v18 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu0ETM40IorDoubleMu0ETM55IorDoubleMu0ETM60IorDoubleMu0ETM65IorDoubleMu0ETM70 + process.hltPreDoubleMu3DZPFMET90PFMHT90 + process.hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.hltL3fL1DiMu3SQETM50f0PreFiltered3 + process.hltDoubleMuon3Mass3p8to60Filter + process.hltDoubleMuon3Mass3p8to60DZFilter + process.HLTRecoMETSequence + process.hltMET40 + process.HLTAK4PFJetsSequence + process.hltPFMETProducer + process.hltPFMET90 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID90 + process.HLTEndSequence )
process.HLT_DoubleMu43NoFiltersNoVtx_v12 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreDoubleMu43NoFiltersNoVtx + process.hltL1fDimuonL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + cms.ignore(process.hltL2fDimuonL1f0L2NoVtxFiltered16) + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fDimuonL1f0L2NVf16L3NoFiltersNoVtxFiltered43 + process.HLTEndSequence )
process.HLT_DoubleMu48NoFiltersNoVtx_v12 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreDoubleMu48NoFiltersNoVtx + process.hltL1fDimuonL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + cms.ignore(process.hltL2fDimuonL1f0L2NoVtxFiltered16) + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fDimuonL1f0L2NVf16L3NoFiltersNoVtxFiltered48 + process.HLTEndSequence )
process.HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v23 = cms.Path( process.HLTBeginSequence + process.hltL1sHTT380erIorHTT320er + process.hltPreMu15IsoVVVLPFHT450PFMET50 + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.HLTAK4CaloJetsSequence + process.hltHtMhtJet30 + process.hltHT200Jet30 + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered15Q + process.HLTMuVVVLCombinedIsolationR02Sequence + process.hltL3MuVVVLIsoFIlter + process.HLTAK4PFJetsSequence + process.hltPFHTJet30 + process.hltPFHT450Jet30 + process.hltPFMETProducer + process.hltPFMET50 + process.HLTEndSequence )
process.HLT_Mu15_IsoVVVL_PFHT450_v23 = cms.Path( process.HLTBeginSequence + process.hltL1sHTT380erIorHTT320er + process.hltPreMu15IsoVVVLPFHT450 + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.HLTAK4CaloJetsSequence + process.hltHtMhtJet30 + process.hltHT200Jet30 + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered15Q + process.HLTMuVVVLCombinedIsolationR02Sequence + process.hltL3MuVVVLIsoFIlter + process.HLTAK4PFJetsSequence + process.hltPFHTJet30 + process.hltPFHT450Jet30 + process.HLTEndSequence )
process.HLT_Mu50_IsoVVVL_PFHT450_v23 = cms.Path( process.HLTBeginSequence + process.hltL1sHTT380erIorHTT320er + process.hltPreMu50IsoVVVLPFHT450 + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.HLTAK4CaloJetsSequence + process.hltHtMhtJet30 + process.hltHT200Jet30 + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered50Q + process.HLTMuVVVLCombinedIsolationR02Sequence + process.hltL3Mu50VVVLIsoFIlter + process.HLTAK4PFJetsSequence + process.hltPFHTJet30 + process.hltPFHT450Jet30 + process.HLTEndSequence )
process.HLT_Mu15_IsoVVVL_PFHT600_v27 = cms.Path( process.HLTBeginSequence + process.hltL1sHTT380erIorHTT320er + process.hltPreMu15IsoVVVLPFHT600 + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.HLTAK4CaloJetsSequence + process.hltHtMhtJet30 + process.hltHT200Jet30 + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered15Q + process.HLTMuVVVLCombinedIsolationR02Sequence + process.hltL3MuVVVLIsoFIlter + process.HLTAK4PFJetsSequence + process.hltPFHTJet30 + process.hltPFHT600Jet30 + process.HLTEndSequence )
process.HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v10 = cms.Path( process.HLTBeginSequence + process.hltL1Mu3er1p5Jet100er2p5ETMHF40ORETMHF50 + process.hltPreMu3er1p5PFJet100er2p5PFMET80PFMHT80IDTight + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3MuFiltered3er1p5 + process.HLTRecoMETSequence + process.hltMET50 + process.HLTAK4CaloJetsSequence + process.hltSingleAK4CaloJet70 + process.hltMht + process.hltMHT50 + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToCaloJets70 + process.hltSinglePFJet100er2p5 + process.hltPFMHTTightID + process.hltPFMHTTightID80 + process.hltPFMETProducer + process.hltPFMET80 + process.HLTEndSequence )
process.HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v10 = cms.Path( process.HLTBeginSequence + process.hltL1Mu3er1p5Jet100er2p5ETMHF40ORETMHF50 + process.hltPreMu3er1p5PFJet100er2p5PFMET90PFMHT90IDTight + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3MuFiltered3er1p5 + process.HLTRecoMETSequence + process.hltMET60 + process.HLTAK4CaloJetsSequence + process.hltSingleAK4CaloJet70 + process.hltMht + process.hltMHT60 + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToCaloJets70 + process.hltSinglePFJet100er2p5 + process.hltPFMHTTightID + process.hltPFMHTTightID90 + process.hltPFMETProducer + process.hltPFMET90 + process.HLTEndSequence )
process.HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v10 = cms.Path( process.HLTBeginSequence + process.hltL1Mu3er1p5Jet100er2p5ETMHF40ORETMHF50 + process.hltPreMu3er1p5PFJet100er2p5PFMET100PFMHT100IDTight + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3MuFiltered3er1p5 + process.HLTRecoMETSequence + process.hltMET70 + process.HLTAK4CaloJetsSequence + process.hltSingleAK4CaloJet70 + process.hltMht + process.hltMHT70 + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToCaloJets70 + process.hltSinglePFJet100er2p5 + process.hltPFMHTTightID + process.hltPFMHTTightID100 + process.hltPFMETProducer + process.hltPFMET100 + process.HLTEndSequence )
process.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v10 = cms.Path( process.HLTBeginSequence + process.hltL1Mu3er1p5Jet100er2p5ETMHF40ORETMHF50 + process.hltPreMu3er1p5PFJet100er2p5PFMETNoMu80PFMHTNoMu80IDTight + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3MuFiltered3er1p5 + process.HLTRecoMETSequence + process.hltMET50 + process.HLTAK4CaloJetsSequence + process.hltSingleAK4CaloJet70 + process.hltMht + process.hltMHT50 + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToCaloJets70 + process.hltSinglePFJet100er2p5 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID80 + process.hltParticleFlowNoMu + process.hltPFMETNoMuProducer + process.hltPFMETNoMu80 + process.HLTEndSequence )
process.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v10 = cms.Path( process.HLTBeginSequence + process.hltL1Mu3er1p5Jet100er2p5ETMHF40ORETMHF50 + process.hltPreMu3er1p5PFJet100er2p5PFMETNoMu90PFMHTNoMu90IDTight + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3MuFiltered3er1p5 + process.HLTRecoMETSequence + process.hltMET60 + process.HLTAK4CaloJetsSequence + process.hltSingleAK4CaloJet70 + process.hltMht + process.hltMHT60 + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToCaloJets70 + process.hltSinglePFJet100er2p5 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID90 + process.hltParticleFlowNoMu + process.hltPFMETNoMuProducer + process.hltPFMETNoMu90 + process.HLTEndSequence )
process.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v10 = cms.Path( process.HLTBeginSequence + process.hltL1Mu3er1p5Jet100er2p5ETMHF40ORETMHF50 + process.hltPreMu3er1p5PFJet100er2p5PFMETNoMu100PFMHTNoMu100IDTight + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3MuFiltered3er1p5 + process.HLTRecoMETSequence + process.hltMET70 + process.HLTAK4CaloJetsSequence + process.hltSingleAK4CaloJet70 + process.hltMht + process.hltMHT70 + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToCaloJets70 + process.hltSinglePFJet100er2p5 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID100 + process.hltParticleFlowNoMu + process.hltPFMETNoMuProducer + process.hltPFMETNoMu100 + process.HLTEndSequence )
process.HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v14 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157ORTripleMu444 + process.hltPreTrkMu12DoubleTrkMu5NoFiltersNoVtx + process.hltL1fL1sDoubleMu155ORTripleMu444L1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + cms.ignore(process.hltL2pfL1sDoubleMu155ORTripleMu444L1f0L2PreFiltered0NoVtx) + cms.ignore(process.hltL2fL1sDoubleMu155ORTripleMu444L1f0L2Filtered10OneMuNoVtx) + process.HLTL3muonrecoSequenceNoVtx + process.hltL3pfL1sDoubleMu155ORTripleMu444L1f0L2pf0TwoMuL3PreFiltered5NoVtx + process.hltL3fL1sDoubleMu155ORTripleMu444L1f0L2f10OneMuL3Filtered12NoVtx + process.HLTTrackerMuonSequenceNoVtx + process.hltTripleTrkMuFiltered5NoVtx + process.hltSingleTrkMuFiltered12NoVtx + process.HLTEndSequence )
process.HLT_Mu8_v20 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu3IorSingleMu5IorSingleMu7 + process.hltPreMu8 + process.hltL1fL1sMu3or5or7L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu5L1f0L2Filtered5) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu5L1Filtered0) + process.hltL3fL1sMu5L1f0L2f5L3Filtered8 + process.HLTEndSequence )
process.HLT_Mu17_v21 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu15DQ + process.hltPreMu17 + process.hltL1fL1sMu15DQlqL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu15DQlqL1f0L2Filtered10) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu15DQlqL1Filtered0) + process.hltL3fL1sMu15DQlqL1f0L2f10L3Filtered17 + process.HLTEndSequence )
process.HLT_Mu19_v12 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu15DQ + process.hltPreMu19 + process.hltL1fL1sMu15DQlqL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu15DQlqL1f0L2Filtered10) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu15DQlqL1Filtered0) + process.hltL3fL1sMu15DQlqL1f0L2f10L3Filtered19 + process.HLTEndSequence )
process.HLT_Mu18_Mu9_SameSign_v12 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu125to157 + process.hltPreMu18Mu9SameSign + process.hltL1fL1sDoubleMu157L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2pfL1sDoubleMu157L1f0L2PreFiltered0) + cms.ignore(process.hltL2fL1sDoubleMu157L1f0L2Filtered10OneMu) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sDoubleMu157L1Filtered0) + process.hltL3fL1DoubleMu157fFiltered9 + process.hltL3fL1DoubleMu157fFiltered18 + process.hltDiMuon189SameSignFiltered + process.HLTEndSequence )
process.HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v18 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu0ETM40IorDoubleMu0ETM55IorDoubleMu0ETM60IorDoubleMu0ETM65IorDoubleMu0ETM70 + process.hltPreDoubleMu3DCAPFMET50PFMHT60 + process.hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.hltL3fL1DiMu3SQETM50noDrf0PreFiltered3 + process.hltDoubleMuon3Mass3p8DCAFilter + process.hltDoubleMuon3Mass3p8DCAnoDrFilter + process.HLTRecoMETSequence + process.hltMET40 + process.HLTAK4PFJetsSequence + process.hltParticleFlowNoMu + process.hltPFMETNoMuProducer + process.hltPFMETNoMu50 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID60 + process.HLTEndSequence )
process.HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu0ETM40IorDoubleMu0ETM55IorDoubleMu0ETM60IorDoubleMu0ETM65IorDoubleMu0ETM70 + process.hltPreDoubleMu3DCAPFMET50PFMHT60Mass2p0 + process.hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.hltL3fL1DiMu3SQETM50noDrf0PreFiltered3 + process.hltDoubleMuon3Mass2p0DCAnoDrFilter + process.HLTRecoMETSequence + process.hltMET40 + process.HLTAK4PFJetsSequence + process.hltParticleFlowNoMu + process.hltPFMETNoMuProducer + process.hltPFMETNoMu50 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID60 + process.HLTEndSequence )
process.HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMu0ETM40IorDoubleMu0ETM55IorDoubleMu0ETM60IorDoubleMu0ETM65IorDoubleMu0ETM70 + process.hltPreDoubleMu3DCAPFMET50PFMHT60Mass2p0noDCA + process.hltL1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sL1DoubleMu0ETM40lorDoubleMu0ETM55) + process.hltL3fL1DiMu3SQETM50noDrf0PreFiltered3 + process.hltDoubleMuon3Mass2p0noDrFilter + process.HLTRecoMETSequence + process.hltMET40 + process.HLTAK4PFJetsSequence + process.hltParticleFlowNoMu + process.hltPFMETNoMuProducer + process.hltPFMETNoMu50 + process.hltPFMHTNoMuTightID + process.hltPFMHTNoMuTightID60 + process.HLTEndSequence )
process.HLT_TripleMu_5_3_3_Mass3p8_DCA_v11 = cms.Path( process.HLTBeginSequence + process.hltL1sTripleMu0IorTripleMu553 + process.hltPreTripleMu533Mass3p8DCA + process.hltL1TripleMu553L1TriMuFiltered3 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL1TripleMu553L2TriMuFiltered3) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1TripleMu553L1TriMuFiltered3) + process.hltL3fL1TripleMu553f0PreFiltered333 + process.hltL3fL1TripleMu553f0Filtered533 + process.hltTripleMu533Mass3p8DCAFilter + process.HLTEndSequence )
process.HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu20eta2p1LooseDeepTauPFTauHPS27eta2p1CrossL1 + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0) + process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q + process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence + process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered + process.HLTGlobalPFTauHPSSequence + process.HLTHPSLooseMuTauWPDeepTauAntiMuonPFTau27Sequence + process.hltHpsL1JetsHLTPFTauLooseMutauWPDeepTauVsJetsAgainstMuonMatch + process.hltHpsSelectedPFTau27LooseMuTauWPDeepTauVsJetsAgainstMuonL1HLTMatched + process.hltHpsOverlapFilterIsoMu20LooseMuTauWPDeepTauPFTau27L1Seeded + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sMu22erIsoTau40er + process.hltPreIsoMu24eta2p1LooseDeepTauPFTauHPS180eta2p1 + process.hltL1fL1sMu22erIsoTau40erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22erIsoTau40erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erIsoTau40erL1Filtered0) + process.hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTau40Eta2p1IsolationSequence + process.hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2Mu22Tau40TagNNFilterSingleTauWP + process.HLTGlobalPFTauHPSSequence + process.HLTLooseSingleTauWPDeepTauPFTau + process.hltL1JetsHLTPFTau180LooseSingleTauWPDeepTauMatchMu22IsoTau40 + process.hltSelectedPFTau180LooseSingleTauWPDeepTauMatchedMu22IsoTau40 + process.hltHpsOverlapFilterIsoMu24LooseSingleTauWPDeepTauPFTau180L1Seeded + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu24eta2p1LooseDeepTauPFTauHPS30eta2p1CrossL1 + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0) + process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q + process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence + process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered + process.hltIsoMu24FilterEle24Tau30Monitoring + process.HLTGlobalPFTauHPSSequence + process.HLTHPSLooseETauWPDeepTauPFTau30Sequence + process.hltHpsL1JetsHLTPFTauLooseEtauWPDeepTauMatchMonitoring + process.hltHpsSelectedPFTau30LooseETauWPDeepTauL1HLTMatchedMonitoring + process.hltHpsOverlapFilterIsoMu24LooseETauWPDeepTauPFTau30L1Seeded + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sBigOrMuXXerIsoTauYYer + process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS35L2NNeta2p1CrossL1 + process.hltL1fL1sBigOrMuXXerIsoTauYYerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sBigOrMuXXerIsoTauYYerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sBigOrMuXXerIsoTauYYerL1Filtered0) + process.hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTauYYEta2p1IsolationSequence + process.hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMuXXerIsoTauYY + process.HLTGlobalPFTauHPSSequence + process.HLTHPSSinglePFTauPt35Eta2p1Trk1 + process.HLTHPSDeepTauPFTauSequence + process.hltHpsSelectedPFTausMediumDitauWPDeepTau + process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauBigOrMuXXerIsoTauYYerMatch + process.hltHpsSelectedPFTau35MediumDitauWPDeepTauL1HLTBigOrMuXXerIsoTauYYerMatched + process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau35Monitoring + process.HLTEndSequence )
process.HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreIsoMu50AK8PFJet220SoftDropMass40 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50Q + process.HLTMu50IsolationSequence + process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f50QL3trkIsoFiltered + process.HLTAK8CaloJetsSequence + process.hltAK8SingleCaloJet200 + process.HLTAK8PFJetsSequence + process.hltAK8PFJetsCorrectedMatchedToCaloJets200 + process.hltSingleAK8PFJet220 + process.hltAK8PFJets220Constituents + process.hltAK8PFSoftDropJets220 + process.hltAK8SinglePFJets220SoftDropMass40 + process.HLTEndSequence )
process.HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreIsoMu50AK8PFJet220SoftDropMass40PNetBB0p06 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50Q + process.HLTMu50IsolationSequence + process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f50QL3trkIsoFiltered + process.HLTAK8CaloJetsSequence + process.hltAK8SingleCaloJet200 + process.HLTAK8PFJetsSequence + process.hltAK8PFJetsCorrectedMatchedToCaloJets200 + process.hltSingleAK8PFJet220 + process.hltAK8PFJets220Constituents + process.hltAK8PFSoftDropJets220 + process.hltAK8SinglePFJets220SoftDropMass40 + process.hltAK8PFJets220SoftDropMass40 + process.HLTJetFlavourTagParticleNetSequencePFAK8 + process.hltAK8SinglePFJets220SoftDropMass40PNetBBTag0p06 + process.HLTEndSequence )
process.HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreIsoMu50AK8PFJet230SoftDropMass40 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50Q + process.HLTMu50IsolationSequence + process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f50QL3trkIsoFiltered + process.HLTAK8CaloJetsSequence + process.hltAK8SingleCaloJet200 + process.HLTAK8PFJetsSequence + process.hltAK8PFJetsCorrectedMatchedToCaloJets200 + process.hltSingleAK8PFJet230 + process.hltAK8PFJets230Constituents + process.hltAK8PFSoftDropJets230 + process.hltAK8SinglePFJets230SoftDropMass40 + process.HLTEndSequence )
process.HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreIsoMu50AK8PFJet230SoftDropMass40PNetBB0p06 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50Q + process.HLTMu50IsolationSequence + process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f50QL3trkIsoFiltered + process.HLTAK8CaloJetsSequence + process.hltAK8SingleCaloJet200 + process.HLTAK8PFJetsSequence + process.hltAK8PFJetsCorrectedMatchedToCaloJets200 + process.hltSingleAK8PFJet230 + process.hltAK8PFJets230Constituents + process.hltAK8PFSoftDropJets230 + process.hltAK8SinglePFJets230SoftDropMass40 + process.hltAK8PFJets230SoftDropMass40 + process.HLTJetFlavourTagParticleNetSequencePFAK8 + process.hltAK8SinglePFJets230SoftDropMass40PNetBBTag0p06 + process.HLTEndSequence )
process.HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreIsoMu50AK8PFJet230SoftDropMass40PNetBB0p10 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered50Q + process.HLTMu50IsolationSequence + process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f50QL3trkIsoFiltered + process.HLTAK8CaloJetsSequence + process.hltAK8SingleCaloJet200 + process.HLTAK8PFJetsSequence + process.hltAK8PFJetsCorrectedMatchedToCaloJets200 + process.hltSingleAK8PFJet230 + process.hltAK8PFJets230Constituents + process.hltAK8PFSoftDropJets230 + process.hltAK8SinglePFJets230SoftDropMass40 + process.hltAK8PFJets230SoftDropMass40 + process.HLTJetFlavourTagParticleNetSequencePFAK8 + process.hltAK8SinglePFJets230SoftDropMass40PNetBBTag0p10 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS30L2NNeta2p1CrossL1 + cms.ignore(process.hltL1sVeryBigORMu18erTauXXer2p1) + process.hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0) + process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1VeryBigOrL1Mu18TauXXEta2p1IsolationSequence + process.hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMu18erTauXX + process.HLTGlobalPFTauHPSSequence + process.HLTHPSDeepTauPFTauSequence + process.hltHpsSelectedPFTausMediumDitauWPDeepTauDoubleTauJet + process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauVeryBigOrMu18erTauXXerMatch + process.hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatched + process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau30Monitoring + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sMu18erTau26er2p1Jet55 + process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS30L2NNeta2p1PFJet60CrossL1 + cms.ignore(process.hltL1sVeryBigORMu18erTauXXer2p1) + process.hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0) + process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1VeryBigOrL1Mu18TauXXEta2p1IsolationSequence + process.hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMu18erTauXX + process.HLTGlobalPFTauHPSSequence + process.HLTHPSDeepTauPFTauSequence + process.hltHpsSelectedPFTausMediumDitauWPDeepTauDoubleTauJet + process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauVeryBigOrMu18erTauXXerMatch + process.hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatched + process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau30Monitoring + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToL1 + process.hlt1PFJet60L1HLTMatched + process.hltHpsOverlapFilterDeepTauPFTau30VeryBigOrMu18erTauXXPFJet60 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sMu18erTau26er2p1Jet70 + process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS30L2NNeta2p1PFJet75CrossL1 + cms.ignore(process.hltL1sVeryBigORMu18erTauXXer2p1) + process.hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0) + process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1VeryBigOrL1Mu18TauXXEta2p1IsolationSequence + process.hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMu18erTauXX + process.HLTGlobalPFTauHPSSequence + process.HLTHPSDeepTauPFTauSequence + process.hltHpsSelectedPFTausMediumDitauWPDeepTauDoubleTauJet + process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauVeryBigOrMu18erTauXXerMatch + process.hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatched + process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau30Monitoring + process.HLTAK4PFJetsSequence + process.hltPFJetsCorrectedMatchedToL1 + process.hlt1PFJet75L1HLTMatched + process.hltHpsOverlapFilterDeepTauPFTau30VeryBigOrMu18erTauXXPFJet75 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS20eta2p1SingleL1 + process.hltL1fL1sMu22erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erL1Filtered0) + process.hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsolationSequence + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTGlobalPFTauHPSSequence + process.HLTHPSDeepTauPFTauSequenceForVBFIsoTau + process.hltHpsSelectedPFTausMediumDitauWPDeepTauForVBFIsoTau + process.hltHpsSinglePFTau20MediumDitauWPDeepTauNoMatchForVBFIsoTau + process.hltHpsOverlapFilterIsoMu24MediumDeepTauPFTau20 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sBigOrMuXXerIsoTauYYer + process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS45L2NNeta2p1CrossL1 + process.hltL1fL1sBigOrMuXXerIsoTauYYerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sBigOrMuXXerIsoTauYYerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sBigOrMuXXerIsoTauYYerL1Filtered0) + process.hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTauYYEta2p1IsolationSequence + process.hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMuXXerIsoTauYYForVBFTauTau + process.HLTGlobalPFTauHPSSequence + process.HLTHPSDeepTauPFTauSequenceForVBFIsoTau + process.hltHpsSelectedPFTausMediumDitauWPDeepTauForVBFIsoTau + process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauBigOrMuXXerIsoTauYYerMatchForVBFIsoTau + process.hltHpsSelectedPFTau45MediumDitauWPDeepTauL1HLTBigOrMuXXerIsoTauYYerMatchedForVBFIsoTau + process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau45MonitoringForVBFIsoTau + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigOrMuXXerIsoTauYYer + process.hltPreIsoMu24eta2p1PNetTauhPFJet30MediumL2NNeta2p3CrossL1 + process.hltL1fL1sBigOrMuXXerIsoTauYYerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sBigOrMuXXerIsoTauYYerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sBigOrMuXXerIsoTauYYerL1Filtered0) + process.hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTauYYEta2p1IsolationSequence + process.hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMuXXerIsoTauYY + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet30PNetTauhTagMediumWPL2MuXXTauYY + process.hltHpsOverlapFilterIsoMu24SinglePFJet30PNetTauhTagMediumWP + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigOrMuXXerIsoTauYYer + process.hltPreIsoMu24eta2p1PNetTauhPFJet30TightL2NNeta2p3CrossL1 + process.hltL1fL1sBigOrMuXXerIsoTauYYerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sBigOrMuXXerIsoTauYYerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sBigOrMuXXerIsoTauYYerL1Filtered0) + process.hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTauYYEta2p1IsolationSequence + process.hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMuXXerIsoTauYY + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet30PNetTauhTagTightWPL2MuXXTauYY + process.hltHpsOverlapFilterIsoMu24SinglePFJet30PNetTauhTagTightWP + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu24eta2p1PNetTauhPFJet26L2NNeta2p3CrossL1 + cms.ignore(process.hltL1sVeryBigORMu18erTauXXer2p1) + process.hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0) + process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1VeryBigOrL1Mu18TauXXEta2p1IsolationSequence + process.hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMu18erTauXX + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet26PNetTauhTagL2Mu18TauYY + process.hltHpsOverlapFilterIsoMu24SinglePFJet26PNetTauhTag + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMu18erTau26er2p1Jet55 + process.hltPreIsoMu24eta2p1PNetTauhPFJet26L2NNeta2p3CrossL1PFJet60 + cms.ignore(process.hltL1sVeryBigORMu18erTauXXer2p1) + process.hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0) + process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1VeryBigOrL1Mu18TauXXEta2p1IsolationSequence + process.hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMu18erTauXX + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet26PNetTauhTagL2Mu18TauYY + process.hltHpsOverlapFilterIsoMu24SinglePFJet26PNetTauhTag + process.hltPFJetsCorrectedMatchedToL1 + process.hlt1PFJet60L1HLTMatched + process.hltHpsOverlapFilterIsoMu24SinglePFJet26PNetTauhTagPFJet60 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMu18erTau26er2p1Jet70 + process.hltPreIsoMu24eta2p1PNetTauhPFJet26L2NNeta2p3CrossL1PFJet75 + cms.ignore(process.hltL1sVeryBigORMu18erTauXXer2p1) + process.hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0) + process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1VeryBigOrL1Mu18TauXXEta2p1IsolationSequence + process.hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMu18erTauXX + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet26PNetTauhTagL2Mu18TauYY + process.hltHpsOverlapFilterIsoMu24SinglePFJet26PNetTauhTag + process.hltPFJetsCorrectedMatchedToL1 + process.hlt1PFJet75L1HLTMatched + process.hltHpsOverlapFilterIsoMu24SinglePFJet26PNetTauhTagPFJet75 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu24eta2p1PNetTauhPFJet30Tighteta2p3CrossL1ETauMonitoring + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0) + process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q + process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence + process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered + process.hltIsoMu24FilterEle24Tau30Monitoring + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJets30PNetTauhTagTightWPMatchMonitoringMuTauL1 + process.hltHpsOverlapFilterIsoMu24TightETauWPPNetTauhTagJet30L1Seeded + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu24eta2p1PNetTauhPFJet30Mediumeta2p3CrossL1ETauMonitoring + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0) + process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q + process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence + process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered + process.hltIsoMu24FilterEle24Tau30Monitoring + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJets30PNetTauhTagMediumWPMatchMonitoringMuTauL1 + process.hltHpsOverlapFilterIsoMu24MediumETauWPPNetTauhTagJet30L1Seeded + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu24eta2p1PNetTauhPFJet30Looseeta2p3CrossL1ETauMonitoring + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0) + process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q + process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence + process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered + process.hltIsoMu24FilterEle24Tau30Monitoring + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJets30PNetTauhTagLooseWPMatchMonitoringMuTauL1 + process.hltHpsOverlapFilterIsoMu24LooseETauWPPNetTauhTagJet30L1Seeded + process.HLTEndSequence )
process.HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu20eta2p1PNetTauhPFJet27Tighteta2p3CrossL1 + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0) + process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q + process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence + process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJets27PNetTauhTagTightWPMatchMuTauL1 + process.hltHpsOverlapFilterIsoMu20TightMuTauWPPNetPFJet27 + process.HLTEndSequence )
process.HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu20eta2p1PNetTauhPFJet27Mediumeta2p3CrossL1 + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0) + process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q + process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence + process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJets27PNetTauhTagMediumWPMatchMuTauL1 + process.hltHpsOverlapFilterIsoMu20MediumMuTauWPPNetPFJet27 + process.HLTEndSequence )
process.HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu20eta2p1PNetTauhPFJet27Looseeta2p3CrossL1 + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fBigORMu18erTauXXer2p1L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fBigORMu18erTauXXer2p1L1Filtered0) + process.hltL3fL1BigORMu18erTauXXer2p1L1f0L2f10QL3Filtered20Q + process.HLTMu20Eta2p1Tau24Eta2p1IsolationSequence + process.hltL3crIsoBigORMu18erTauXXer2p1L1f0L2f10QL3f20QL3trkIsoFiltered + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJets27PNetTauhTagLooseWPMatchMuTauL1 + process.hltHpsOverlapFilterIsoMu20LooseMuTauWPPNetPFJet27 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24eta2p1PNetTauhPFJet20eta2p2SingleL1 + process.hltL1fL1sMu22erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erL1Filtered0) + process.hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsolationSequence + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauJetsSequence + process.hltSingleL2Tau20eta2p2 + process.HLTL2p5IsoTauGlobalSequence + process.hltSingleL2GlobIsoTau20eta2p2 + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePFMinPFJetPt20 + process.hltSinglePFJet20PNetTauhTagVBFDiTauL2Tau + process.hltHpsOverlapFilterIsoMu24VBFDiTauPNetPFJet20 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sBigOrMuXXerIsoTauYYer + process.hltPreIsoMu24eta2p1PNetTauhPFJet45L2NNeta2p3CrossL1 + process.hltL1fL1sBigOrMuXXerIsoTauYYerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sBigOrMuXXerIsoTauYYerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sBigOrMuXXerIsoTauYYerL1Filtered0) + process.hltL3fL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTauYYEta2p1IsolationSequence + process.hltL3crIsoL1sBigOrMuXXerIsoTauYYerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMuXXerIsoTauYYForVBFTauTau + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet45PNetTauhTagL2VBFIsoTauMonitoring + process.hltHpsOverlapFilterIsoMu24SVBFSingleTauPNetPFJet45 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PFHT250_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24eta2p1PFHT250 + process.hltL1fL1sMu22erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erL1Filtered0) + process.hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsolationSequence + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTAK4PFJetsSequence + process.hltPFHTJet25 + process.hltPFHT250Jet25 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24eta2p1PFHT250QuadPFJet25 + process.hltL1fL1sMu22erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erL1Filtered0) + process.hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsolationSequence + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTAK4PFJetsSequence + process.hlt4PFCentralJetTightIDPt25 + process.hltPFHTJet25 + process.hltPFHT250Jet25 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24eta2p1PFHT250QuadPFJet25PNet1Tauh0p50 + process.hltL1fL1sMu22erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erL1Filtered0) + process.hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsolationSequence + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTAK4PFJetsSequence + process.hlt4PFCentralJetPt25 + process.hltPFHTJet25 + process.hltPFHT250Jet25 + process.HLTJetFlavourTagParticleNetSequencePF + process.hltPFCentralJetPt25 + process.hltPFCentralJetNoIDPt25PNet1TauHTag0p50 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24eta2p1SinglePFJet25PNet1Tauh0p50 + process.hltL1fL1sMu22erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erL1Filtered0) + process.hltL3fL1sSingleMu22erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsolationSequence + process.hltL3crIsoL1sSingleMu22erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTAK4PFJetsSequence + process.hlt1PFCentralJetPt25 + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFCentralJetPt25 + process.hltSinglePFCentralJetNoIDPt25PNet1TauHTag0p50 + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMu22erIsoTau40er + process.hltPreIsoMu24eta2p1PNetTauhPFJet130LooseL2NNeta2p3CrossL1 + process.hltL1fL1sMu22erIsoTau40erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22erIsoTau40erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erIsoTau40erL1Filtered0) + process.hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTau40Eta2p1IsolationSequence + process.hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2Mu22Tau40TagNNFilterSingleTauWP + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet130PNetTauhTagLooseWPL2Mu22Tau40 + process.hltHpsOverlapFilterIsoMu24SinglePFJet130PNetTauhTagLooseWPL1Seeded + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMu22erIsoTau40er + process.hltPreIsoMu24eta2p1PNetTauhPFJet130MediumL2NNeta2p3CrossL1 + process.hltL1fL1sMu22erIsoTau40erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22erIsoTau40erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erIsoTau40erL1Filtered0) + process.hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTau40Eta2p1IsolationSequence + process.hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2Mu22Tau40TagNNFilterSingleTauWP + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet130PNetTauhTagMediumWPL2Mu22Tau40 + process.hltHpsOverlapFilterIsoMu24SinglePFJet130PNetTauhTagMediumWPL1Seeded + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMu22erIsoTau40er + process.hltPreIsoMu24eta2p1PNetTauhPFJet130TightL2NNeta2p3CrossL1 + process.hltL1fL1sMu22erIsoTau40erL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22erIsoTau40erL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22erIsoTau40erL1Filtered0) + process.hltL3fL1sMu22erIsoTau40erL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1IsoTau40Eta2p1IsolationSequence + process.hltL3crIsoL1sMu22erIsoTau40erL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2Mu22Tau40TagNNFilterSingleTauWP + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePF + process.hltSinglePFJet130PNetTauhTagTightWPL2Mu22Tau40 + process.hltHpsOverlapFilterIsoMu24SinglePFJet130PNetTauhTagTightWPL1Seeded + process.HLTEndSequence )
process.HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu10NoVtx2ChaVetoL3Mu0DxyMax1cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1fMuf0DoubleL2MuNoVtx10Q + process.hltL2fDoubleMu10NoVertexL2Filtered + process.HLTL3muonrecoSequenceNoVtx + ~process.hltL3fDimuonL1f0ppL2NV2Chaf10L3NVf0Veto1Prompt + process.HLTEndSequence )
process.HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu12NoVtx2ChaVetoL3Mu0DxyMax1cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1fMuf0DoubleL2MuNoVtx10Q + process.hltL2fDoubleMu12NoVertexL2Filtered + process.HLTL3muonrecoSequenceNoVtx + ~process.hltL3fDimuonL1f0ppL2NV2Chaf10L3NVf0Veto1Prompt + process.HLTEndSequence )
process.HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu14NoVtx2ChaVetoL3Mu0DxyMax1cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1fMuf0DoubleL2MuNoVtx10Q + process.hltL2fDoubleMu14NoVertexL2Filtered + process.HLTL3muonrecoSequenceNoVtx + ~process.hltL3fDimuonL1f0ppL2NV2Chaf10L3NVf0Veto1Prompt + process.HLTEndSequence )
process.HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL3Mu1610NoVtxDxyMin0p01cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1DoubleMuf0L2DoubleMuNoVtxFiltered7 + process.hltL2fL1DoubleMuf0L2SingleMuNoVtxFiltered15 + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fL1DoubleMuf0L2NVf15f7L3DoubleMuNVf10Displaced + process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf16Displaced + process.HLTEndSequence )
process.HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL3Mu1810NoVtxDxyMin0p01cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1DoubleMuf0L2DoubleMuNoVtxFiltered7 + process.hltL2fL1DoubleMuf0L2SingleMuNoVtxFiltered15 + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fL1DoubleMuf0L2NVf15f7L3DoubleMuNVf10Displaced + process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf18Displaced + process.HLTEndSequence )
process.HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL3Mu2010NoVtxDxyMin0p01cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1DoubleMuf0L2DoubleMuNoVtxFiltered7 + process.hltL2fL1DoubleMuf0L2SingleMuNoVtxFiltered15 + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fL1DoubleMuf0L2NVf15f7L3DoubleMuNVf10Displaced + process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf20Displaced + process.HLTEndSequence )
process.HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2MuL3Mu16NoVtxVetoL3Mu0DxyMax0p1cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1DoubleMuf0L2DoubleMuNoVtx2ChaFiltered7 + process.hltL2fL1DoubleMuf0L2SingleMuNoVtx2ChaFiltered15 + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf16DisplacedHybDxy0p1cm + ~process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf0VetoDxy0p1cm + process.HLTEndSequence )
process.HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2MuL3Mu18NoVtxVetoL3Mu0DxyMax0p1cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1DoubleMuf0L2DoubleMuNoVtx2ChaFiltered7 + process.hltL2fL1DoubleMuf0L2SingleMuNoVtx2ChaFiltered15 + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf18DisplacedHybDxy0p1cm + ~process.hltL3fL1DoubleMuf0L2NVf15f7L3SingleMuNVf0VetoDxy0p1cm + process.HLTEndSequence )
process.HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu10NoVtx2ChaCosmicSeedVetoL3Mu0DxyMax1cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTMuonLocalRecoMeanTimerSequence + process.hltL2CosmicOfflineMuonSeeds + process.hltL2CosmicMuonSeeds + process.hltL2CosmicMuons + process.hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed + process.hltL2fL1sMuORL1f0DoubleL2NoVtx10Q2ChaCosmicSeed + process.HLTL2muonrecoSequenceNoVtx + process.HLTL3muonrecoSequenceNoVtx + ~process.hltL3fDimuonL1f0CosmicL2NV2Chaf10L3NVf0Veto1PromptSimple + process.HLTEndSequence )
process.HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL2Mu12NoVtx2ChaCosmicSeedVetoL3Mu0DxyMax1cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTMuonLocalRecoMeanTimerSequence + process.hltL2CosmicOfflineMuonSeeds + process.hltL2CosmicMuonSeeds + process.hltL2CosmicMuons + process.hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed + process.hltL2fL1sMuORL1f0DoubleL2NoVtx12Q2ChaCosmicSeed + process.HLTL2muonrecoSequenceNoVtx + process.HLTL3muonrecoSequenceNoVtx + ~process.hltL3fDimuonL1f0CosmicL2NV2Chaf10L3NVf0Veto1PromptSimple + process.HLTEndSequence )
process.HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreDoubleL3dTksMu1610NoVtxDxyMin0p01cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1DoubleMuf0L2DoubleMuDisplacedFiltered7 + process.hltL2fL1DoubleMuf0L2SingleMuDisplacedFiltered15 + process.HLTL3DisplacedMuonRecoSequence + process.hltL3dTkfL1DoubleMuf0L2NVf15f7L3DoubleMuNVf10Displaced + process.hltL3dTkfL1DoubleMuf0L2NVf15f7L3SingleMuNVf16Displaced + process.HLTEndSequence )
process.HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v1 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMuUpt15OR20 + process.hltPreL2Mu50NoVtx3ChaCosmicSeedVetoL3Mu0DxyMax1cm + process.hltL1fL1sSingleMuUpt15OR20L1Filtered0 + process.HLTMuonLocalRecoMeanTimerSequence + process.hltL2CosmicOfflineMuonSeeds + process.hltL2CosmicMuonSeeds + process.hltL2CosmicMuons + process.hltL2MuonCandidatesNoVtxMeanTimerCosmicSeed + process.hltL2fL1sMuSingleMuUpt15OR20L1f0L2NoVtx50Q3ChaCosmicSeed + process.HLTL2muonrecoSequenceNoVtx + process.HLTL3muonrecoSequenceNoVtx + ~process.hltL3fMuonL1f0CosmicL2NV3Chaf50L3NVf0Veto1PromptSimple + process.HLTEndSequence )
process.HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v1 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMuUpt15OR20 + process.hltPreL2Mu50NoVtx3ChaVetoL3Mu0DxyMax1cm + process.hltL1fL1sSingleMuUpt15OR20L1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1sSingleMuUpt15OR20L1f0L2NoVtx50Q3Cha + process.HLTL3muonrecoSequenceNoVtx + ~process.hltL3fMuL1f0Upt15OR20ppL2NV3Chaf50L3NVf0VetoDxyMax1cm + process.HLTEndSequence )
process.HLT_L3Mu30NoVtx_DxyMin0p01cm_v1 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMuUpt15OR20 + process.hltPreL3Mu30NoVtxDxyMin0p01cm + process.hltL1fL1sSingleMuUpt15OR20L1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1Muf0L2MuNoVtxFiltered27 + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fL1Muf0L2NVf27L3MuNVf30DxyMin0p01 + process.HLTEndSequence )
process.HLT_L3Mu50NoVtx_DxyMin0p01cm_v1 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMuUpt15OR20 + process.hltPreL3Mu50NoVtxDxyMin0p01cm + process.hltL1fL1sSingleMuUpt15OR20L1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1Muf0L2MuNoVtxFiltered47 + process.HLTL3NoFiltersNoVtxmuonrecoSequence + process.hltL3fL1Muf0L2NVf47L3MuNVf50DxyMin0p01 + process.HLTEndSequence )
process.HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sDoubleMuORTripleMuORDoubleMu0upt + process.hltPreL3dTksMu10NoVtxDxyMin0p01cm + process.hltL1fL1sDoubleMuORTripleMuORDoubleMuUptL1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1DoubleMuf0L2SingleMuNoVtxFiltered7 + process.HLTL3DisplacedMuonRecoSequence + process.hltL3fL1f0L2f0Filtered10GlbDisplaceddTks + process.HLTEndSequence )
process.HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v4 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreDisplacedMu24MediumChargedIsoDisplacedPFTauHPS24 + process.hltL1fL1sBigORMu18erTauXXer2p1L1Filtered0 + process.HLTL2muonrecoSequenceNoVtx + process.hltL2fL1SingleMuf0L2NoVtxFiltered20DisplTau + process.HLTL2TauJetsL1TauSeededSequence + process.hltDisplMu24L2Tau22eta2p2 + process.HLTL2p5TightIsoTauL1TauSeededGlobalSequence + process.hltDisplMuL2GlobIsoTau22eta2p2 + process.HLTL3DisplacedMuonRecoSequence + process.hltL3fSingleMuL1f0L2NVf20L3GlbDispl24 + process.HLTGlobalPFTauDisplHPSSequence + process.HLTHPSSingleDisplPFTauPt24Eta2p1Trk1Glob + process.HLTHPSMediumChargedIsoDisplPFTauSequence + process.hltHpsSelectedPFTausTrackPt1MediumChargedIsolationGlobDispl + process.hltHpsL1JetsHLTDisplacedMuDisplPFTauTrackPt1MatchGlob + process.hltHpsDisplacedMuMediumChargedIsoDisplPFTau24TrackPt1L1HLTMatchedGlob + process.hltHpsOverlapFilterDisplacedMu24DisplPFTau24 + process.HLTEndSequence )
process.HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v4 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22or25 + process.hltPreIsoMu27MediumChargedIsoDisplacedPFTauHPS24eta2p1SingleL1 + process.hltL1fL1sMu22or25L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sMu22or25L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22or25L1Filtered0) + process.hltL3fL1sMu22Or25L1f0L2f10QL3Filtered27Q + process.HLTMu27IsolationSequence + process.hltL3crIsoL1sMu22Or25L1f0L2f10QL3f27QL3trkIsoFiltered + process.HLTL2TauJetsL1TauSeededSequence + process.hltIsoMu27L2Tau22eta2p2 + process.HLTL2p5TightIsoTauL1TauSeededGlobalSequence + process.hltIsoMu27L2GlobIsoTau22eta2p2 + process.HLTGlobalPFTauDisplHPSSequence + process.HLTHPSSingleDisplPFTauPt24Eta2p1Trk1Glob + process.HLTHPSMediumChargedIsoDisplPFTauSequence + process.hltHpsSelectedPFTausTrackPt1MediumChargedIsolationGlobDispl + process.hltHpsSinglePFTau24MediumChargedIsoFilter + process.hltHpsOverlapFilterIsoMu27MediumChargedIsoDisplTau24 + process.HLTEndSequence )
process.HLT_CscCluster_Loose_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreCscClusterLoose + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscClusterLoose + process.HLTEndSequence )
process.HLT_CscCluster_Medium_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreCscClusterMedium + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscClusterMedium + process.HLTEndSequence )
process.HLT_CscCluster_Tight_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreCscClusterTight + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscClusterTight + process.HLTEndSequence )
process.HLT_CscCluster50_Photon20Unseeded_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreCscCluster50Photon20Unseeded + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscClusterVeryLoose + process.HLTPho20HEFilterUnseededSequence + process.HLTEndSequence )
process.HLT_CscCluster50_Photon30Unseeded_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreCscCluster50Photon30Unseeded + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscClusterVeryLoose + process.HLTPho30HEFilterUnseededSequence + process.HLTEndSequence )
process.HLT_CscCluster100_Ele5_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreCscCluster100Ele5 + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscCluster100NoME1112 + process.HLTEle5CaloIdLMWUnseededSequence + process.HLTEndSequence )
process.HLT_CscCluster100_Mu5_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreCscCluster100Mu5 + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered5Q + process.hltCSCrechitClusters + process.hltCscCluster100NoME1112 + process.HLTEndSequence )
process.HLT_CscCluster100_PNetTauhPFJet10_Loose_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreCscCluster100PNetTauhPFJet10Loose + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscCluster100NoME1112 + process.HLTL2TauJetsSequence + process.hltL2Tau10 + process.HLTL2p5IsoTauGlobalSequence + process.hltL2GlobIsoTau10 + process.HLTAK4PFJetsSequence + process.HLTJetFlavourTagParticleNetSequencePFMinPt10 + process.hltSinglePFJet10PNetTauhTagVLooseWPL2SingleTau + process.HLTEndSequence )
process.HLT_DoubleCscCluster75_v5 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominalORTwoLoose + process.hltPreDoubleCscCluster75 + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscDoubleCluster75 + process.HLTEndSequence )
process.HLT_IsoTrk200_L1SingleMuShower_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreIsoTrk200L1SingleMuShower + process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTRecopixelvertexingSequence + process.HLTIterativeTrackingIter02 + process.hltDeDxEstimatorProducer + process.hltTrk200MuonEndcapFilter + process.HLTEndSequence )
process.HLT_IsoTrk400_L1SingleMuShower_v2 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreIsoTrk400L1SingleMuShower + process.HLTDoLocalPixelSequence + process.HLTDoLocalStripSequence + process.HLTRecopixelvertexingSequence + process.HLTIterativeTrackingIter02 + process.hltDeDxEstimatorProducer + process.hltTrk400MuonEndcapFilter + process.HLTEndSequence )
process.HLT_DoubleCscCluster100_v5 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominalORTwoLoose + process.hltPreDoubleCscCluster100 + process.HLTMuonLocalRecoSequence + process.hltCSCrechitClusters + process.hltCscDoubleCluster100 + process.HLTEndSequence )
process.HLT_L1CSCShower_DTCluster50_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreL1CSCShowerDTCluster50 + process.HLTMuonLocalRecoSequence + process.hltDTrechitClusters + process.hltDTCluster50NoMB1 + process.HLTEndSequence )
process.HLT_L1CSCShower_DTCluster75_v8 = cms.Path( process.HLTBeginSequence + process.hltL1sMuShowerOneNominal + process.hltPreL1CSCShowerDTCluster75 + process.HLTMuonLocalRecoSequence + process.hltDTrechitClusters + process.hltDTCluster75NoMB1 + process.HLTEndSequence )
process.HLT_Mu50_L1SingleMuShower_v7 = cms.Path( process.HLTBeginSequence + process.hltL1sL1SingleMuShower + process.hltPreMu50L1SingleMuShower + cms.ignore(process.hltL1sSingleMuOpenObjectMap) + process.hltL1fL1sSingleMuOpenCandidateL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMuOpenCandidateL1f0L2Filtered0Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sSingleMuOpenCandidateL1Filtered0) + process.hltL3fL1sSingleMuOpenCandidateL1f0L2f3QL3Filtered50Q + process.HLTEndSequence )
process.HLT_IsoMu24_OneProng32_v5 = cms.Path( process.HLTBeginSequence + process.hltL1sSingleMu22 + process.hltPreIsoMu24OneProng32 + process.hltL1fL1sMu22L1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sSingleMu22L1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sMu22L1Filtered0) + process.hltL3fL1sSingleMu22L1f0L2f10QL3Filtered24Q + process.HLTMu24IsolationSequence + process.hltL3crIsoL1sSingleMu22L1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTGlobalPFTauConeSequence + process.HLTMediumChargedIsoPFTau32Sequence + process.HLTEndSequence )
process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v4 = cms.Path( process.HLTBeginSequence + process.hltL1sBigORMu18erTauXXer2p1 + process.hltPreIsoMu24eta2p1MediumDeepTauPFTauHPS30L2NNeta2p1OneProngCrossL1 + cms.ignore(process.hltL1sVeryBigORMu18erTauXXer2p1) + process.hltL1fL1sVeryBigOrMu18erTauXXerL1Filtered0 + process.HLTL2muonrecoSequence + cms.ignore(process.hltL2fL1sVeryBigOrMu18erTauXXerL1f0L2Filtered10Q) + process.HLTL3muonrecoSequence + cms.ignore(process.hltL1fForIterL3L1fL1sVeryBigOrMu18erTauXXerL1Filtered0) + process.hltL3fL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3Filtered24Q + process.HLTMu24Eta2p1VeryBigOrL1Mu18TauXXEta2p1IsolationSequence + process.hltL3crIsoL1sVeryBigOrMu18erTauXXerL1f0L2f10QL3f24QL3trkIsoFiltered + process.HLTL2TauTagNNSequence + process.hltL2TauTagNNFilterMu18erTauXX + process.HLTGlobalPFTauHPSSequence + process.HLTHPSDeepTauPFTauSequence + process.hltPFTau1ProngHPS + process.hltHpsSelectedPFTausMediumDitauWPDeepTau30 + process.hltHpsL1JetsHLTPFTauMediumDitauWPDeepTauVeryBigOrMu18erTauXXerMatchMonitoring + process.hltHpsSelectedPFTau30MediumDitauWPDeepTauL1HLTVeryBigOrMu18erTauXXerMatchedMonitoring + process.hltHpsOverlapFilterIsoMu24MediumDitauWPDeepTauPFTau30OneProngMonitoring + process.HLTEndSequence )
process.Dataset_Muon0 = cms.Path( process.HLTDatasetPathBeginSequence + process.hltDatasetMuon + process.hltPreDatasetMuon0 )
process.Dataset_Muon1 = cms.Path( process.HLTDatasetPathBeginSequence + process.hltDatasetMuon + process.hltPreDatasetMuon1 )
process.Dataset_ScoutingPFRun3 = cms.Path( process.HLTDatasetPathBeginSequence + process.hltDatasetScoutingPFRun3 + process.hltPreDatasetScoutingPFRun3 )
process.ScoutingPFOutput = cms.FinalPath( process.hltOutputScoutingPF )


process.schedule = cms.Schedule( *(process.HLTriggerFirstPath, process.DST_PFScouting_DoubleMuon_v2, process.DST_PFScouting_DoubleEG_v2, process.DST_PFScouting_JetHT_v2, process.DST_PFScouting_DatasetMuon_v2, process.DST_PFScouting_AXONominal_v2, process.DST_PFScouting_AXOTight_v2, process.DST_PFScouting_SingleMuon_v2, process.HLT_Mu37_TkMu27_v13, process.HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v16, process.HLT_Mu3_PFJet40_v24, process.HLT_IsoMu20_v23, process.HLT_IsoMu24_v21, process.HLT_IsoMu24_eta2p1_v23, process.HLT_IsoMu27_v24, process.HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v9, process.HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v9, process.HLT_DoubleL2Mu50_v9, process.HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v9, process.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v9, process.HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v9, process.HLT_DoubleL2Mu23NoVtx_2Cha_v9, process.HLT_DoubleL2Mu25NoVtx_2Cha_v9, process.HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v9, process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v22, process.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v11, process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v23, process.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v11, process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v13, process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_PFJet30_v2, process.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v11, process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v13, process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_CaloJet30_v1, process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8PFJet30_v1, process.HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_AK8CaloJet30_v1, process.HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v11, process.HLT_Mu15_v11, process.HLT_Mu20_v20, process.HLT_Mu27_v21, process.HLT_Mu50_v21, process.HLT_Mu55_v11, process.HLT_CascadeMu100_v11, process.HLT_HighPtTkMu100_v10, process.HLT_Mu8_TrkIsoVVL_v20, process.HLT_Mu17_TrkIsoVVL_v21, process.HLT_Mu19_TrkIsoVVL_v12, process.HLT_Mu12_IsoVVL_PFHT150_PNetBTag0p53_v1, process.HLT_IsoMu24_TwoProngs35_v9, process.HLT_TripleMu_5_3_3_Mass3p8_DZ_v16, process.HLT_TripleMu_10_5_5_DZ_v18, process.HLT_TripleMu_12_10_5_v18, process.HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v18, process.HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v18, process.HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v18, process.HLT_DoubleMu43NoFiltersNoVtx_v12, process.HLT_DoubleMu48NoFiltersNoVtx_v12, process.HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v23, process.HLT_Mu15_IsoVVVL_PFHT450_v23, process.HLT_Mu50_IsoVVVL_PFHT450_v23, process.HLT_Mu15_IsoVVVL_PFHT600_v27, process.HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v10, process.HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v10, process.HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v10, process.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v10, process.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v10, process.HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v10, process.HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v14, process.HLT_Mu8_v20, process.HLT_Mu17_v21, process.HLT_Mu19_v12, process.HLT_Mu18_Mu9_SameSign_v12, process.HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v18, process.HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_v2, process.HLT_DoubleMu3_DCA_PFMET50_PFMHT60_Mass2p0_noDCA_v2, process.HLT_TripleMu_5_3_3_Mass3p8_DCA_v11, process.HLT_IsoMu20_eta2p1_LooseDeepTauPFTauHPS27_eta2p1_CrossL1_v9, process.HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS180_eta2p1_v9, process.HLT_IsoMu24_eta2p1_LooseDeepTauPFTauHPS30_eta2p1_CrossL1_v9, process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS35_L2NN_eta2p1_CrossL1_v9, process.HLT_IsoMu50_AK8PFJet220_SoftDropMass40_v8, process.HLT_IsoMu50_AK8PFJet220_SoftDropMass40_PNetBB0p06_v5, process.HLT_IsoMu50_AK8PFJet230_SoftDropMass40_v8, process.HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p06_v5, process.HLT_IsoMu50_AK8PFJet230_SoftDropMass40_PNetBB0p10_v5, process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_CrossL1_v8, process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet60_CrossL1_v8, process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_PFJet75_CrossL1_v8, process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS20_eta2p1_SingleL1_v8, process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS45_L2NN_eta2p1_CrossL1_v8, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_L2NN_eta2p3_CrossL1_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_L2NN_eta2p3_CrossL1_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet60_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet26_L2NN_eta2p3_CrossL1_PFJet75_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Tight_eta2p3_CrossL1_ETau_Monitoring_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Medium_eta2p3_CrossL1_ETau_Monitoring_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet30_Loose_eta2p3_CrossL1_ETau_Monitoring_v2, process.HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Tight_eta2p3_CrossL1_v2, process.HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Medium_eta2p3_CrossL1_v2, process.HLT_IsoMu20_eta2p1_PNetTauhPFJet27_Loose_eta2p3_CrossL1_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet20_eta2p2_SingleL1_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet45_L2NN_eta2p3_CrossL1_v2, process.HLT_IsoMu24_eta2p1_PFHT250_v2, process.HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_v2, process.HLT_IsoMu24_eta2p1_PFHT250_QuadPFJet25_PNet1Tauh0p50_v2, process.HLT_IsoMu24_eta2p1_SinglePFJet25_PNet1Tauh0p50_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Loose_L2NN_eta2p3_CrossL1_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Medium_L2NN_eta2p3_CrossL1_v2, process.HLT_IsoMu24_eta2p1_PNetTauhPFJet130_Tight_L2NN_eta2p3_CrossL1_v2, process.HLT_DoubleL2Mu10NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v9, process.HLT_DoubleL2Mu12NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8, process.HLT_DoubleL2Mu14NoVtx_2Cha_VetoL3Mu0DxyMax1cm_v8, process.HLT_DoubleL3Mu16_10NoVtx_DxyMin0p01cm_v9, process.HLT_DoubleL3Mu18_10NoVtx_DxyMin0p01cm_v8, process.HLT_DoubleL3Mu20_10NoVtx_DxyMin0p01cm_v8, process.HLT_DoubleL2Mu_L3Mu16NoVtx_VetoL3Mu0DxyMax0p1cm_v8, process.HLT_DoubleL2Mu_L3Mu18NoVtx_VetoL3Mu0DxyMax0p1cm_v8, process.HLT_DoubleL2Mu10NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8, process.HLT_DoubleL2Mu12NoVtx_2Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v8, process.HLT_DoubleL3dTksMu16_10NoVtx_DxyMin0p01cm_v8, process.HLT_L2Mu50NoVtx_3Cha_CosmicSeed_VetoL3Mu0DxyMax1cm_v1, process.HLT_L2Mu50NoVtx_3Cha_VetoL3Mu0DxyMax1cm_v1, process.HLT_L3Mu30NoVtx_DxyMin0p01cm_v1, process.HLT_L3Mu50NoVtx_DxyMin0p01cm_v1, process.HLT_L3dTksMu10_NoVtx_DxyMin0p01cm_v8, process.HLT_DisplacedMu24_MediumChargedIsoDisplacedPFTauHPS24_v4, process.HLT_IsoMu27_MediumChargedIsoDisplacedPFTauHPS24_eta2p1_SingleL1_v4, process.HLT_CscCluster_Loose_v8, process.HLT_CscCluster_Medium_v8, process.HLT_CscCluster_Tight_v8, process.HLT_CscCluster50_Photon20Unseeded_v2, process.HLT_CscCluster50_Photon30Unseeded_v2, process.HLT_CscCluster100_Ele5_v2, process.HLT_CscCluster100_Mu5_v2, process.HLT_CscCluster100_PNetTauhPFJet10_Loose_v2, process.HLT_DoubleCscCluster75_v5, process.HLT_IsoTrk200_L1SingleMuShower_v2, process.HLT_IsoTrk400_L1SingleMuShower_v2, process.HLT_DoubleCscCluster100_v5, process.HLT_L1CSCShower_DTCluster50_v8, process.HLT_L1CSCShower_DTCluster75_v8, process.HLT_Mu50_L1SingleMuShower_v7, process.HLT_IsoMu24_OneProng32_v5, process.HLT_IsoMu24_eta2p1_MediumDeepTauPFTauHPS30_L2NN_eta2p1_OneProng_CrossL1_v4, process.Dataset_Muon0, process.Dataset_Muon1, process.Dataset_ScoutingPFRun3, process.ScoutingPFOutput, ))


# source module (EDM inputs)
process.source = cms.Source( "PoolSource",
    fileNames = cms.untracked.vstring(
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/5d7dcb34-d9bd-497b-8c60-9e1d0da0dec2.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/5d7dcb34-d9bd-497b-8c60-9e1d0da0dec2.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/5d7dcb34-d9bd-497b-8c60-9e1d0da0dec2.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/d750db2f-3be7-4943-82e2-4b24ce44cec5.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f45cee34-fde2-49cf-9c90-121222cbb876.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/97d0d47a-6d2e-4338-a6e3-e910190121d3.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/56c02023-d275-48af-a321-ca2c901d9d2e.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/df27d107-f57a-423b-a0d0-a47b5439561e.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/e55d7b7e-e382-40a5-af6a-0038ca202b6c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/e48a4007-0ee4-4f34-9ca3-aafb10af86fd.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/5b75604d-5b82-4b96-955d-bb25b5d05567.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/553ffd1e-20ac-430a-bb7f-892c2d777fd1.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f8680ed4-e4d3-41ab-b0df-297e00b8ab7a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f50c62d5-4428-4112-9638-c8f07ff037fa.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/5871d6a2-10bc-46e3-9978-8d390152945f.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/bdd3ed2c-1848-4cff-8be5-b3529bb64135.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/42e754c3-6716-4053-b8aa-1da040257ef8.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/005bbdd2-58d1-4b4e-bdc1-0a2303146654.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/27ee5d6f-63d9-4107-845a-c100dd3a1d50.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/0b32651c-5642-4229-a764-d46f802c7a8b.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/570dac27-042c-4fbf-8f1c-1de5c4baab07.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/8e945167-6812-4e46-b070-8021c5bf5a8e.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/b199a194-f510-4105-964b-b4f4aad265a4.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/611ff388-4f79-4645-8811-439ee6e91298.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/b9ca8ea1-a87d-4a64-b28b-bfa6a9dd1ee8.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/b22203c6-d620-409c-8b67-1e100e904a5e.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/98b03c6c-d884-40e6-8315-a2f37c56e039.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/363ad910-1201-4f2f-9101-24a7647c872b.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/be02b9a9-02ad-45bd-9e59-353382db5617.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/d811fa60-118b-4985-955e-8453a36150b0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/8bbd4277-a3db-4567-abd1-25970ee3b7a5.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/0a270c32-7754-4939-8636-7cfc21113eba.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/0ffa7ab7-29fa-4d3d-ab77-aa4c2577e2e4.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/49a2b9b2-4a45-42c2-ab9c-bce16d3b4ddd.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/3ab1bfa5-d27e-4a32-8f85-991574f3b615.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/3638b4a5-ddeb-4da0-9ab9-653cbaafa549.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/b12bb54f-06ac-4305-84c0-1afec3ad0552.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/df30483e-175d-46fe-b337-65ef9e3ec04c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/79b25f59-103d-4dee-9e54-d4dd111ae127.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/203dc82a-d1d2-4029-afb6-2bbd53ce4977.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/7e141417-1ab0-48b5-9a48-d23fe629ff34.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/c6d56459-7a38-4557-902b-b9f77fa736b0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/090d09ce-3269-4cc2-b8b4-33f89b19d540.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/be68d922-ed4c-4c84-8c07-45a82c6327a1.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/d294b8e6-489e-4838-bed7-a48f4dab9d24.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/39123ad9-b1f3-4186-8eae-0a296c6ee2bb.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/f732d584-6c05-42af-bbca-e71e5f5ada32.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/cc499448-04c8-4fb1-a976-f78050961011.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/845bbc19-0a41-44ce-b0fc-207eb8c8627f.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/3fd0341d-b022-4b57-88e5-00e3b5e3c462.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/56473c85-5137-458e-a7c6-b463d1728f1d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/96b518b4-76fb-4396-9889-d05ab15a7113.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/486f6b7a-6140-44d7-a9f3-b28427b2aaed.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/beb4ea95-3ca0-4807-b3d5-fd290992118d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/1245c2fd-2707-4e2e-996d-961b49824e54.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/ef51ab74-d313-486c-9895-01d200f2387a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/529755b8-7645-48bc-9edf-ad1770c3a7ac.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/85dc59a5-7a15-4e08-add2-03f71c2dce17.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/1b7daf9a-87ab-45ff-aa7f-8412e2ffea8d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/79de18f6-de36-4224-9a22-d4471488fa5a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/97869184-c153-42b6-a325-fd8d13ce45c6.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/32b40362-3b64-46c3-abc8-73cae18fde41.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/c7a6b7a2-621c-4551-86d6-874b6708d0ac.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/94220caa-615e-4eda-8c9c-45117aa4101b.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/7b9702eb-2264-4ee8-af72-e2d004d16cbc.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/e34f5cfb-5eac-446f-96a6-bfd370127ca3.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/0e7f6999-c6b5-4da4-995c-6226fa529c0f.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/d801cbe1-a002-48c9-a458-6126dade232c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/8a816841-146a-4535-ab77-8e32d3794a2c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/b3a90970-3ddf-4ed4-ac00-b1d914422b33.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/1c2855f7-19cb-44db-909d-dd793ee2bdd1.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/569dbefa-b6e0-4993-a23b-d318a40c3d12.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/f44c23b1-215c-4863-b6ce-15283a223a60.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/d77250fc-edc2-49c2-bd24-194d4bd4abff.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/7e5511c8-a9bc-45d7-b875-16673ef52636.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/7e8b5959-c425-4f91-a044-47ef65b436b1.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/c42ca615-14a3-40f7-ba32-7cd37dd88834.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/b60a46fe-c76b-40c0-97b0-a6f50e6230f7.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/500a99de-8e06-4ef7-b1dd-da8312a896a0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/a7141281-8b10-4f86-a7ba-611b1c481f7a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/3a448940-0da1-4966-bf19-7ef7e64ab940.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/7f396248-3a45-456f-96ec-803466362757.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/bef13dd8-005e-4f54-9c16-51cac7305dc3.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/867bf2e2-8b96-4635-ab62-22d64749eb3d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/6c930a7a-18d4-4a0d-9b08-66ef36309c05.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/922293a7-8ed6-4ba2-86ca-eaf7481f6422.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/1d237cba-dfd6-4509-9690-29071d28c346.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/3401fc57-3f56-474a-a64b-624f3c5cd8b5.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/7072c4e2-db19-46e0-a7e8-01c36c779872.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/00bd6d76-9719-44c7-bca7-64216fcc6c6a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/d47cf5ca-6687-4f78-b205-63aebc3933d9.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/11bad7fa-056f-4709-8d89-98ab6f3cfaba.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/598ade34-4079-4dc6-bf0e-61d8e653db09.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/29976cee-c9b2-418e-bd87-d0a687d7518c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/8bb8a601-e492-4df1-9de2-4e66b6ff351d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/b3aef5b5-ba2a-4514-b3ab-ee3fdf1a5ce0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/46157de6-e310-40f8-a690-ff3040f1a04b.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/055fc5f2-4379-4955-8a7f-0dda6ced4fe6.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/85e1bd65-a04d-451d-8148-9dcbad727ab0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f9db575c-c272-45e7-8719-4e83262bfa47.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/eb9a4734-5bc8-4acc-95eb-53823165165c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/1eab5d9d-ce5a-4358-ade7-3a7966117c54.root'
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/d750db2f-3be7-4943-82e2-4b24ce44cec5.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f45cee34-fde2-49cf-9c90-121222cbb876.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/97d0d47a-6d2e-4338-a6e3-e910190121d3.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/56c02023-d275-48af-a321-ca2c901d9d2e.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/df27d107-f57a-423b-a0d0-a47b5439561e.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/e55d7b7e-e382-40a5-af6a-0038ca202b6c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/e48a4007-0ee4-4f34-9ca3-aafb10af86fd.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/5b75604d-5b82-4b96-955d-bb25b5d05567.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/553ffd1e-20ac-430a-bb7f-892c2d777fd1.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f8680ed4-e4d3-41ab-b0df-297e00b8ab7a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f50c62d5-4428-4112-9638-c8f07ff037fa.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/5871d6a2-10bc-46e3-9978-8d390152945f.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/bdd3ed2c-1848-4cff-8be5-b3529bb64135.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/42e754c3-6716-4053-b8aa-1da040257ef8.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/005bbdd2-58d1-4b4e-bdc1-0a2303146654.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/27ee5d6f-63d9-4107-845a-c100dd3a1d50.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/0b32651c-5642-4229-a764-d46f802c7a8b.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/570dac27-042c-4fbf-8f1c-1de5c4baab07.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/8e945167-6812-4e46-b070-8021c5bf5a8e.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/b199a194-f510-4105-964b-b4f4aad265a4.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/611ff388-4f79-4645-8811-439ee6e91298.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/b9ca8ea1-a87d-4a64-b28b-bfa6a9dd1ee8.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/b22203c6-d620-409c-8b67-1e100e904a5e.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/98b03c6c-d884-40e6-8315-a2f37c56e039.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/363ad910-1201-4f2f-9101-24a7647c872b.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/be02b9a9-02ad-45bd-9e59-353382db5617.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/d811fa60-118b-4985-955e-8453a36150b0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/8bbd4277-a3db-4567-abd1-25970ee3b7a5.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/0a270c32-7754-4939-8636-7cfc21113eba.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/0ffa7ab7-29fa-4d3d-ab77-aa4c2577e2e4.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/49a2b9b2-4a45-42c2-ab9c-bce16d3b4ddd.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/3ab1bfa5-d27e-4a32-8f85-991574f3b615.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/3638b4a5-ddeb-4da0-9ab9-653cbaafa549.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/b12bb54f-06ac-4305-84c0-1afec3ad0552.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/df30483e-175d-46fe-b337-65ef9e3ec04c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/79b25f59-103d-4dee-9e54-d4dd111ae127.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/203dc82a-d1d2-4029-afb6-2bbd53ce4977.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/7e141417-1ab0-48b5-9a48-d23fe629ff34.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/c6d56459-7a38-4557-902b-b9f77fa736b0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/090d09ce-3269-4cc2-b8b4-33f89b19d540.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/be68d922-ed4c-4c84-8c07-45a82c6327a1.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/d294b8e6-489e-4838-bed7-a48f4dab9d24.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/39123ad9-b1f3-4186-8eae-0a296c6ee2bb.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/f732d584-6c05-42af-bbca-e71e5f5ada32.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/cc499448-04c8-4fb1-a976-f78050961011.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/845bbc19-0a41-44ce-b0fc-207eb8c8627f.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/3fd0341d-b022-4b57-88e5-00e3b5e3c462.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/56473c85-5137-458e-a7c6-b463d1728f1d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/96b518b4-76fb-4396-9889-d05ab15a7113.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/486f6b7a-6140-44d7-a9f3-b28427b2aaed.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/beb4ea95-3ca0-4807-b3d5-fd290992118d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/1245c2fd-2707-4e2e-996d-961b49824e54.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/ef51ab74-d313-486c-9895-01d200f2387a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/529755b8-7645-48bc-9edf-ad1770c3a7ac.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/85dc59a5-7a15-4e08-add2-03f71c2dce17.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/1b7daf9a-87ab-45ff-aa7f-8412e2ffea8d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/79de18f6-de36-4224-9a22-d4471488fa5a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/97869184-c153-42b6-a325-fd8d13ce45c6.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/32b40362-3b64-46c3-abc8-73cae18fde41.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/c7a6b7a2-621c-4551-86d6-874b6708d0ac.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/94220caa-615e-4eda-8c9c-45117aa4101b.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/7b9702eb-2264-4ee8-af72-e2d004d16cbc.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/e34f5cfb-5eac-446f-96a6-bfd370127ca3.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/0e7f6999-c6b5-4da4-995c-6226fa529c0f.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/d801cbe1-a002-48c9-a458-6126dade232c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/8a816841-146a-4535-ab77-8e32d3794a2c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/b3a90970-3ddf-4ed4-ac00-b1d914422b33.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/1c2855f7-19cb-44db-909d-dd793ee2bdd1.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/569dbefa-b6e0-4993-a23b-d318a40c3d12.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/f44c23b1-215c-4863-b6ce-15283a223a60.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/d77250fc-edc2-49c2-bd24-194d4bd4abff.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/7e5511c8-a9bc-45d7-b875-16673ef52636.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/7e8b5959-c425-4f91-a044-47ef65b436b1.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/c42ca615-14a3-40f7-ba32-7cd37dd88834.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/b60a46fe-c76b-40c0-97b0-a6f50e6230f7.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/500a99de-8e06-4ef7-b1dd-da8312a896a0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/a7141281-8b10-4f86-a7ba-611b1c481f7a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/3a448940-0da1-4966-bf19-7ef7e64ab940.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/7f396248-3a45-456f-96ec-803466362757.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/bef13dd8-005e-4f54-9c16-51cac7305dc3.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/867bf2e2-8b96-4635-ab62-22d64749eb3d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/6c930a7a-18d4-4a0d-9b08-66ef36309c05.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540001/922293a7-8ed6-4ba2-86ca-eaf7481f6422.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/1d237cba-dfd6-4509-9690-29071d28c346.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/3401fc57-3f56-474a-a64b-624f3c5cd8b5.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/7072c4e2-db19-46e0-a7e8-01c36c779872.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/00bd6d76-9719-44c7-bca7-64216fcc6c6a.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/d47cf5ca-6687-4f78-b205-63aebc3933d9.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/11bad7fa-056f-4709-8d89-98ab6f3cfaba.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/598ade34-4079-4dc6-bf0e-61d8e653db09.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550003/29976cee-c9b2-418e-bd87-d0a687d7518c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550002/8bb8a601-e492-4df1-9de2-4e66b6ff351d.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/b3aef5b5-ba2a-4514-b3ab-ee3fdf1a5ce0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/46157de6-e310-40f8-a690-ff3040f1a04b.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/055fc5f2-4379-4955-8a7f-0dda6ced4fe6.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/85e1bd65-a04d-451d-8148-9dcbad727ab0.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f9db575c-c272-45e7-8719-4e83262bfa47.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/eb9a4734-5bc8-4acc-95eb-53823165165c.root',
'/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/1eab5d9d-ce5a-4358-ade7-3a7966117c54.root'
    ),
    inputCommands = cms.untracked.vstring(
        'keep *'
    )
)

# run the Full L1T emulator, then repack the data into a new RAW collection, to be used by the HLT
from HLTrigger.Configuration.CustomConfigs import L1REPACK
process = L1REPACK(process,"uGT")

# limit the number of events to be processed
process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32( -1 )
)

# enable TrigReport, TimeReport and MultiThreading
process.options.wantSummary = True
process.options.numberOfThreads = 1
process.options.numberOfStreams = 0

# override the GlobalTag, connection string and pfnPrefix
if 'GlobalTag' in process.__dict__:
    from Configuration.AlCa.GlobalTag import GlobalTag as customiseGlobalTag
    process.GlobalTag = customiseGlobalTag(process.GlobalTag, globaltag = 'auto:phase1_2024_realistic', conditions = 'L1Menu_Collisions2024_v1_1_0_xml,L1TUtmTriggerMenuRcd,,,9999-12-31 23:59:59.000')

# show summaries from trigger analysers used at HLT
if 'MessageLogger' in process.__dict__:
    process.MessageLogger.TriggerSummaryProducerAOD = cms.untracked.PSet()
    process.MessageLogger.L1GtTrigReport = cms.untracked.PSet()
    process.MessageLogger.L1TGlobalSummary = cms.untracked.PSet()
    process.MessageLogger.HLTrigReport = cms.untracked.PSet()
    process.MessageLogger.FastReport = cms.untracked.PSet()
    process.MessageLogger.ThroughputService = cms.untracked.PSet()

# load the DQMStore and DQMRootOutputModule
process.load( "DQMServices.Core.DQMStore_cfi" )

process.dqmOutput = cms.OutputModule("DQMRootOutputModule",
    fileName = cms.untracked.string("DQMIO.root")
)

process.DQMOutput = cms.FinalPath( process.dqmOutput )
process.schedule.append( process.DQMOutput )

# add specific customizations
_customInfo = {}
_customInfo['menuType'  ]= "GRun"
_customInfo['globalTags']= {}
_customInfo['globalTags'][True ] = "auto:run3_hlt_GRun"
_customInfo['globalTags'][False] = "auto:run3_mc_GRun"
_customInfo['inputFiles']={}
_customInfo['inputFiles'][True]  = "file:RelVal_Raw_GRun_DATA.root"
_customInfo['inputFiles'][False] = "file:RelVal_Raw_GRun_MC.root"
_customInfo['maxEvents' ]=  -1
_customInfo['globalTag' ]= "auto:phase1_2024_realistic"
_customInfo['inputFile' ]=  ['/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2540000/005264ab-2a76-4f83-ac29-8e27a73cdc7c.root',
                             '/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/5d7dcb34-d9bd-497b-8c60-9e1d0da0dec2.root',
                             '/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/d750db2f-3be7-4943-82e2-4b24ce44cec5.root',
                             '/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/f45cee34-fde2-49cf-9c90-121222cbb876.root',
                             '/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/97d0d47a-6d2e-4338-a6e3-e910190121d3.root',
                             '/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/56c02023-d275-48af-a321-ca2c901d9d2e.root',
                             '/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/df27d107-f57a-423b-a0d0-a47b5439561e.root',
                             '/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550001/e55d7b7e-e382-40a5-af6a-0038ca202b6c.root',
                             '/store/mc/Run3Winter24Digi/JPsiToMuMu_PT-0to100_pythia8-gun/GEN-SIM-RAW/KeepSi_133X_mcRun3_2024_realistic_v8-v2/2550000/e48a4007-0ee4-4f34-9ca3-aafb10af86fd.root']
_customInfo['realData'  ]=  False

from HLTrigger.Configuration.customizeHLTforALL import customizeHLTforAll
process = customizeHLTforAll(process,"GRun",_customInfo)

from HLTrigger.Configuration.customizeHLTforCMSSW import customizeHLTforCMSSW
process = customizeHLTforCMSSW(process,"GRun")

# Eras-based customisations
from HLTrigger.Configuration.Eras import modifyHLTforEras
modifyHLTforEras(process)

